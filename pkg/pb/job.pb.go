// Code generated by protoc-gen-go. DO NOT EDIT.
// source: job.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreateJobRequest struct {
	X          *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=_" json:"_,omitempty"`
	ClusterId  *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AppId      *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppVersion *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
	JobAction  *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=job_action,json=jobAction" json:"job_action,omitempty"`
	Directive  *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=directive" json:"directive,omitempty"`
}

func (m *CreateJobRequest) Reset()                    { *m = CreateJobRequest{} }
func (m *CreateJobRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateJobRequest) ProtoMessage()               {}
func (*CreateJobRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CreateJobRequest) GetX() *google_protobuf.StringValue {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *CreateJobRequest) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *CreateJobRequest) GetAppId() *google_protobuf.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *CreateJobRequest) GetAppVersion() *google_protobuf.StringValue {
	if m != nil {
		return m.AppVersion
	}
	return nil
}

func (m *CreateJobRequest) GetJobAction() *google_protobuf.StringValue {
	if m != nil {
		return m.JobAction
	}
	return nil
}

func (m *CreateJobRequest) GetDirective() *google_protobuf.StringValue {
	if m != nil {
		return m.Directive
	}
	return nil
}

type CreateJobResponse struct {
	JobId      *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	ClusterId  *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AppId      *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppVersion *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
}

func (m *CreateJobResponse) Reset()                    { *m = CreateJobResponse{} }
func (m *CreateJobResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateJobResponse) ProtoMessage()               {}
func (*CreateJobResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CreateJobResponse) GetJobId() *google_protobuf.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *CreateJobResponse) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *CreateJobResponse) GetAppId() *google_protobuf.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *CreateJobResponse) GetAppVersion() *google_protobuf.StringValue {
	if m != nil {
		return m.AppVersion
	}
	return nil
}

type Job struct {
	JobId      *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	ClusterId  *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AppId      *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppVersion *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
	JobAction  *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=job_action,json=jobAction" json:"job_action,omitempty"`
	Status     *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	ErrorCode  *google_protobuf.UInt32Value `protobuf:"bytes,7,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Directive  *google_protobuf.StringValue `protobuf:"bytes,8,opt,name=directive" json:"directive,omitempty"`
	Executor   *google_protobuf.StringValue `protobuf:"bytes,9,opt,name=executor" json:"executor,omitempty"`
	TaskCount  *google_protobuf.UInt32Value `protobuf:"bytes,10,opt,name=task_count,json=taskCount" json:"task_count,omitempty"`
	Owner      *google_protobuf.StringValue `protobuf:"bytes,11,opt,name=owner" json:"owner,omitempty"`
	CreateTime *google_protobuf1.Timestamp  `protobuf:"bytes,12,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime *google_protobuf1.Timestamp  `protobuf:"bytes,13,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Job) GetJobId() *google_protobuf.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *Job) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *Job) GetAppId() *google_protobuf.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *Job) GetAppVersion() *google_protobuf.StringValue {
	if m != nil {
		return m.AppVersion
	}
	return nil
}

func (m *Job) GetJobAction() *google_protobuf.StringValue {
	if m != nil {
		return m.JobAction
	}
	return nil
}

func (m *Job) GetStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Job) GetErrorCode() *google_protobuf.UInt32Value {
	if m != nil {
		return m.ErrorCode
	}
	return nil
}

func (m *Job) GetDirective() *google_protobuf.StringValue {
	if m != nil {
		return m.Directive
	}
	return nil
}

func (m *Job) GetExecutor() *google_protobuf.StringValue {
	if m != nil {
		return m.Executor
	}
	return nil
}

func (m *Job) GetTaskCount() *google_protobuf.UInt32Value {
	if m != nil {
		return m.TaskCount
	}
	return nil
}

func (m *Job) GetOwner() *google_protobuf.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Job) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Job) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type DescribeJobsRequest struct {
	JobId      []string                     `protobuf:"bytes,1,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
	ClusterId  *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AppId      *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppVersion *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
	Status     []string                     `protobuf:"bytes,5,rep,name=status" json:"status,omitempty"`
	Limit      uint32                       `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
	Offset     uint32                       `protobuf:"varint,7,opt,name=offset" json:"offset,omitempty"`
}

func (m *DescribeJobsRequest) Reset()                    { *m = DescribeJobsRequest{} }
func (m *DescribeJobsRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeJobsRequest) ProtoMessage()               {}
func (*DescribeJobsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *DescribeJobsRequest) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *DescribeJobsRequest) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DescribeJobsRequest) GetAppId() *google_protobuf.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *DescribeJobsRequest) GetAppVersion() *google_protobuf.StringValue {
	if m != nil {
		return m.AppVersion
	}
	return nil
}

func (m *DescribeJobsRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeJobsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeJobsRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type DescribeJobsResponse struct {
	TotalCount uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	Limit      uint32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	JobSet     []*Job `protobuf:"bytes,3,rep,name=job_set,json=jobSet" json:"job_set,omitempty"`
}

func (m *DescribeJobsResponse) Reset()                    { *m = DescribeJobsResponse{} }
func (m *DescribeJobsResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeJobsResponse) ProtoMessage()               {}
func (*DescribeJobsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *DescribeJobsResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeJobsResponse) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeJobsResponse) GetJobSet() []*Job {
	if m != nil {
		return m.JobSet
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateJobRequest)(nil), "openpitrix.CreateJobRequest")
	proto.RegisterType((*CreateJobResponse)(nil), "openpitrix.CreateJobResponse")
	proto.RegisterType((*Job)(nil), "openpitrix.Job")
	proto.RegisterType((*DescribeJobsRequest)(nil), "openpitrix.DescribeJobsRequest")
	proto.RegisterType((*DescribeJobsResponse)(nil), "openpitrix.DescribeJobsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for JobManager service

type JobManagerClient interface {
	CreateJob(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*CreateJobResponse, error)
	DescribeJobs(ctx context.Context, in *DescribeJobsRequest, opts ...grpc.CallOption) (*DescribeJobsResponse, error)
}

type jobManagerClient struct {
	cc *grpc.ClientConn
}

func NewJobManagerClient(cc *grpc.ClientConn) JobManagerClient {
	return &jobManagerClient{cc}
}

func (c *jobManagerClient) CreateJob(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*CreateJobResponse, error) {
	out := new(CreateJobResponse)
	err := grpc.Invoke(ctx, "/openpitrix.JobManager/CreateJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobManagerClient) DescribeJobs(ctx context.Context, in *DescribeJobsRequest, opts ...grpc.CallOption) (*DescribeJobsResponse, error) {
	out := new(DescribeJobsResponse)
	err := grpc.Invoke(ctx, "/openpitrix.JobManager/DescribeJobs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for JobManager service

type JobManagerServer interface {
	CreateJob(context.Context, *CreateJobRequest) (*CreateJobResponse, error)
	DescribeJobs(context.Context, *DescribeJobsRequest) (*DescribeJobsResponse, error)
}

func RegisterJobManagerServer(s *grpc.Server, srv JobManagerServer) {
	s.RegisterService(&_JobManager_serviceDesc, srv)
}

func _JobManager_CreateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobManagerServer).CreateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.JobManager/CreateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobManagerServer).CreateJob(ctx, req.(*CreateJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobManager_DescribeJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobManagerServer).DescribeJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.JobManager/DescribeJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobManagerServer).DescribeJobs(ctx, req.(*DescribeJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.JobManager",
	HandlerType: (*JobManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateJob",
			Handler:    _JobManager_CreateJob_Handler,
		},
		{
			MethodName: "DescribeJobs",
			Handler:    _JobManager_DescribeJobs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "job.proto",
}

func init() { proto.RegisterFile("job.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 742 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x96, 0x4f, 0x6f, 0xdb, 0x36,
	0x18, 0xc6, 0x27, 0x7b, 0x72, 0x62, 0x3a, 0xc6, 0x32, 0x2e, 0x19, 0x34, 0x2f, 0x5b, 0x0c, 0x9d,
	0xbc, 0x6c, 0x91, 0x12, 0x67, 0x87, 0xc1, 0xc1, 0x0e, 0x5e, 0x76, 0xa8, 0x03, 0x14, 0x0d, 0x9c,
	0x36, 0x87, 0x5e, 0x0c, 0x4a, 0xa2, 0x1d, 0xaa, 0x8a, 0x5e, 0x86, 0xa4, 0x63, 0x5f, 0xdb, 0x8f,
	0x90, 0x7e, 0x84, 0x7e, 0xa4, 0x7e, 0x85, 0x02, 0xfd, 0x0c, 0x05, 0x8a, 0xa2, 0x20, 0x25, 0xbb,
	0xce, 0x3f, 0x54, 0x45, 0x4f, 0x41, 0x4f, 0x86, 0xc8, 0xdf, 0xe3, 0xf7, 0xe1, 0xeb, 0x87, 0xaf,
	0x8c, 0xaa, 0x31, 0x04, 0x1e, 0x17, 0xa0, 0x00, 0x23, 0xe0, 0x34, 0xe5, 0x4c, 0x09, 0x36, 0x6d,
	0xfc, 0x3e, 0x02, 0x18, 0x25, 0xd4, 0x37, 0x3b, 0xc1, 0x78, 0xe8, 0x4f, 0x04, 0xe1, 0x9c, 0x0a,
	0x99, 0xb1, 0x8d, 0xcd, 0xeb, 0xfb, 0x8a, 0x9d, 0x51, 0xa9, 0xc8, 0x19, 0xcf, 0x81, 0x8d, 0x1c,
	0x20, 0x9c, 0xf9, 0x24, 0x4d, 0x41, 0x11, 0xc5, 0x20, 0x9d, 0xc9, 0xff, 0x32, 0x1f, 0xe1, 0xf6,
	0x88, 0xa6, 0xdb, 0x72, 0x42, 0x46, 0x23, 0x2a, 0x7c, 0xe0, 0x86, 0xb8, 0x49, 0xbb, 0x6f, 0x4b,
	0x68, 0xf5, 0x40, 0x50, 0xa2, 0xe8, 0x21, 0x04, 0x7d, 0x7a, 0x3e, 0xa6, 0x52, 0xe1, 0x3f, 0x90,
	0x35, 0x70, 0xac, 0xa6, 0xd5, 0xaa, 0xb5, 0x37, 0xbc, 0xac, 0x98, 0x37, 0x73, 0xe3, 0x1d, 0x2b,
	0xc1, 0xd2, 0xd1, 0x09, 0x49, 0xc6, 0xb4, 0xff, 0x1d, 0xde, 0x47, 0x28, 0x4c, 0xc6, 0x52, 0x51,
	0x31, 0x60, 0x91, 0x53, 0x2a, 0xa0, 0xa9, 0xe6, 0x7c, 0x2f, 0xc2, 0x7b, 0xa8, 0x42, 0x38, 0xd7,
	0xc2, 0x72, 0x01, 0xa1, 0x4d, 0x38, 0xef, 0x45, 0xf8, 0x5f, 0x54, 0xd3, 0xa2, 0x0b, 0x2a, 0x24,
	0x83, 0xd4, 0xf9, 0xbe, 0x80, 0x12, 0x11, 0xce, 0x4f, 0x32, 0x5e, 0x1b, 0x8e, 0x21, 0x18, 0x90,
	0x50, 0x77, 0xc1, 0xb1, 0x8b, 0x18, 0x8e, 0x21, 0xe8, 0x1a, 0x1c, 0x77, 0x50, 0x35, 0x62, 0x82,
	0x86, 0x8a, 0x5d, 0x50, 0xa7, 0x52, 0x44, 0x3b, 0xc7, 0xdd, 0x77, 0x16, 0xfa, 0x71, 0xa1, 0xd3,
	0x92, 0x43, 0x2a, 0xa9, 0x6e, 0x81, 0xb6, 0xc3, 0xa2, 0x42, 0xfd, 0xb6, 0x63, 0x08, 0x7a, 0xd1,
	0xbd, 0x6b, 0xba, 0xfb, 0xde, 0x46, 0xe5, 0x43, 0x08, 0xbe, 0x8d, 0xd3, 0x7e, 0x5d, 0xc4, 0xfe,
	0x46, 0x15, 0xa9, 0x88, 0x1a, 0xcb, 0x42, 0xf9, 0xca, 0x59, 0x5d, 0x92, 0x0a, 0x01, 0x62, 0x10,
	0x42, 0x44, 0x9d, 0xa5, 0x3b, 0x94, 0x4f, 0x7a, 0xa9, 0xda, 0x6b, 0xe7, 0x25, 0x0d, 0x7f, 0x00,
	0x11, 0xbd, 0x9a, 0xea, 0xe5, 0x2f, 0x4a, 0x35, 0xfe, 0x07, 0x2d, 0xd3, 0x29, 0x0d, 0xc7, 0x0a,
	0x84, 0x53, 0x2d, 0x20, 0x9d, 0xd3, 0xda, 0xb2, 0x22, 0xf2, 0xd9, 0x20, 0x84, 0x71, 0xaa, 0x1c,
	0x54, 0xc4, 0xb2, 0xe6, 0x0f, 0x34, 0x8e, 0xdb, 0xc8, 0x86, 0x49, 0x4a, 0x85, 0x53, 0x2b, 0xf2,
	0xab, 0x1a, 0x14, 0xef, 0xa3, 0x5a, 0x68, 0xee, 0xdf, 0x40, 0x0f, 0x54, 0x67, 0xc5, 0x28, 0x1b,
	0x37, 0x94, 0x8f, 0x67, 0xd3, 0xb6, 0x8f, 0x32, 0x5c, 0x2f, 0x68, 0x71, 0xd6, 0xea, 0x4c, 0x5c,
	0xff, 0xbc, 0x38, 0xc3, 0xf5, 0x82, 0xfb, 0xaa, 0x84, 0x7e, 0xfa, 0x9f, 0xca, 0x50, 0xb0, 0x40,
	0x5f, 0x7e, 0x39, 0x9b, 0xb3, 0xeb, 0x0b, 0xd7, 0xa1, 0xdc, 0xaa, 0xde, 0xdb, 0xc0, 0xff, 0x3c,
	0xcf, 0xac, 0x6d, 0xce, 0x31, 0x4b, 0xe5, 0x1a, 0xb2, 0x13, 0x76, 0xc6, 0x94, 0x89, 0x72, 0xbd,
	0x9f, 0x3d, 0x68, 0x1a, 0x86, 0x43, 0x49, 0x95, 0xc9, 0x69, 0xbd, 0x9f, 0x3f, 0xb9, 0x13, 0xb4,
	0x76, 0xb5, 0x49, 0xf9, 0x88, 0xdc, 0x44, 0x35, 0x05, 0x8a, 0x24, 0x79, 0x52, 0x2c, 0x23, 0x42,
	0x66, 0x29, 0x0b, 0xc3, 0xbc, 0x4c, 0x69, 0xb1, 0x4c, 0x0b, 0x2d, 0xe9, 0xe6, 0xea, 0x3a, 0xe5,
	0x66, 0xb9, 0x55, 0x6b, 0xff, 0xe0, 0x7d, 0x7a, 0x09, 0x7b, 0x7a, 0x06, 0xeb, 0xe6, 0x1f, 0x53,
	0xd5, 0xfe, 0x60, 0x21, 0x74, 0x08, 0xc1, 0x43, 0x92, 0x92, 0x11, 0x15, 0x38, 0x41, 0xd5, 0xf9,
	0x9c, 0xc6, 0x1b, 0x8b, 0xa2, 0xeb, 0x2f, 0xca, 0xc6, 0x6f, 0x77, 0xec, 0x66, 0xce, 0x5d, 0xf7,
	0xb2, 0xbb, 0x82, 0xf3, 0x14, 0x35, 0x63, 0x08, 0x5e, 0xbc, 0x7e, 0xf3, 0xb2, 0x54, 0x77, 0x97,
	0xfd, 0x8b, 0x5d, 0x3f, 0x86, 0x40, 0x76, 0xac, 0x2d, 0xfc, 0xdc, 0x42, 0x2b, 0x8b, 0xc7, 0xc6,
	0x9b, 0x8b, 0xdf, 0x79, 0x4b, 0x6a, 0x1a, 0xcd, 0xbb, 0x81, 0xbc, 0xae, 0x77, 0xd9, 0xfd, 0x15,
	0xff, 0x12, 0xe5, 0x5b, 0xba, 0xb2, 0x6c, 0x4e, 0x98, 0x3a, 0x6d, 0x0e, 0x59, 0xa2, 0xa8, 0x30,
	0x36, 0x10, 0x9e, 0xdb, 0xf8, 0x6f, 0x7a, 0xd9, 0x3d, 0xc7, 0x0f, 0x10, 0x7e, 0xc4, 0x69, 0x7a,
	0xc4, 0x04, 0x65, 0xd3, 0xe6, 0x91, 0x80, 0x98, 0x86, 0xca, 0xfd, 0xf3, 0xb6, 0x55, 0xbc, 0x7e,
	0xaa, 0x14, 0x97, 0x1d, 0xdf, 0x5f, 0x70, 0xc2, 0xa0, 0x6d, 0xef, 0x78, 0x3b, 0xde, 0xee, 0x96,
	0x65, 0xb5, 0x57, 0x09, 0xe7, 0x09, 0x0b, 0xcd, 0x5f, 0x0d, 0x3f, 0x96, 0x90, 0x76, 0x6e, 0xac,
	0x3c, 0x2d, 0xf1, 0x20, 0xa8, 0x98, 0x6c, 0xed, 0x7d, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x8c, 0xdc,
	0x31, 0x82, 0x2b, 0x09, 0x00, 0x00,
}
