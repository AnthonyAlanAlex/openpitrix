// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf2 "github.com/golang/protobuf/ptypes/wrappers"
import google_protobuf3 "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreateClusterRequest struct {
	AppId         *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	VersionId     *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	RuntimeId     *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=runtime_id,json=runtimeId" json:"runtime_id,omitempty"`
	Conf          *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=conf" json:"conf,omitempty"`
	AdvancedParam []string                      `protobuf:"bytes,5,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *CreateClusterRequest) Reset()                    { *m = CreateClusterRequest{} }
func (m *CreateClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateClusterRequest) ProtoMessage()               {}
func (*CreateClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *CreateClusterRequest) GetAppId() *google_protobuf2.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *CreateClusterRequest) GetVersionId() *google_protobuf2.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *CreateClusterRequest) GetRuntimeId() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *CreateClusterRequest) GetConf() *google_protobuf2.StringValue {
	if m != nil {
		return m.Conf
	}
	return nil
}

func (m *CreateClusterRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type CreateClusterResponse struct {
	ClusterId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *CreateClusterResponse) Reset()                    { *m = CreateClusterResponse{} }
func (m *CreateClusterResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateClusterResponse) ProtoMessage()               {}
func (*CreateClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *CreateClusterResponse) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *CreateClusterResponse) GetJobId() *google_protobuf2.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type ModifyClusterRequest struct {
	Cluster                *Cluster               `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	ClusterNodeSet         []*ClusterNode         `protobuf:"bytes,2,rep,name=cluster_node_set,json=clusterNodeSet" json:"cluster_node_set,omitempty"`
	ClusterRoleSet         []*ClusterRole         `protobuf:"bytes,3,rep,name=cluster_role_set,json=clusterRoleSet" json:"cluster_role_set,omitempty"`
	ClusterLinkSet         []*ClusterLink         `protobuf:"bytes,4,rep,name=cluster_link_set,json=clusterLinkSet" json:"cluster_link_set,omitempty"`
	ClusterCommonSet       []*ClusterCommon       `protobuf:"bytes,5,rep,name=cluster_common_set,json=clusterCommonSet" json:"cluster_common_set,omitempty"`
	ClusterLoadbalancerSet []*ClusterLoadbalancer `protobuf:"bytes,6,rep,name=cluster_loadbalancer_set,json=clusterLoadbalancerSet" json:"cluster_loadbalancer_set,omitempty"`
}

func (m *ModifyClusterRequest) Reset()                    { *m = ModifyClusterRequest{} }
func (m *ModifyClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyClusterRequest) ProtoMessage()               {}
func (*ModifyClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *ModifyClusterRequest) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *ModifyClusterRequest) GetClusterNodeSet() []*ClusterNode {
	if m != nil {
		return m.ClusterNodeSet
	}
	return nil
}

func (m *ModifyClusterRequest) GetClusterRoleSet() []*ClusterRole {
	if m != nil {
		return m.ClusterRoleSet
	}
	return nil
}

func (m *ModifyClusterRequest) GetClusterLinkSet() []*ClusterLink {
	if m != nil {
		return m.ClusterLinkSet
	}
	return nil
}

func (m *ModifyClusterRequest) GetClusterCommonSet() []*ClusterCommon {
	if m != nil {
		return m.ClusterCommonSet
	}
	return nil
}

func (m *ModifyClusterRequest) GetClusterLoadbalancerSet() []*ClusterLoadbalancer {
	if m != nil {
		return m.ClusterLoadbalancerSet
	}
	return nil
}

type ModifyClusterResponse struct {
	ClusterId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
}

func (m *ModifyClusterResponse) Reset()                    { *m = ModifyClusterResponse{} }
func (m *ModifyClusterResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyClusterResponse) ProtoMessage()               {}
func (*ModifyClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *ModifyClusterResponse) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

type ModifyClusterNodeRequest struct {
	ClusterNode *ClusterNode `protobuf:"bytes,1,opt,name=cluster_node,json=clusterNode" json:"cluster_node,omitempty"`
}

func (m *ModifyClusterNodeRequest) Reset()                    { *m = ModifyClusterNodeRequest{} }
func (m *ModifyClusterNodeRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyClusterNodeRequest) ProtoMessage()               {}
func (*ModifyClusterNodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *ModifyClusterNodeRequest) GetClusterNode() *ClusterNode {
	if m != nil {
		return m.ClusterNode
	}
	return nil
}

type ModifyClusterNodeResponse struct {
	NodeId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (m *ModifyClusterNodeResponse) Reset()                    { *m = ModifyClusterNodeResponse{} }
func (m *ModifyClusterNodeResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyClusterNodeResponse) ProtoMessage()               {}
func (*ModifyClusterNodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *ModifyClusterNodeResponse) GetNodeId() *google_protobuf2.StringValue {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type DeleteClustersRequest struct {
	ClusterId     []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AdvancedParam []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *DeleteClustersRequest) Reset()                    { *m = DeleteClustersRequest{} }
func (m *DeleteClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteClustersRequest) ProtoMessage()               {}
func (*DeleteClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *DeleteClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DeleteClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type DeleteClustersResponse struct {
	ClusterId []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     []string `protobuf:"bytes,2,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *DeleteClustersResponse) Reset()                    { *m = DeleteClustersResponse{} }
func (m *DeleteClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteClustersResponse) ProtoMessage()               {}
func (*DeleteClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *DeleteClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DeleteClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

type UpgradeClusterRequest struct {
	ClusterId     *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	VersionId     *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	AdvancedParam []string                      `protobuf:"bytes,3,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *UpgradeClusterRequest) Reset()                    { *m = UpgradeClusterRequest{} }
func (m *UpgradeClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*UpgradeClusterRequest) ProtoMessage()               {}
func (*UpgradeClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *UpgradeClusterRequest) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *UpgradeClusterRequest) GetVersionId() *google_protobuf2.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *UpgradeClusterRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type UpgradeClusterResponse struct {
	ClusterId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *UpgradeClusterResponse) Reset()                    { *m = UpgradeClusterResponse{} }
func (m *UpgradeClusterResponse) String() string            { return proto.CompactTextString(m) }
func (*UpgradeClusterResponse) ProtoMessage()               {}
func (*UpgradeClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *UpgradeClusterResponse) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *UpgradeClusterResponse) GetJobId() *google_protobuf2.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type RollbackClusterRequest struct {
	ClusterId     *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AdvancedParam []string                      `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *RollbackClusterRequest) Reset()                    { *m = RollbackClusterRequest{} }
func (m *RollbackClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*RollbackClusterRequest) ProtoMessage()               {}
func (*RollbackClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *RollbackClusterRequest) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *RollbackClusterRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type RollbackClusterResponse struct {
	ClusterId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *RollbackClusterResponse) Reset()                    { *m = RollbackClusterResponse{} }
func (m *RollbackClusterResponse) String() string            { return proto.CompactTextString(m) }
func (*RollbackClusterResponse) ProtoMessage()               {}
func (*RollbackClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *RollbackClusterResponse) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *RollbackClusterResponse) GetJobId() *google_protobuf2.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type ResizeClusterRequest struct {
	ClusterId     *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Role          *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	Cpu           *google_protobuf2.UInt32Value `protobuf:"bytes,3,opt,name=cpu" json:"cpu,omitempty"`
	Memory        *google_protobuf2.UInt32Value `protobuf:"bytes,4,opt,name=memory" json:"memory,omitempty"`
	AdvancedParam []string                      `protobuf:"bytes,5,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *ResizeClusterRequest) Reset()                    { *m = ResizeClusterRequest{} }
func (m *ResizeClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*ResizeClusterRequest) ProtoMessage()               {}
func (*ResizeClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *ResizeClusterRequest) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ResizeClusterRequest) GetRole() *google_protobuf2.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ResizeClusterRequest) GetCpu() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *ResizeClusterRequest) GetMemory() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *ResizeClusterRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type ResizeClusterResponse struct {
	ClusterId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *ResizeClusterResponse) Reset()                    { *m = ResizeClusterResponse{} }
func (m *ResizeClusterResponse) String() string            { return proto.CompactTextString(m) }
func (*ResizeClusterResponse) ProtoMessage()               {}
func (*ResizeClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *ResizeClusterResponse) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ResizeClusterResponse) GetJobId() *google_protobuf2.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type AddClusterNodesRequest struct {
	ClusterId     *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Role          *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	NodeCount     *google_protobuf2.UInt32Value `protobuf:"bytes,3,opt,name=node_count,json=nodeCount" json:"node_count,omitempty"`
	AdvancedParam []string                      `protobuf:"bytes,4,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *AddClusterNodesRequest) Reset()                    { *m = AddClusterNodesRequest{} }
func (m *AddClusterNodesRequest) String() string            { return proto.CompactTextString(m) }
func (*AddClusterNodesRequest) ProtoMessage()               {}
func (*AddClusterNodesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *AddClusterNodesRequest) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *AddClusterNodesRequest) GetRole() *google_protobuf2.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *AddClusterNodesRequest) GetNodeCount() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.NodeCount
	}
	return nil
}

func (m *AddClusterNodesRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type AddClusterNodesResponse struct {
	ClusterId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *AddClusterNodesResponse) Reset()                    { *m = AddClusterNodesResponse{} }
func (m *AddClusterNodesResponse) String() string            { return proto.CompactTextString(m) }
func (*AddClusterNodesResponse) ProtoMessage()               {}
func (*AddClusterNodesResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *AddClusterNodesResponse) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *AddClusterNodesResponse) GetJobId() *google_protobuf2.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type DeleteClusterNodesRequest struct {
	ClusterId     *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Role          *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	NodeId        []string                      `protobuf:"bytes,3,rep,name=node_id,json=nodeId" json:"node_id,omitempty"`
	AdvancedParam []string                      `protobuf:"bytes,4,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *DeleteClusterNodesRequest) Reset()                    { *m = DeleteClusterNodesRequest{} }
func (m *DeleteClusterNodesRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteClusterNodesRequest) ProtoMessage()               {}
func (*DeleteClusterNodesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *DeleteClusterNodesRequest) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DeleteClusterNodesRequest) GetRole() *google_protobuf2.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *DeleteClusterNodesRequest) GetNodeId() []string {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *DeleteClusterNodesRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type DeleteClusterNodesResponse struct {
	ClusterId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *DeleteClusterNodesResponse) Reset()                    { *m = DeleteClusterNodesResponse{} }
func (m *DeleteClusterNodesResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteClusterNodesResponse) ProtoMessage()               {}
func (*DeleteClusterNodesResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *DeleteClusterNodesResponse) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DeleteClusterNodesResponse) GetJobId() *google_protobuf2.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type UpdateClusterEnvRequest struct {
	ClusterId     *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Env           *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=env" json:"env,omitempty"`
	AdvancedParam []string                      `protobuf:"bytes,3,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *UpdateClusterEnvRequest) Reset()                    { *m = UpdateClusterEnvRequest{} }
func (m *UpdateClusterEnvRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateClusterEnvRequest) ProtoMessage()               {}
func (*UpdateClusterEnvRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *UpdateClusterEnvRequest) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *UpdateClusterEnvRequest) GetEnv() *google_protobuf2.StringValue {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *UpdateClusterEnvRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type UpdateClusterEnvResponse struct {
	ClusterId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *UpdateClusterEnvResponse) Reset()                    { *m = UpdateClusterEnvResponse{} }
func (m *UpdateClusterEnvResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateClusterEnvResponse) ProtoMessage()               {}
func (*UpdateClusterEnvResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{19} }

func (m *UpdateClusterEnvResponse) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *UpdateClusterEnvResponse) GetJobId() *google_protobuf2.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type ClusterCommon struct {
	ClusterId                  *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Role                       *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	ServerIdUpperBound         *google_protobuf2.UInt32Value `protobuf:"bytes,3,opt,name=server_id_upper_bound,json=serverIdUpperBound" json:"server_id_upper_bound,omitempty"`
	AdvancedActions            *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=advanced_actions,json=advancedActions" json:"advanced_actions,omitempty"`
	InitService                *google_protobuf2.StringValue `protobuf:"bytes,5,opt,name=init_service,json=initService" json:"init_service,omitempty"`
	StartService               *google_protobuf2.StringValue `protobuf:"bytes,6,opt,name=start_service,json=startService" json:"start_service,omitempty"`
	StopService                *google_protobuf2.StringValue `protobuf:"bytes,7,opt,name=stop_service,json=stopService" json:"stop_service,omitempty"`
	ScaleOutService            *google_protobuf2.StringValue `protobuf:"bytes,8,opt,name=scale_out_service,json=scaleOutService" json:"scale_out_service,omitempty"`
	ScaleInService             *google_protobuf2.StringValue `protobuf:"bytes,9,opt,name=scale_in_service,json=scaleInService" json:"scale_in_service,omitempty"`
	RestartService             *google_protobuf2.StringValue `protobuf:"bytes,10,opt,name=restart_service,json=restartService" json:"restart_service,omitempty"`
	DestroyService             *google_protobuf2.StringValue `protobuf:"bytes,11,opt,name=destroy_service,json=destroyService" json:"destroy_service,omitempty"`
	UpgradeService             *google_protobuf2.StringValue `protobuf:"bytes,12,opt,name=upgrade_service,json=upgradeService" json:"upgrade_service,omitempty"`
	CustomService              *google_protobuf2.StringValue `protobuf:"bytes,13,opt,name=custom_service,json=customService" json:"custom_service,omitempty"`
	BackupService              *google_protobuf2.StringValue `protobuf:"bytes,14,opt,name=backup_service,json=backupService" json:"backup_service,omitempty"`
	RestoreService             *google_protobuf2.StringValue `protobuf:"bytes,15,opt,name=restore_service,json=restoreService" json:"restore_service,omitempty"`
	DeleteSnapshotService      *google_protobuf2.StringValue `protobuf:"bytes,16,opt,name=delete_snapshot_service,json=deleteSnapshotService" json:"delete_snapshot_service,omitempty"`
	HealthCheck                *google_protobuf2.StringValue `protobuf:"bytes,17,opt,name=health_check,json=healthCheck" json:"health_check,omitempty"`
	Monitor                    *google_protobuf2.StringValue `protobuf:"bytes,18,opt,name=monitor" json:"monitor,omitempty"`
	Passphraseless             *google_protobuf2.StringValue `protobuf:"bytes,19,opt,name=passphraseless" json:"passphraseless,omitempty"`
	VerticalScalingPolicy      *google_protobuf2.StringValue `protobuf:"bytes,20,opt,name=vertical_scaling_policy,json=verticalScalingPolicy" json:"vertical_scaling_policy,omitempty"`
	AgentInstalled             *google_protobuf2.BoolValue   `protobuf:"bytes,21,opt,name=agent_installed,json=agentInstalled" json:"agent_installed,omitempty"`
	CustomMetadataScript       *google_protobuf2.StringValue `protobuf:"bytes,22,opt,name=custom_metadata_script,json=customMetadataScript" json:"custom_metadata_script,omitempty"`
	ImageId                    *google_protobuf2.StringValue `protobuf:"bytes,23,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	BackupPolicy               *google_protobuf2.StringValue `protobuf:"bytes,24,opt,name=backup_policy,json=backupPolicy" json:"backup_policy,omitempty"`
	IncrementalBackupSupported *google_protobuf2.BoolValue   `protobuf:"bytes,25,opt,name=incremental_backup_supported,json=incrementalBackupSupported" json:"incremental_backup_supported,omitempty"`
	Hypervisor                 *google_protobuf2.StringValue `protobuf:"bytes,26,opt,name=hypervisor" json:"hypervisor,omitempty"`
}

func (m *ClusterCommon) Reset()                    { *m = ClusterCommon{} }
func (m *ClusterCommon) String() string            { return proto.CompactTextString(m) }
func (*ClusterCommon) ProtoMessage()               {}
func (*ClusterCommon) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{20} }

func (m *ClusterCommon) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ClusterCommon) GetRole() *google_protobuf2.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ClusterCommon) GetServerIdUpperBound() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.ServerIdUpperBound
	}
	return nil
}

func (m *ClusterCommon) GetAdvancedActions() *google_protobuf2.StringValue {
	if m != nil {
		return m.AdvancedActions
	}
	return nil
}

func (m *ClusterCommon) GetInitService() *google_protobuf2.StringValue {
	if m != nil {
		return m.InitService
	}
	return nil
}

func (m *ClusterCommon) GetStartService() *google_protobuf2.StringValue {
	if m != nil {
		return m.StartService
	}
	return nil
}

func (m *ClusterCommon) GetStopService() *google_protobuf2.StringValue {
	if m != nil {
		return m.StopService
	}
	return nil
}

func (m *ClusterCommon) GetScaleOutService() *google_protobuf2.StringValue {
	if m != nil {
		return m.ScaleOutService
	}
	return nil
}

func (m *ClusterCommon) GetScaleInService() *google_protobuf2.StringValue {
	if m != nil {
		return m.ScaleInService
	}
	return nil
}

func (m *ClusterCommon) GetRestartService() *google_protobuf2.StringValue {
	if m != nil {
		return m.RestartService
	}
	return nil
}

func (m *ClusterCommon) GetDestroyService() *google_protobuf2.StringValue {
	if m != nil {
		return m.DestroyService
	}
	return nil
}

func (m *ClusterCommon) GetUpgradeService() *google_protobuf2.StringValue {
	if m != nil {
		return m.UpgradeService
	}
	return nil
}

func (m *ClusterCommon) GetCustomService() *google_protobuf2.StringValue {
	if m != nil {
		return m.CustomService
	}
	return nil
}

func (m *ClusterCommon) GetBackupService() *google_protobuf2.StringValue {
	if m != nil {
		return m.BackupService
	}
	return nil
}

func (m *ClusterCommon) GetRestoreService() *google_protobuf2.StringValue {
	if m != nil {
		return m.RestoreService
	}
	return nil
}

func (m *ClusterCommon) GetDeleteSnapshotService() *google_protobuf2.StringValue {
	if m != nil {
		return m.DeleteSnapshotService
	}
	return nil
}

func (m *ClusterCommon) GetHealthCheck() *google_protobuf2.StringValue {
	if m != nil {
		return m.HealthCheck
	}
	return nil
}

func (m *ClusterCommon) GetMonitor() *google_protobuf2.StringValue {
	if m != nil {
		return m.Monitor
	}
	return nil
}

func (m *ClusterCommon) GetPassphraseless() *google_protobuf2.StringValue {
	if m != nil {
		return m.Passphraseless
	}
	return nil
}

func (m *ClusterCommon) GetVerticalScalingPolicy() *google_protobuf2.StringValue {
	if m != nil {
		return m.VerticalScalingPolicy
	}
	return nil
}

func (m *ClusterCommon) GetAgentInstalled() *google_protobuf2.BoolValue {
	if m != nil {
		return m.AgentInstalled
	}
	return nil
}

func (m *ClusterCommon) GetCustomMetadataScript() *google_protobuf2.StringValue {
	if m != nil {
		return m.CustomMetadataScript
	}
	return nil
}

func (m *ClusterCommon) GetImageId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ImageId
	}
	return nil
}

func (m *ClusterCommon) GetBackupPolicy() *google_protobuf2.StringValue {
	if m != nil {
		return m.BackupPolicy
	}
	return nil
}

func (m *ClusterCommon) GetIncrementalBackupSupported() *google_protobuf2.BoolValue {
	if m != nil {
		return m.IncrementalBackupSupported
	}
	return nil
}

func (m *ClusterCommon) GetHypervisor() *google_protobuf2.StringValue {
	if m != nil {
		return m.Hypervisor
	}
	return nil
}

type ClusterNode struct {
	NodeId           *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	ClusterId        *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Name             *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	InstanceId       *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	VolumeId         *google_protobuf2.StringValue `protobuf:"bytes,5,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	SubnetId         *google_protobuf2.StringValue `protobuf:"bytes,6,opt,name=subnet_id,json=subnetId" json:"subnet_id,omitempty"`
	PrivateIp        *google_protobuf2.StringValue `protobuf:"bytes,7,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	ServerId         *google_protobuf2.UInt32Value `protobuf:"bytes,8,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	Role             *google_protobuf2.StringValue `protobuf:"bytes,9,opt,name=role" json:"role,omitempty"`
	Status           *google_protobuf2.StringValue `protobuf:"bytes,10,opt,name=status" json:"status,omitempty"`
	TransitionStatus *google_protobuf2.StringValue `protobuf:"bytes,11,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	GroupId          *google_protobuf2.UInt32Value `protobuf:"bytes,12,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	Owner            *google_protobuf2.StringValue `protobuf:"bytes,13,opt,name=owner" json:"owner,omitempty"`
	GlobalServerId   *google_protobuf2.StringValue `protobuf:"bytes,14,opt,name=global_server_id,json=globalServerId" json:"global_server_id,omitempty"`
	CustomMetadata   *google_protobuf2.StringValue `protobuf:"bytes,15,opt,name=custom_metadata,json=customMetadata" json:"custom_metadata,omitempty"`
	PubKey           *google_protobuf2.StringValue `protobuf:"bytes,16,opt,name=pub_key,json=pubKey" json:"pub_key,omitempty"`
	HealthStatus     *google_protobuf2.StringValue `protobuf:"bytes,17,opt,name=health_status,json=healthStatus" json:"health_status,omitempty"`
	IsBackup         *google_protobuf2.BoolValue   `protobuf:"bytes,18,opt,name=is_backup,json=isBackup" json:"is_backup,omitempty"`
	AutoBackup       *google_protobuf2.BoolValue   `protobuf:"bytes,19,opt,name=auto_backup,json=autoBackup" json:"auto_backup,omitempty"`
	CreateTime       *google_protobuf3.Timestamp   `protobuf:"bytes,20,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime       *google_protobuf3.Timestamp   `protobuf:"bytes,21,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *ClusterNode) Reset()                    { *m = ClusterNode{} }
func (m *ClusterNode) String() string            { return proto.CompactTextString(m) }
func (*ClusterNode) ProtoMessage()               {}
func (*ClusterNode) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{21} }

func (m *ClusterNode) GetNodeId() *google_protobuf2.StringValue {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *ClusterNode) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ClusterNode) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ClusterNode) GetInstanceId() *google_protobuf2.StringValue {
	if m != nil {
		return m.InstanceId
	}
	return nil
}

func (m *ClusterNode) GetVolumeId() *google_protobuf2.StringValue {
	if m != nil {
		return m.VolumeId
	}
	return nil
}

func (m *ClusterNode) GetSubnetId() *google_protobuf2.StringValue {
	if m != nil {
		return m.SubnetId
	}
	return nil
}

func (m *ClusterNode) GetPrivateIp() *google_protobuf2.StringValue {
	if m != nil {
		return m.PrivateIp
	}
	return nil
}

func (m *ClusterNode) GetServerId() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.ServerId
	}
	return nil
}

func (m *ClusterNode) GetRole() *google_protobuf2.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ClusterNode) GetStatus() *google_protobuf2.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ClusterNode) GetTransitionStatus() *google_protobuf2.StringValue {
	if m != nil {
		return m.TransitionStatus
	}
	return nil
}

func (m *ClusterNode) GetGroupId() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.GroupId
	}
	return nil
}

func (m *ClusterNode) GetOwner() *google_protobuf2.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *ClusterNode) GetGlobalServerId() *google_protobuf2.StringValue {
	if m != nil {
		return m.GlobalServerId
	}
	return nil
}

func (m *ClusterNode) GetCustomMetadata() *google_protobuf2.StringValue {
	if m != nil {
		return m.CustomMetadata
	}
	return nil
}

func (m *ClusterNode) GetPubKey() *google_protobuf2.StringValue {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *ClusterNode) GetHealthStatus() *google_protobuf2.StringValue {
	if m != nil {
		return m.HealthStatus
	}
	return nil
}

func (m *ClusterNode) GetIsBackup() *google_protobuf2.BoolValue {
	if m != nil {
		return m.IsBackup
	}
	return nil
}

func (m *ClusterNode) GetAutoBackup() *google_protobuf2.BoolValue {
	if m != nil {
		return m.AutoBackup
	}
	return nil
}

func (m *ClusterNode) GetCreateTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ClusterNode) GetStatusTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type ClusterRole struct {
	ClusterId    *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Role         *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	Cpu          *google_protobuf2.UInt32Value `protobuf:"bytes,3,opt,name=cpu" json:"cpu,omitempty"`
	Gpu          *google_protobuf2.UInt32Value `protobuf:"bytes,4,opt,name=gpu" json:"gpu,omitempty"`
	Memory       *google_protobuf2.UInt32Value `protobuf:"bytes,5,opt,name=memory" json:"memory,omitempty"`
	InstanceSize *google_protobuf2.UInt32Value `protobuf:"bytes,6,opt,name=instance_size,json=instanceSize" json:"instance_size,omitempty"`
	StorageSize  *google_protobuf2.UInt32Value `protobuf:"bytes,7,opt,name=storage_size,json=storageSize" json:"storage_size,omitempty"`
	MountPoint   *google_protobuf2.StringValue `protobuf:"bytes,8,opt,name=mount_point,json=mountPoint" json:"mount_point,omitempty"`
	MountOptions *google_protobuf2.StringValue `protobuf:"bytes,9,opt,name=mount_options,json=mountOptions" json:"mount_options,omitempty"`
	Env          *google_protobuf2.StringValue `protobuf:"bytes,10,opt,name=env" json:"env,omitempty"`
}

func (m *ClusterRole) Reset()                    { *m = ClusterRole{} }
func (m *ClusterRole) String() string            { return proto.CompactTextString(m) }
func (*ClusterRole) ProtoMessage()               {}
func (*ClusterRole) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{22} }

func (m *ClusterRole) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ClusterRole) GetRole() *google_protobuf2.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ClusterRole) GetCpu() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *ClusterRole) GetGpu() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.Gpu
	}
	return nil
}

func (m *ClusterRole) GetMemory() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *ClusterRole) GetInstanceSize() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.InstanceSize
	}
	return nil
}

func (m *ClusterRole) GetStorageSize() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.StorageSize
	}
	return nil
}

func (m *ClusterRole) GetMountPoint() *google_protobuf2.StringValue {
	if m != nil {
		return m.MountPoint
	}
	return nil
}

func (m *ClusterRole) GetMountOptions() *google_protobuf2.StringValue {
	if m != nil {
		return m.MountOptions
	}
	return nil
}

func (m *ClusterRole) GetEnv() *google_protobuf2.StringValue {
	if m != nil {
		return m.Env
	}
	return nil
}

type ClusterLoadbalancer struct {
	ClusterId              *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Role                   *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	LoadbalancerListenerId *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=loadbalancer_listener_id,json=loadbalancerListenerId" json:"loadbalancer_listener_id,omitempty"`
	LoadbalancerPort       *google_protobuf2.UInt32Value `protobuf:"bytes,4,opt,name=loadbalancer_port,json=loadbalancerPort" json:"loadbalancer_port,omitempty"`
	LoadbalancerPolicyId   *google_protobuf2.StringValue `protobuf:"bytes,5,opt,name=loadbalancer_policy_id,json=loadbalancerPolicyId" json:"loadbalancer_policy_id,omitempty"`
}

func (m *ClusterLoadbalancer) Reset()                    { *m = ClusterLoadbalancer{} }
func (m *ClusterLoadbalancer) String() string            { return proto.CompactTextString(m) }
func (*ClusterLoadbalancer) ProtoMessage()               {}
func (*ClusterLoadbalancer) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{23} }

func (m *ClusterLoadbalancer) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ClusterLoadbalancer) GetRole() *google_protobuf2.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ClusterLoadbalancer) GetLoadbalancerListenerId() *google_protobuf2.StringValue {
	if m != nil {
		return m.LoadbalancerListenerId
	}
	return nil
}

func (m *ClusterLoadbalancer) GetLoadbalancerPort() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.LoadbalancerPort
	}
	return nil
}

func (m *ClusterLoadbalancer) GetLoadbalancerPolicyId() *google_protobuf2.StringValue {
	if m != nil {
		return m.LoadbalancerPolicyId
	}
	return nil
}

type ClusterLink struct {
	ClusterId         *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Name              *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ExternalClusterId *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=external_cluster_id,json=externalClusterId" json:"external_cluster_id,omitempty"`
	Owner             *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
}

func (m *ClusterLink) Reset()                    { *m = ClusterLink{} }
func (m *ClusterLink) String() string            { return proto.CompactTextString(m) }
func (*ClusterLink) ProtoMessage()               {}
func (*ClusterLink) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{24} }

func (m *ClusterLink) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ClusterLink) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ClusterLink) GetExternalClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ExternalClusterId
	}
	return nil
}

func (m *ClusterLink) GetOwner() *google_protobuf2.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

type Cluster struct {
	ClusterId              *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Name                   *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description            *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	AppId                  *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	VersionId              *google_protobuf2.StringValue `protobuf:"bytes,5,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	SubnetId               *google_protobuf2.StringValue `protobuf:"bytes,6,opt,name=subnet_id,json=subnetId" json:"subnet_id,omitempty"`
	VpcId                  *google_protobuf2.StringValue `protobuf:"bytes,7,opt,name=vpc_id,json=vpcId" json:"vpc_id,omitempty"`
	FrontgateId            *google_protobuf2.StringValue `protobuf:"bytes,8,opt,name=frontgate_id,json=frontgateId" json:"frontgate_id,omitempty"`
	ClusterType            *google_protobuf2.UInt32Value `protobuf:"bytes,9,opt,name=cluster_type,json=clusterType" json:"cluster_type,omitempty"`
	Endpoints              *google_protobuf2.StringValue `protobuf:"bytes,10,opt,name=endpoints" json:"endpoints,omitempty"`
	Status                 *google_protobuf2.StringValue `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	TransitionStatus       *google_protobuf2.StringValue `protobuf:"bytes,12,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	MetadataRootAccess     *google_protobuf2.BoolValue   `protobuf:"bytes,13,opt,name=metadata_root_access,json=metadataRootAccess" json:"metadata_root_access,omitempty"`
	Owner                  *google_protobuf2.StringValue `protobuf:"bytes,14,opt,name=owner" json:"owner,omitempty"`
	GlobalUuid             *google_protobuf2.StringValue `protobuf:"bytes,15,opt,name=global_uuid,json=globalUuid" json:"global_uuid,omitempty"`
	UpgradeStatus          *google_protobuf2.StringValue `protobuf:"bytes,16,opt,name=upgrade_status,json=upgradeStatus" json:"upgrade_status,omitempty"`
	UpgradeTime            *google_protobuf3.Timestamp   `protobuf:"bytes,17,opt,name=upgrade_time,json=upgradeTime" json:"upgrade_time,omitempty"`
	RuntimeId              *google_protobuf2.StringValue `protobuf:"bytes,18,opt,name=runtime_id,json=runtimeId" json:"runtime_id,omitempty"`
	CreateTime             *google_protobuf3.Timestamp   `protobuf:"bytes,19,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime             *google_protobuf3.Timestamp   `protobuf:"bytes,20,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	ClusterNodeSet         []*ClusterNode                `protobuf:"bytes,21,rep,name=cluster_node_set,json=clusterNodeSet" json:"cluster_node_set,omitempty"`
	ClusterRoleSet         []*ClusterRole                `protobuf:"bytes,22,rep,name=cluster_role_set,json=clusterRoleSet" json:"cluster_role_set,omitempty"`
	ClusterLinkSet         []*ClusterLink                `protobuf:"bytes,23,rep,name=cluster_link_set,json=clusterLinkSet" json:"cluster_link_set,omitempty"`
	ClusterCommonSet       []*ClusterCommon              `protobuf:"bytes,24,rep,name=cluster_common_set,json=clusterCommonSet" json:"cluster_common_set,omitempty"`
	ClusterLoadbalancerSet []*ClusterLoadbalancer        `protobuf:"bytes,25,rep,name=cluster_loadbalancer_set,json=clusterLoadbalancerSet" json:"cluster_loadbalancer_set,omitempty"`
}

func (m *Cluster) Reset()                    { *m = Cluster{} }
func (m *Cluster) String() string            { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()               {}
func (*Cluster) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{25} }

func (m *Cluster) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *Cluster) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Cluster) GetDescription() *google_protobuf2.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Cluster) GetAppId() *google_protobuf2.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *Cluster) GetVersionId() *google_protobuf2.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *Cluster) GetSubnetId() *google_protobuf2.StringValue {
	if m != nil {
		return m.SubnetId
	}
	return nil
}

func (m *Cluster) GetVpcId() *google_protobuf2.StringValue {
	if m != nil {
		return m.VpcId
	}
	return nil
}

func (m *Cluster) GetFrontgateId() *google_protobuf2.StringValue {
	if m != nil {
		return m.FrontgateId
	}
	return nil
}

func (m *Cluster) GetClusterType() *google_protobuf2.UInt32Value {
	if m != nil {
		return m.ClusterType
	}
	return nil
}

func (m *Cluster) GetEndpoints() *google_protobuf2.StringValue {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *Cluster) GetStatus() *google_protobuf2.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Cluster) GetTransitionStatus() *google_protobuf2.StringValue {
	if m != nil {
		return m.TransitionStatus
	}
	return nil
}

func (m *Cluster) GetMetadataRootAccess() *google_protobuf2.BoolValue {
	if m != nil {
		return m.MetadataRootAccess
	}
	return nil
}

func (m *Cluster) GetOwner() *google_protobuf2.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Cluster) GetGlobalUuid() *google_protobuf2.StringValue {
	if m != nil {
		return m.GlobalUuid
	}
	return nil
}

func (m *Cluster) GetUpgradeStatus() *google_protobuf2.StringValue {
	if m != nil {
		return m.UpgradeStatus
	}
	return nil
}

func (m *Cluster) GetUpgradeTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.UpgradeTime
	}
	return nil
}

func (m *Cluster) GetRuntimeId() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *Cluster) GetCreateTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Cluster) GetStatusTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Cluster) GetClusterNodeSet() []*ClusterNode {
	if m != nil {
		return m.ClusterNodeSet
	}
	return nil
}

func (m *Cluster) GetClusterRoleSet() []*ClusterRole {
	if m != nil {
		return m.ClusterRoleSet
	}
	return nil
}

func (m *Cluster) GetClusterLinkSet() []*ClusterLink {
	if m != nil {
		return m.ClusterLinkSet
	}
	return nil
}

func (m *Cluster) GetClusterCommonSet() []*ClusterCommon {
	if m != nil {
		return m.ClusterCommonSet
	}
	return nil
}

func (m *Cluster) GetClusterLoadbalancerSet() []*ClusterLoadbalancer {
	if m != nil {
		return m.ClusterLoadbalancerSet
	}
	return nil
}

type DescribeClustersRequest struct {
	ClusterId         []string                      `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AppId             []string                      `protobuf:"bytes,2,rep,name=app_id,json=appId" json:"app_id,omitempty"`
	VersionId         []string                      `protobuf:"bytes,3,rep,name=version_id,json=versionId" json:"version_id,omitempty"`
	Status            []string                      `protobuf:"bytes,4,rep,name=status" json:"status,omitempty"`
	RuntimeId         []string                      `protobuf:"bytes,5,rep,name=runtime_id,json=runtimeId" json:"runtime_id,omitempty"`
	FrontgateId       []string                      `protobuf:"bytes,6,rep,name=frontgate_id,json=frontgateId" json:"frontgate_id,omitempty"`
	ExternalClusterId *google_protobuf2.StringValue `protobuf:"bytes,7,opt,name=external_cluster_id,json=externalClusterId" json:"external_cluster_id,omitempty"`
	// default is 20, max value is 200
	Limit uint32 `protobuf:"varint,8,opt,name=limit" json:"limit,omitempty"`
	// default is 0
	Offset uint32 `protobuf:"varint,9,opt,name=offset" json:"offset,omitempty"`
}

func (m *DescribeClustersRequest) Reset()                    { *m = DescribeClustersRequest{} }
func (m *DescribeClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeClustersRequest) ProtoMessage()               {}
func (*DescribeClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{26} }

func (m *DescribeClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DescribeClustersRequest) GetAppId() []string {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *DescribeClustersRequest) GetVersionId() []string {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *DescribeClustersRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeClustersRequest) GetRuntimeId() []string {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *DescribeClustersRequest) GetFrontgateId() []string {
	if m != nil {
		return m.FrontgateId
	}
	return nil
}

func (m *DescribeClustersRequest) GetExternalClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ExternalClusterId
	}
	return nil
}

func (m *DescribeClustersRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeClustersRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type DescribeClustersResponse struct {
	TotalCount uint32     `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	ClusterSet []*Cluster `protobuf:"bytes,2,rep,name=cluster_set,json=clusterSet" json:"cluster_set,omitempty"`
}

func (m *DescribeClustersResponse) Reset()                    { *m = DescribeClustersResponse{} }
func (m *DescribeClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeClustersResponse) ProtoMessage()               {}
func (*DescribeClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{27} }

func (m *DescribeClustersResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeClustersResponse) GetClusterSet() []*Cluster {
	if m != nil {
		return m.ClusterSet
	}
	return nil
}

type DescribeClusterNodesRequest struct {
	ClusterId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	NodeId    []string                      `protobuf:"bytes,2,rep,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Status    []string                      `protobuf:"bytes,3,rep,name=status" json:"status,omitempty"`
	// default is 20, max value is 200
	Limit uint32 `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	// default is 0
	Offset uint32 `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
}

func (m *DescribeClusterNodesRequest) Reset()                    { *m = DescribeClusterNodesRequest{} }
func (m *DescribeClusterNodesRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeClusterNodesRequest) ProtoMessage()               {}
func (*DescribeClusterNodesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{28} }

func (m *DescribeClusterNodesRequest) GetClusterId() *google_protobuf2.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DescribeClusterNodesRequest) GetNodeId() []string {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *DescribeClusterNodesRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeClusterNodesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeClusterNodesRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type DescribeClusterNodesResponse struct {
	TotalCount     uint32         `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	ClusterNodeSet []*ClusterNode `protobuf:"bytes,2,rep,name=cluster_node_set,json=clusterNodeSet" json:"cluster_node_set,omitempty"`
}

func (m *DescribeClusterNodesResponse) Reset()                    { *m = DescribeClusterNodesResponse{} }
func (m *DescribeClusterNodesResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeClusterNodesResponse) ProtoMessage()               {}
func (*DescribeClusterNodesResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{29} }

func (m *DescribeClusterNodesResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeClusterNodesResponse) GetClusterNodeSet() []*ClusterNode {
	if m != nil {
		return m.ClusterNodeSet
	}
	return nil
}

type StopClustersRequest struct {
	ClusterId     []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AdvancedParam []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *StopClustersRequest) Reset()                    { *m = StopClustersRequest{} }
func (m *StopClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*StopClustersRequest) ProtoMessage()               {}
func (*StopClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{30} }

func (m *StopClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *StopClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type StopClustersResponse struct {
	ClusterId []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     []string `protobuf:"bytes,2,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *StopClustersResponse) Reset()                    { *m = StopClustersResponse{} }
func (m *StopClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*StopClustersResponse) ProtoMessage()               {}
func (*StopClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{31} }

func (m *StopClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *StopClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

type StartClustersRequest struct {
	ClusterId     []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AdvancedParam []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *StartClustersRequest) Reset()                    { *m = StartClustersRequest{} }
func (m *StartClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*StartClustersRequest) ProtoMessage()               {}
func (*StartClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{32} }

func (m *StartClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *StartClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type StartClustersResponse struct {
	ClusterId []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     []string `protobuf:"bytes,2,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *StartClustersResponse) Reset()                    { *m = StartClustersResponse{} }
func (m *StartClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*StartClustersResponse) ProtoMessage()               {}
func (*StartClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{33} }

func (m *StartClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *StartClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

type RecoverClustersRequest struct {
	ClusterId     []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AdvancedParam []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *RecoverClustersRequest) Reset()                    { *m = RecoverClustersRequest{} }
func (m *RecoverClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*RecoverClustersRequest) ProtoMessage()               {}
func (*RecoverClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{34} }

func (m *RecoverClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *RecoverClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type RecoverClustersResponse struct {
	ClusterId []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     []string `protobuf:"bytes,2,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *RecoverClustersResponse) Reset()                    { *m = RecoverClustersResponse{} }
func (m *RecoverClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*RecoverClustersResponse) ProtoMessage()               {}
func (*RecoverClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{35} }

func (m *RecoverClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *RecoverClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

type CeaseClustersRequest struct {
	ClusterId     []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AdvancedParam []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *CeaseClustersRequest) Reset()                    { *m = CeaseClustersRequest{} }
func (m *CeaseClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*CeaseClustersRequest) ProtoMessage()               {}
func (*CeaseClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{36} }

func (m *CeaseClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *CeaseClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type CeaseClustersResponse struct {
	ClusterId []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     []string `protobuf:"bytes,2,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *CeaseClustersResponse) Reset()                    { *m = CeaseClustersResponse{} }
func (m *CeaseClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*CeaseClustersResponse) ProtoMessage()               {}
func (*CeaseClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{37} }

func (m *CeaseClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *CeaseClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateClusterRequest)(nil), "openpitrix.CreateClusterRequest")
	proto.RegisterType((*CreateClusterResponse)(nil), "openpitrix.CreateClusterResponse")
	proto.RegisterType((*ModifyClusterRequest)(nil), "openpitrix.ModifyClusterRequest")
	proto.RegisterType((*ModifyClusterResponse)(nil), "openpitrix.ModifyClusterResponse")
	proto.RegisterType((*ModifyClusterNodeRequest)(nil), "openpitrix.ModifyClusterNodeRequest")
	proto.RegisterType((*ModifyClusterNodeResponse)(nil), "openpitrix.ModifyClusterNodeResponse")
	proto.RegisterType((*DeleteClustersRequest)(nil), "openpitrix.DeleteClustersRequest")
	proto.RegisterType((*DeleteClustersResponse)(nil), "openpitrix.DeleteClustersResponse")
	proto.RegisterType((*UpgradeClusterRequest)(nil), "openpitrix.UpgradeClusterRequest")
	proto.RegisterType((*UpgradeClusterResponse)(nil), "openpitrix.UpgradeClusterResponse")
	proto.RegisterType((*RollbackClusterRequest)(nil), "openpitrix.RollbackClusterRequest")
	proto.RegisterType((*RollbackClusterResponse)(nil), "openpitrix.RollbackClusterResponse")
	proto.RegisterType((*ResizeClusterRequest)(nil), "openpitrix.ResizeClusterRequest")
	proto.RegisterType((*ResizeClusterResponse)(nil), "openpitrix.ResizeClusterResponse")
	proto.RegisterType((*AddClusterNodesRequest)(nil), "openpitrix.AddClusterNodesRequest")
	proto.RegisterType((*AddClusterNodesResponse)(nil), "openpitrix.AddClusterNodesResponse")
	proto.RegisterType((*DeleteClusterNodesRequest)(nil), "openpitrix.DeleteClusterNodesRequest")
	proto.RegisterType((*DeleteClusterNodesResponse)(nil), "openpitrix.DeleteClusterNodesResponse")
	proto.RegisterType((*UpdateClusterEnvRequest)(nil), "openpitrix.UpdateClusterEnvRequest")
	proto.RegisterType((*UpdateClusterEnvResponse)(nil), "openpitrix.UpdateClusterEnvResponse")
	proto.RegisterType((*ClusterCommon)(nil), "openpitrix.ClusterCommon")
	proto.RegisterType((*ClusterNode)(nil), "openpitrix.ClusterNode")
	proto.RegisterType((*ClusterRole)(nil), "openpitrix.ClusterRole")
	proto.RegisterType((*ClusterLoadbalancer)(nil), "openpitrix.ClusterLoadbalancer")
	proto.RegisterType((*ClusterLink)(nil), "openpitrix.ClusterLink")
	proto.RegisterType((*Cluster)(nil), "openpitrix.Cluster")
	proto.RegisterType((*DescribeClustersRequest)(nil), "openpitrix.DescribeClustersRequest")
	proto.RegisterType((*DescribeClustersResponse)(nil), "openpitrix.DescribeClustersResponse")
	proto.RegisterType((*DescribeClusterNodesRequest)(nil), "openpitrix.DescribeClusterNodesRequest")
	proto.RegisterType((*DescribeClusterNodesResponse)(nil), "openpitrix.DescribeClusterNodesResponse")
	proto.RegisterType((*StopClustersRequest)(nil), "openpitrix.StopClustersRequest")
	proto.RegisterType((*StopClustersResponse)(nil), "openpitrix.StopClustersResponse")
	proto.RegisterType((*StartClustersRequest)(nil), "openpitrix.StartClustersRequest")
	proto.RegisterType((*StartClustersResponse)(nil), "openpitrix.StartClustersResponse")
	proto.RegisterType((*RecoverClustersRequest)(nil), "openpitrix.RecoverClustersRequest")
	proto.RegisterType((*RecoverClustersResponse)(nil), "openpitrix.RecoverClustersResponse")
	proto.RegisterType((*CeaseClustersRequest)(nil), "openpitrix.CeaseClustersRequest")
	proto.RegisterType((*CeaseClustersResponse)(nil), "openpitrix.CeaseClustersResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ClusterManager service

type ClusterManagerClient interface {
	CreateCluster(ctx context.Context, in *CreateClusterRequest, opts ...grpc.CallOption) (*CreateClusterResponse, error)
	ModifyCluster(ctx context.Context, in *ModifyClusterRequest, opts ...grpc.CallOption) (*ModifyClusterResponse, error)
	ModifyClusterNode(ctx context.Context, in *ModifyClusterNodeRequest, opts ...grpc.CallOption) (*ModifyClusterNodeResponse, error)
	DeleteClusters(ctx context.Context, in *DeleteClustersRequest, opts ...grpc.CallOption) (*DeleteClustersResponse, error)
	UpgradeCluster(ctx context.Context, in *UpgradeClusterRequest, opts ...grpc.CallOption) (*UpgradeClusterResponse, error)
	RollbackCluster(ctx context.Context, in *RollbackClusterRequest, opts ...grpc.CallOption) (*RollbackClusterResponse, error)
	ResizeCluster(ctx context.Context, in *ResizeClusterRequest, opts ...grpc.CallOption) (*ResizeClusterResponse, error)
	AddClusterNodes(ctx context.Context, in *AddClusterNodesRequest, opts ...grpc.CallOption) (*AddClusterNodesResponse, error)
	DeleteClusterNodes(ctx context.Context, in *DeleteClusterNodesRequest, opts ...grpc.CallOption) (*DeleteClusterNodesResponse, error)
	UpdateClusterEnv(ctx context.Context, in *UpdateClusterEnvRequest, opts ...grpc.CallOption) (*UpdateClusterEnvResponse, error)
	DescribeClusters(ctx context.Context, in *DescribeClustersRequest, opts ...grpc.CallOption) (*DescribeClustersResponse, error)
	DescribeClusterNodes(ctx context.Context, in *DescribeClusterNodesRequest, opts ...grpc.CallOption) (*DescribeClusterNodesResponse, error)
	StopClusters(ctx context.Context, in *StopClustersRequest, opts ...grpc.CallOption) (*StopClustersResponse, error)
	StartClusters(ctx context.Context, in *StartClustersRequest, opts ...grpc.CallOption) (*StartClustersResponse, error)
	RecoverClusters(ctx context.Context, in *RecoverClustersRequest, opts ...grpc.CallOption) (*RecoverClustersResponse, error)
	CeaseClusters(ctx context.Context, in *CeaseClustersRequest, opts ...grpc.CallOption) (*CeaseClustersResponse, error)
}

type clusterManagerClient struct {
	cc *grpc.ClientConn
}

func NewClusterManagerClient(cc *grpc.ClientConn) ClusterManagerClient {
	return &clusterManagerClient{cc}
}

func (c *clusterManagerClient) CreateCluster(ctx context.Context, in *CreateClusterRequest, opts ...grpc.CallOption) (*CreateClusterResponse, error) {
	out := new(CreateClusterResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/CreateCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ModifyCluster(ctx context.Context, in *ModifyClusterRequest, opts ...grpc.CallOption) (*ModifyClusterResponse, error) {
	out := new(ModifyClusterResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/ModifyCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ModifyClusterNode(ctx context.Context, in *ModifyClusterNodeRequest, opts ...grpc.CallOption) (*ModifyClusterNodeResponse, error) {
	out := new(ModifyClusterNodeResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/ModifyClusterNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteClusters(ctx context.Context, in *DeleteClustersRequest, opts ...grpc.CallOption) (*DeleteClustersResponse, error) {
	out := new(DeleteClustersResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/DeleteClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpgradeCluster(ctx context.Context, in *UpgradeClusterRequest, opts ...grpc.CallOption) (*UpgradeClusterResponse, error) {
	out := new(UpgradeClusterResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/UpgradeCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) RollbackCluster(ctx context.Context, in *RollbackClusterRequest, opts ...grpc.CallOption) (*RollbackClusterResponse, error) {
	out := new(RollbackClusterResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/RollbackCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ResizeCluster(ctx context.Context, in *ResizeClusterRequest, opts ...grpc.CallOption) (*ResizeClusterResponse, error) {
	out := new(ResizeClusterResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/ResizeCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) AddClusterNodes(ctx context.Context, in *AddClusterNodesRequest, opts ...grpc.CallOption) (*AddClusterNodesResponse, error) {
	out := new(AddClusterNodesResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/AddClusterNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteClusterNodes(ctx context.Context, in *DeleteClusterNodesRequest, opts ...grpc.CallOption) (*DeleteClusterNodesResponse, error) {
	out := new(DeleteClusterNodesResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/DeleteClusterNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateClusterEnv(ctx context.Context, in *UpdateClusterEnvRequest, opts ...grpc.CallOption) (*UpdateClusterEnvResponse, error) {
	out := new(UpdateClusterEnvResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/UpdateClusterEnv", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DescribeClusters(ctx context.Context, in *DescribeClustersRequest, opts ...grpc.CallOption) (*DescribeClustersResponse, error) {
	out := new(DescribeClustersResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/DescribeClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DescribeClusterNodes(ctx context.Context, in *DescribeClusterNodesRequest, opts ...grpc.CallOption) (*DescribeClusterNodesResponse, error) {
	out := new(DescribeClusterNodesResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/DescribeClusterNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) StopClusters(ctx context.Context, in *StopClustersRequest, opts ...grpc.CallOption) (*StopClustersResponse, error) {
	out := new(StopClustersResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/StopClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) StartClusters(ctx context.Context, in *StartClustersRequest, opts ...grpc.CallOption) (*StartClustersResponse, error) {
	out := new(StartClustersResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/StartClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) RecoverClusters(ctx context.Context, in *RecoverClustersRequest, opts ...grpc.CallOption) (*RecoverClustersResponse, error) {
	out := new(RecoverClustersResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/RecoverClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CeaseClusters(ctx context.Context, in *CeaseClustersRequest, opts ...grpc.CallOption) (*CeaseClustersResponse, error) {
	out := new(CeaseClustersResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/CeaseClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ClusterManager service

type ClusterManagerServer interface {
	CreateCluster(context.Context, *CreateClusterRequest) (*CreateClusterResponse, error)
	ModifyCluster(context.Context, *ModifyClusterRequest) (*ModifyClusterResponse, error)
	ModifyClusterNode(context.Context, *ModifyClusterNodeRequest) (*ModifyClusterNodeResponse, error)
	DeleteClusters(context.Context, *DeleteClustersRequest) (*DeleteClustersResponse, error)
	UpgradeCluster(context.Context, *UpgradeClusterRequest) (*UpgradeClusterResponse, error)
	RollbackCluster(context.Context, *RollbackClusterRequest) (*RollbackClusterResponse, error)
	ResizeCluster(context.Context, *ResizeClusterRequest) (*ResizeClusterResponse, error)
	AddClusterNodes(context.Context, *AddClusterNodesRequest) (*AddClusterNodesResponse, error)
	DeleteClusterNodes(context.Context, *DeleteClusterNodesRequest) (*DeleteClusterNodesResponse, error)
	UpdateClusterEnv(context.Context, *UpdateClusterEnvRequest) (*UpdateClusterEnvResponse, error)
	DescribeClusters(context.Context, *DescribeClustersRequest) (*DescribeClustersResponse, error)
	DescribeClusterNodes(context.Context, *DescribeClusterNodesRequest) (*DescribeClusterNodesResponse, error)
	StopClusters(context.Context, *StopClustersRequest) (*StopClustersResponse, error)
	StartClusters(context.Context, *StartClustersRequest) (*StartClustersResponse, error)
	RecoverClusters(context.Context, *RecoverClustersRequest) (*RecoverClustersResponse, error)
	CeaseClusters(context.Context, *CeaseClustersRequest) (*CeaseClustersResponse, error)
}

func RegisterClusterManagerServer(s *grpc.Server, srv ClusterManagerServer) {
	s.RegisterService(&_ClusterManager_serviceDesc, srv)
}

func _ClusterManager_CreateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/CreateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateCluster(ctx, req.(*CreateClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ModifyCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ModifyCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/ModifyCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ModifyCluster(ctx, req.(*ModifyClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ModifyClusterNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyClusterNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ModifyClusterNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/ModifyClusterNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ModifyClusterNode(ctx, req.(*ModifyClusterNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DeleteClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteClusters(ctx, req.(*DeleteClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpgradeCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpgradeCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/UpgradeCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpgradeCluster(ctx, req.(*UpgradeClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_RollbackCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).RollbackCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/RollbackCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).RollbackCluster(ctx, req.(*RollbackClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ResizeCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResizeClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ResizeCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/ResizeCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ResizeCluster(ctx, req.(*ResizeClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_AddClusterNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddClusterNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).AddClusterNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/AddClusterNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).AddClusterNodes(ctx, req.(*AddClusterNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteClusterNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteClusterNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DeleteClusterNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteClusterNodes(ctx, req.(*DeleteClusterNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateClusterEnv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateClusterEnvRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateClusterEnv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/UpdateClusterEnv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateClusterEnv(ctx, req.(*UpdateClusterEnvRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DescribeClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DescribeClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DescribeClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DescribeClusters(ctx, req.(*DescribeClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DescribeClusterNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeClusterNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DescribeClusterNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DescribeClusterNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DescribeClusterNodes(ctx, req.(*DescribeClusterNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_StopClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).StopClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/StopClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).StopClusters(ctx, req.(*StopClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_StartClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).StartClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/StartClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).StartClusters(ctx, req.(*StartClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_RecoverClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecoverClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).RecoverClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/RecoverClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).RecoverClusters(ctx, req.(*RecoverClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CeaseClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CeaseClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CeaseClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/CeaseClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CeaseClusters(ctx, req.(*CeaseClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.ClusterManager",
	HandlerType: (*ClusterManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCluster",
			Handler:    _ClusterManager_CreateCluster_Handler,
		},
		{
			MethodName: "ModifyCluster",
			Handler:    _ClusterManager_ModifyCluster_Handler,
		},
		{
			MethodName: "ModifyClusterNode",
			Handler:    _ClusterManager_ModifyClusterNode_Handler,
		},
		{
			MethodName: "DeleteClusters",
			Handler:    _ClusterManager_DeleteClusters_Handler,
		},
		{
			MethodName: "UpgradeCluster",
			Handler:    _ClusterManager_UpgradeCluster_Handler,
		},
		{
			MethodName: "RollbackCluster",
			Handler:    _ClusterManager_RollbackCluster_Handler,
		},
		{
			MethodName: "ResizeCluster",
			Handler:    _ClusterManager_ResizeCluster_Handler,
		},
		{
			MethodName: "AddClusterNodes",
			Handler:    _ClusterManager_AddClusterNodes_Handler,
		},
		{
			MethodName: "DeleteClusterNodes",
			Handler:    _ClusterManager_DeleteClusterNodes_Handler,
		},
		{
			MethodName: "UpdateClusterEnv",
			Handler:    _ClusterManager_UpdateClusterEnv_Handler,
		},
		{
			MethodName: "DescribeClusters",
			Handler:    _ClusterManager_DescribeClusters_Handler,
		},
		{
			MethodName: "DescribeClusterNodes",
			Handler:    _ClusterManager_DescribeClusterNodes_Handler,
		},
		{
			MethodName: "StopClusters",
			Handler:    _ClusterManager_StopClusters_Handler,
		},
		{
			MethodName: "StartClusters",
			Handler:    _ClusterManager_StartClusters_Handler,
		},
		{
			MethodName: "RecoverClusters",
			Handler:    _ClusterManager_RecoverClusters_Handler,
		},
		{
			MethodName: "CeaseClusters",
			Handler:    _ClusterManager_CeaseClusters_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cluster.proto",
}

func init() { proto.RegisterFile("cluster.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 2682 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0x4d, 0x73, 0x1b, 0x59,
	0xd5, 0xae, 0x96, 0x3f, 0x75, 0xf4, 0x61, 0xfb, 0x5a, 0x92, 0x15, 0xbd, 0x99, 0x77, 0x3c, 0x9a,
	0x19, 0x08, 0xc3, 0xc4, 0x0e, 0x4e, 0x60, 0x8a, 0x84, 0x30, 0xa5, 0x38, 0x61, 0x50, 0xe1, 0x4c,
	0x52, 0x72, 0x92, 0x2a, 0x60, 0x40, 0xb4, 0xba, 0xaf, 0xe5, 0x1e, 0xb7, 0xfa, 0xf6, 0x74, 0xdf,
	0x56, 0xc6, 0xa9, 0x59, 0x50, 0x53, 0x2c, 0x18, 0xbe, 0x16, 0xa6, 0xd8, 0xb0, 0xe0, 0x1f, 0xb0,
	0x80, 0x15, 0x6c, 0x29, 0x16, 0x14, 0xdb, 0xf9, 0x0b, 0xec, 0xf8, 0x05, 0x14, 0x55, 0x14, 0x75,
	0x3f, 0xba, 0xd5, 0xdd, 0x6a, 0x59, 0xd7, 0x91, 0x13, 0xb3, 0x72, 0x59, 0x7d, 0x9e, 0xa7, 0x4f,
	0x9f, 0x7b, 0xee, 0x39, 0x4f, 0xf7, 0x3d, 0x50, 0x32, 0xec, 0xc0, 0xa7, 0xd8, 0xdb, 0x72, 0x3d,
	0x42, 0x09, 0x02, 0xe2, 0x62, 0xc7, 0xb5, 0xa8, 0x67, 0x7d, 0xdc, 0xf8, 0xff, 0x3e, 0x21, 0x7d,
	0x1b, 0x6f, 0xf3, 0x2b, 0xbd, 0xe0, 0x60, 0xfb, 0xa9, 0xa7, 0xbb, 0x2e, 0xf6, 0x7c, 0x61, 0xdb,
	0x78, 0x35, 0x7d, 0x9d, 0x5a, 0x03, 0xec, 0x53, 0x7d, 0xe0, 0x4a, 0x83, 0xcb, 0xd2, 0x40, 0x77,
	0xad, 0x6d, 0xdd, 0x71, 0x08, 0xd5, 0xa9, 0x45, 0x9c, 0x10, 0xfe, 0x36, 0xff, 0x63, 0x5c, 0xed,
	0x63, 0xe7, 0xaa, 0xff, 0x54, 0xef, 0xf7, 0xb1, 0xb7, 0x4d, 0x5c, 0x6e, 0x31, 0x6e, 0xdd, 0xfc,
	0x5d, 0x0e, 0x2a, 0xbb, 0x1e, 0xd6, 0x29, 0xde, 0x15, 0x0e, 0x77, 0xf0, 0x47, 0x01, 0xf6, 0x29,
	0xba, 0x0e, 0x8b, 0xba, 0xeb, 0x76, 0x2d, 0xb3, 0xae, 0x6d, 0x6a, 0x57, 0x0a, 0x3b, 0x97, 0xb7,
	0xc4, 0x5d, 0xb7, 0x42, 0xb7, 0xb6, 0xf6, 0xa9, 0x67, 0x39, 0xfd, 0x27, 0xba, 0x1d, 0xe0, 0xce,
	0x82, 0xee, 0xba, 0x6d, 0x13, 0xdd, 0x02, 0x18, 0x62, 0xcf, 0xb7, 0x88, 0xc3, 0x80, 0x39, 0x05,
	0x60, 0x5e, 0xda, 0x0b, 0xb0, 0x17, 0x38, 0xec, 0x61, 0x19, 0x78, 0x4e, 0x05, 0x2c, 0xed, 0xdb,
	0x26, 0xba, 0x06, 0xf3, 0x06, 0x71, 0x0e, 0xea, 0xf3, 0x0a, 0x30, 0x6e, 0x89, 0xde, 0x84, 0xb2,
	0x6e, 0x0e, 0x75, 0xc7, 0xc0, 0x66, 0xd7, 0xd5, 0x3d, 0x7d, 0x50, 0x5f, 0xd8, 0x9c, 0xbb, 0x92,
	0xef, 0x94, 0xc2, 0x5f, 0x1f, 0xb2, 0x1f, 0x9b, 0x9f, 0x69, 0x50, 0x4d, 0x05, 0xc8, 0x77, 0x89,
	0xe3, 0x63, 0xe6, 0xaf, 0x5c, 0x64, 0xd5, 0x28, 0xe5, 0xa5, 0x7d, 0xdb, 0x64, 0xe1, 0xfd, 0x90,
	0xf4, 0x54, 0xa3, 0xb4, 0xf0, 0x21, 0xe9, 0xb5, 0xcd, 0xe6, 0x1f, 0xe7, 0xa0, 0x72, 0x9f, 0x98,
	0xd6, 0xc1, 0x71, 0x6a, 0xb1, 0xae, 0xc2, 0x92, 0xa4, 0x96, 0x7e, 0xac, 0x6f, 0x8d, 0x12, 0x6e,
	0x2b, 0x34, 0x0e, 0x6d, 0x50, 0x0b, 0x56, 0x43, 0xcf, 0x1d, 0x62, 0xe2, 0xae, 0x8f, 0x69, 0x3d,
	0xb7, 0x39, 0x77, 0xa5, 0xb0, 0xb3, 0x91, 0x81, 0x7b, 0x9f, 0x98, 0xb8, 0x53, 0x36, 0x46, 0xff,
	0xec, 0x63, 0x1a, 0xa7, 0xf0, 0x88, 0x2d, 0x28, 0xe6, 0x26, 0x52, 0x74, 0x88, 0x3d, 0xa2, 0x60,
	0xff, 0xa4, 0x28, 0x6c, 0xcb, 0x39, 0xe2, 0x14, 0xf3, 0x13, 0x29, 0xf6, 0x2c, 0xe7, 0x28, 0xa2,
	0x60, 0xff, 0x30, 0x8a, 0xf7, 0x00, 0x85, 0x14, 0x06, 0x19, 0x0c, 0x88, 0xc3, 0x49, 0x16, 0x38,
	0xc9, 0xa5, 0x0c, 0x92, 0x5d, 0x6e, 0xd4, 0x09, 0xef, 0x2b, 0xfe, 0x65, 0x44, 0xdf, 0x85, 0x7a,
	0xe4, 0x0b, 0xd1, 0xcd, 0x9e, 0x6e, 0xb3, 0x14, 0xf0, 0x38, 0xdd, 0x22, 0xa7, 0x7b, 0x35, 0xcb,
	0xa7, 0x98, 0x69, 0xa7, 0x66, 0x8c, 0xff, 0xb8, 0x8f, 0x69, 0xf3, 0x11, 0x54, 0x53, 0x6b, 0x76,
	0x0e, 0xf9, 0xd3, 0x7c, 0x02, 0xf5, 0x04, 0x2b, 0x5f, 0x24, 0x99, 0x0d, 0x37, 0xa1, 0x18, 0x5f,
	0x5e, 0x49, 0x3d, 0x71, 0x69, 0x0b, 0xb1, 0xa5, 0x6d, 0x76, 0xe0, 0x52, 0x06, 0xaf, 0xf4, 0xf8,
	0xab, 0xb0, 0xc4, 0xf3, 0x45, 0xd1, 0xdd, 0x45, 0x66, 0xdc, 0x36, 0x9b, 0x3f, 0x80, 0xea, 0x5d,
	0x6c, 0xe3, 0x68, 0x07, 0xf9, 0xa1, 0xa3, 0xaf, 0xa4, 0x22, 0xc0, 0xb6, 0x5f, 0x6c, 0x8f, 0x8c,
	0xef, 0xd0, 0x5c, 0xd6, 0x0e, 0x7d, 0x1f, 0x6a, 0x69, 0x7a, 0xe9, 0xef, 0x14, 0xfe, 0x6a, 0x6c,
	0x0f, 0xb2, 0x4b, 0x72, 0x97, 0xfd, 0x49, 0x83, 0xea, 0x63, 0xb7, 0xef, 0xe9, 0x66, 0xba, 0x26,
	0xce, 0xb4, 0xe3, 0x67, 0xaa, 0x8d, 0xe3, 0xa1, 0x98, 0xcb, 0x0a, 0xc5, 0xcf, 0x34, 0xa8, 0xa5,
	0x5d, 0xbf, 0xb0, 0x6a, 0xf5, 0x09, 0xd4, 0x3a, 0xc4, 0xb6, 0x7b, 0xba, 0x71, 0x74, 0x9e, 0x71,
	0x54, 0xcc, 0x8a, 0x9f, 0x6b, 0xb0, 0x31, 0x76, 0xfb, 0x0b, 0x8b, 0xc5, 0x49, 0x0e, 0x2a, 0x1d,
	0xec, 0x5b, 0xcf, 0xce, 0x35, 0xa5, 0xae, 0xc1, 0x3c, 0x2b, 0xbe, 0x4a, 0x8e, 0x70, 0x4b, 0xb4,
	0x05, 0x73, 0x86, 0x1b, 0x4c, 0x6c, 0xae, 0x8f, 0xdb, 0x0e, 0xbd, 0xbe, 0x23, 0x00, 0xcc, 0x10,
	0xdd, 0x80, 0xc5, 0x01, 0x1e, 0x10, 0xef, 0x78, 0x62, 0x63, 0x8d, 0x43, 0xa4, 0xed, 0x59, 0x5a,
	0x6b, 0x2a, 0x28, 0x17, 0xb6, 0x40, 0xff, 0xd4, 0xa0, 0xd6, 0x32, 0xcd, 0x58, 0xd5, 0xf3, 0x2f,
	0x68, 0x89, 0x6e, 0x01, 0xf0, 0x22, 0x6b, 0x90, 0xc0, 0xa1, 0x4a, 0x2b, 0x95, 0x67, 0xf6, 0xbb,
	0xcc, 0x3c, 0x23, 0xf2, 0xf3, 0x93, 0x36, 0xc7, 0xd8, 0xd3, 0x5e, 0x58, 0xec, 0xff, 0xae, 0xc1,
	0xa5, 0x44, 0x05, 0xbf, 0xc8, 0xf0, 0x6f, 0x8c, 0x7a, 0x9c, 0x28, 0xb1, 0xb2, 0x8b, 0xa9, 0x86,
	0xf6, 0x57, 0x1a, 0x34, 0xb2, 0x1e, 0xe6, 0xc2, 0xa2, 0xfb, 0x7b, 0x0d, 0x36, 0x1e, 0xbb, 0xe6,
	0x48, 0xc0, 0xde, 0x73, 0x86, 0xe7, 0x12, 0xdb, 0x2d, 0x98, 0xc3, 0xce, 0x50, 0xc9, 0x15, 0x66,
	0xa8, 0xda, 0xc3, 0x7e, 0xa1, 0x41, 0x7d, 0xdc, 0xdf, 0x0b, 0x0b, 0xdf, 0x1f, 0xca, 0x50, 0x4a,
	0xa8, 0xc7, 0x97, 0x9d, 0x90, 0x0f, 0xa0, 0xea, 0x63, 0x6f, 0xc8, 0xef, 0xd6, 0x0d, 0xd8, 0x8b,
	0x62, 0xb7, 0x47, 0x02, 0xc7, 0x54, 0x2a, 0x0d, 0x48, 0x40, 0xdb, 0xe6, 0x63, 0x06, 0xbc, 0xc3,
	0x70, 0xe8, 0x3d, 0x58, 0x8d, 0xd6, 0x41, 0x37, 0xf8, 0xcb, 0xa0, 0xd2, 0x6b, 0xd3, 0x4a, 0x88,
	0x6a, 0x09, 0x10, 0x7a, 0x17, 0x8a, 0x96, 0x63, 0xd1, 0x2e, 0xbb, 0x87, 0x65, 0xe0, 0xfa, 0x82,
	0x02, 0x49, 0x81, 0x21, 0xf6, 0x05, 0x00, 0xb5, 0xa0, 0xe4, 0x53, 0xdd, 0x1b, 0x31, 0x2c, 0x2a,
	0x30, 0x14, 0x39, 0x24, 0xa4, 0x78, 0x17, 0x8a, 0x3e, 0x25, 0x6e, 0xc4, 0xb0, 0xa4, 0xe2, 0x03,
	0x43, 0x84, 0x04, 0xdf, 0x86, 0x35, 0xdf, 0xd0, 0x6d, 0xdc, 0x25, 0xc1, 0xc8, 0x8f, 0x65, 0x95,
	0x70, 0x70, 0xd8, 0x83, 0x20, 0x72, 0xe5, 0x5b, 0xb0, 0x2a, 0x98, 0x2c, 0x27, 0x22, 0xca, 0x2b,
	0x10, 0x95, 0x39, 0xaa, 0xed, 0x84, 0x3c, 0xf7, 0x60, 0xc5, 0xc3, 0xc9, 0xb8, 0x80, 0x0a, 0x8d,
	0x04, 0xc5, 0x68, 0x4c, 0xec, 0x53, 0x8f, 0x1c, 0x47, 0x34, 0x05, 0x15, 0x1a, 0x09, 0x8a, 0xd1,
	0x04, 0x42, 0x51, 0x46, 0x34, 0x45, 0x15, 0x1a, 0x09, 0x0a, 0x69, 0x76, 0xa1, 0x6c, 0x04, 0x3e,
	0x25, 0x83, 0x88, 0xa5, 0xa4, 0xc0, 0x52, 0x12, 0x98, 0x18, 0x09, 0x93, 0x73, 0xc1, 0x68, 0xb9,
	0xcb, 0x2a, 0x24, 0x02, 0x93, 0x0a, 0x2f, 0xf1, 0x46, 0x0f, 0xb4, 0xa2, 0x1a, 0x5e, 0xe2, 0x45,
	0x0f, 0xf4, 0x08, 0x36, 0x4c, 0x5e, 0xe6, 0xbb, 0xbe, 0xa3, 0xbb, 0xfe, 0x21, 0x19, 0xad, 0xd6,
	0xaa, 0x02, 0x5d, 0x55, 0x80, 0xf7, 0x25, 0x36, 0x96, 0xce, 0x87, 0x58, 0xb7, 0xe9, 0x61, 0xd7,
	0x38, 0xc4, 0xc6, 0x51, 0x7d, 0x4d, 0x25, 0x9d, 0x05, 0x62, 0x97, 0x01, 0xd0, 0xd7, 0x60, 0x69,
	0x40, 0x1c, 0x8b, 0x12, 0xaf, 0x8e, 0x14, 0xb0, 0xa1, 0x31, 0xba, 0x0b, 0x65, 0x57, 0xf7, 0x7d,
	0xf7, 0xd0, 0xd3, 0x7d, 0x6c, 0x63, 0xdf, 0xaf, 0xaf, 0xab, 0x04, 0x25, 0x89, 0x61, 0x41, 0x19,
	0x62, 0x8f, 0x5a, 0x86, 0x6e, 0x77, 0x59, 0x56, 0x5b, 0x4e, 0xbf, 0xeb, 0x12, 0xdb, 0x32, 0x8e,
	0xeb, 0x15, 0x95, 0xa0, 0x84, 0xe0, 0x7d, 0x81, 0x7d, 0xc8, 0xa1, 0x68, 0x17, 0x56, 0xf4, 0x3e,
	0x76, 0x68, 0xd7, 0x72, 0x7c, 0xaa, 0xdb, 0x36, 0x36, 0xeb, 0x55, 0xce, 0xd6, 0x18, 0x63, 0xbb,
	0x43, 0x88, 0x2d, 0x5d, 0xe3, 0x90, 0x76, 0x88, 0x40, 0x1d, 0xa8, 0xc9, 0x04, 0x1c, 0x60, 0xaa,
	0x9b, 0x3a, 0xd5, 0xbb, 0xbe, 0xe1, 0x59, 0x2e, 0xad, 0xd7, 0x14, 0x3c, 0xab, 0x08, 0xec, 0x7d,
	0x09, 0xdd, 0xe7, 0x48, 0xf4, 0x0e, 0x2c, 0x5b, 0x03, 0xbd, 0xcf, 0xc5, 0xc2, 0x86, 0x4a, 0xb4,
	0xb9, 0x75, 0xdb, 0x64, 0x85, 0x4f, 0x26, 0xb2, 0x8c, 0x4e, 0x5d, 0xa5, 0xf0, 0x09, 0x88, 0x0c,
	0xca, 0x07, 0x70, 0xd9, 0x72, 0x0c, 0x0f, 0x0f, 0xb0, 0x43, 0x75, 0xbb, 0x1b, 0xee, 0x8b, 0xc0,
	0x75, 0x89, 0x47, 0xb1, 0x59, 0xbf, 0x34, 0x35, 0x42, 0x8d, 0x18, 0xfe, 0x8e, 0xd8, 0x22, 0x21,
	0x1a, 0x7d, 0x03, 0xe0, 0xf0, 0xd8, 0x65, 0x49, 0xe9, 0x13, 0xaf, 0xde, 0x50, 0xf0, 0x2e, 0x66,
	0xdf, 0xfc, 0x57, 0x1e, 0x0a, 0x31, 0xf5, 0xf3, 0x9c, 0xdf, 0x0d, 0x52, 0x8d, 0x36, 0x77, 0xe6,
	0x46, 0xeb, 0xe8, 0x03, 0xac, 0xf4, 0x1d, 0x91, 0x5b, 0xa2, 0xdb, 0x50, 0xe0, 0x09, 0xe6, 0x18,
	0xdc, 0x53, 0x95, 0x96, 0x08, 0x21, 0xa0, 0x6d, 0xa2, 0xaf, 0x43, 0x7e, 0x48, 0xec, 0x40, 0x7c,
	0xbd, 0x54, 0x69, 0x85, 0xcb, 0xc2, 0x5c, 0x40, 0xfd, 0xa0, 0xe7, 0x60, 0xca, 0xa0, 0x2a, 0x3d,
	0x70, 0x59, 0x98, 0x8b, 0x18, 0xb9, 0x9e, 0x35, 0xd4, 0x29, 0xee, 0x5a, 0xae, 0x52, 0xf7, 0xcb,
	0x4b, 0xfb, 0xb6, 0xcb, 0xef, 0x1b, 0x4a, 0x8b, 0x89, 0x3d, 0x2f, 0x2e, 0x27, 0x96, 0x43, 0x39,
	0x11, 0xe9, 0x98, 0xbc, 0xb2, 0x8e, 0xb9, 0x01, 0x8b, 0x3e, 0xd5, 0x69, 0xe0, 0x2b, 0x75, 0x33,
	0x69, 0x8b, 0xda, 0xb0, 0x46, 0x3d, 0xdd, 0xf1, 0x2d, 0x26, 0x39, 0xba, 0x92, 0x40, 0xa5, 0x8f,
	0xad, 0x8e, 0x60, 0xfb, 0x82, 0xea, 0x1d, 0x58, 0xee, 0x7b, 0x24, 0xe0, 0xdf, 0xb4, 0x8b, 0x0a,
	0x0f, 0xbb, 0xc4, 0xad, 0xdb, 0x26, 0xda, 0x81, 0x05, 0xf2, 0xd4, 0xc1, 0x9e, 0x52, 0xcb, 0x12,
	0xa6, 0x4c, 0x0c, 0xf4, 0x6d, 0xd2, 0x63, 0x75, 0x30, 0x8a, 0xb0, 0x4a, 0xb3, 0x2a, 0x0b, 0xd4,
	0x7e, 0x18, 0xe7, 0x7b, 0xb0, 0x92, 0x2a, 0x5b, 0x6a, 0xdd, 0x2a, 0x59, 0xaf, 0xd8, 0x0e, 0x74,
	0x83, 0x5e, 0xf7, 0x08, 0x1f, 0x2b, 0x75, 0xa7, 0x45, 0x37, 0xe8, 0x7d, 0x07, 0x1f, 0xb3, 0x3a,
	0x25, 0xdb, 0x91, 0x8c, 0xbc, 0x4a, 0x3f, 0x92, 0x1d, 0x2c, 0x8a, 0x7a, 0xde, 0xf2, 0x65, 0x79,
	0x92, 0x2d, 0xe9, 0xb4, 0xa2, 0xb4, 0x6c, 0xf9, 0xa2, 0x16, 0xa1, 0x5b, 0x50, 0xd0, 0x03, 0x4a,
	0x42, 0xe8, 0xfa, 0x54, 0x28, 0x30, 0xf3, 0x11, 0xd8, 0xe0, 0x1f, 0xed, 0xbb, 0xd4, 0x1a, 0x60,
	0xd9, 0x7c, 0xc6, 0xc1, 0x8f, 0xc2, 0x93, 0x95, 0x0e, 0x08, 0x73, 0xf6, 0x03, 0x03, 0x8b, 0xc7,
	0x15, 0xe0, 0xea, 0x74, 0xb0, 0x30, 0x67, 0x3f, 0x34, 0xff, 0x36, 0x1f, 0xd5, 0xbe, 0x8e, 0x7c,
	0x9d, 0xff, 0x5f, 0xfe, 0xc0, 0xb3, 0x05, 0x73, 0x7d, 0x37, 0x50, 0xfa, 0xba, 0xc3, 0x0c, 0x63,
	0x1f, 0x84, 0x16, 0xce, 0xf0, 0x41, 0xa8, 0x05, 0xa5, 0xa8, 0xb4, 0xfa, 0xd6, 0xb3, 0xc9, 0x42,
	0x3f, 0x0e, 0x2e, 0x86, 0x90, 0x7d, 0xeb, 0x59, 0x28, 0xf4, 0x3d, 0xd6, 0x6d, 0x39, 0xc3, 0x92,
	0x02, 0x43, 0x41, 0x22, 0x38, 0xc1, 0x6d, 0x28, 0x0c, 0x48, 0xe0, 0xd0, 0xae, 0x4b, 0x2c, 0x87,
	0x2a, 0x49, 0x7c, 0xe0, 0x80, 0x87, 0xcc, 0x9e, 0x3d, 0x82, 0x80, 0xcb, 0xb3, 0x34, 0xa5, 0xca,
	0x57, 0xe4, 0x90, 0x07, 0x02, 0x11, 0xbe, 0x30, 0x83, 0xe2, 0x0b, 0x73, 0xf3, 0xdf, 0x39, 0x58,
	0xcf, 0x38, 0x69, 0x78, 0xd9, 0x29, 0xf5, 0x04, 0xea, 0x89, 0x33, 0x11, 0xdb, 0xf2, 0x29, 0x76,
	0xc4, 0xcd, 0x55, 0xba, 0x6b, 0x2d, 0x8e, 0xde, 0x93, 0xe0, 0xb6, 0xc9, 0x4a, 0x7b, 0x82, 0x97,
	0x49, 0x0f, 0xa5, 0x44, 0x5c, 0x8d, 0xc3, 0x1e, 0x12, 0x8f, 0x32, 0x71, 0x97, 0xa2, 0x62, 0x1a,
	0x49, 0xb5, 0x11, 0x57, 0x92, 0x7c, 0x0c, 0xda, 0x36, 0x9b, 0xff, 0xd1, 0xa2, 0x8d, 0xbc, 0x67,
	0x39, 0x47, 0x33, 0x47, 0x9d, 0xab, 0x91, 0x9c, 0xb2, 0x1a, 0xd9, 0x83, 0x75, 0xfc, 0x31, 0xc5,
	0x9e, 0xa3, 0xdb, 0xdd, 0xd8, 0x7d, 0x55, 0x02, 0xbe, 0x16, 0x02, 0x77, 0xa3, 0xfb, 0x47, 0x2d,
	0x6c, 0x5e, 0xb9, 0x85, 0x35, 0xff, 0x52, 0x84, 0x25, 0xc9, 0xf0, 0xb2, 0x1f, 0xfe, 0x9b, 0x50,
	0x30, 0xb1, 0x90, 0xe7, 0x16, 0x71, 0x94, 0x1e, 0x3a, 0x0e, 0x88, 0x1d, 0x5e, 0xcf, 0x3f, 0xef,
	0xe1, 0xf5, 0xc2, 0xd9, 0x0e, 0x68, 0x66, 0x90, 0x70, 0xd7, 0x61, 0x71, 0xe8, 0x1a, 0x0c, 0xa7,
	0x22, 0xdf, 0x16, 0x86, 0xae, 0xd1, 0x36, 0x59, 0x39, 0x3c, 0xf0, 0x88, 0x43, 0xfb, 0x5c, 0xf9,
	0x99, 0x4a, 0xe5, 0xac, 0x10, 0x21, 0x04, 0x41, 0xb8, 0xa2, 0xf4, 0xd8, 0x9d, 0x2c, 0xe4, 0x12,
	0xf5, 0x54, 0x22, 0x1e, 0x1d, 0xbb, 0x18, 0xdd, 0x84, 0x3c, 0x76, 0x4c, 0x5e, 0x4c, 0xd5, 0x24,
	0xdd, 0xc8, 0x3c, 0xa6, 0x05, 0x0b, 0xb3, 0x6a, 0xc1, 0xe2, 0x73, 0x69, 0xc1, 0x3d, 0xa8, 0x44,
	0xaf, 0x81, 0x1e, 0x21, 0xb4, 0xab, 0x1b, 0x06, 0x7b, 0xe9, 0x2d, 0x4d, 0x55, 0x19, 0x28, 0xc4,
	0x75, 0x08, 0xa1, 0x2d, 0x8e, 0x1a, 0xed, 0xae, 0xb2, 0xba, 0x40, 0xbc, 0x0d, 0x05, 0x29, 0x10,
	0x83, 0xc0, 0x32, 0x95, 0x44, 0x1d, 0x08, 0xc0, 0xe3, 0xc0, 0x32, 0xd1, 0x2e, 0x94, 0xa3, 0xcf,
	0x32, 0x22, 0x10, 0x2a, 0xba, 0xae, 0x14, 0x7e, 0x95, 0x11, 0x51, 0xb8, 0x0d, 0xc5, 0x90, 0x84,
	0x2b, 0x9d, 0xb5, 0xa9, 0x4a, 0xa7, 0x20, 0xed, 0xa5, 0x4e, 0x8a, 0x0f, 0x6c, 0xa0, 0xb3, 0x0d,
	0x6c, 0xa4, 0x14, 0xda, 0xfa, 0x2c, 0x0a, 0xad, 0x72, 0x16, 0x85, 0x96, 0x39, 0xfd, 0x50, 0x9d,
	0x7d, 0xfa, 0xa1, 0x36, 0xfb, 0xf4, 0xc3, 0xc6, 0x79, 0x4c, 0x3f, 0xd4, 0xcf, 0x77, 0xfa, 0xe1,
	0xd2, 0x6c, 0xd3, 0x0f, 0x7f, 0xcd, 0xc1, 0xc6, 0x5d, 0x5e, 0x99, 0x7b, 0x67, 0x3d, 0xfe, 0xaf,
	0x46, 0x45, 0x5c, 0x1e, 0xcf, 0x8b, 0x32, 0xfd, 0x4a, 0xa2, 0x4c, 0x8b, 0x23, 0x84, 0x58, 0x21,
	0xae, 0x45, 0xa5, 0x45, 0x1c, 0xcf, 0x84, 0xc5, 0xe3, 0x95, 0x44, 0xb2, 0x8a, 0xf3, 0xc8, 0x58,
	0x3a, 0xbe, 0x96, 0xaa, 0xa7, 0x8b, 0xdc, 0x20, 0x51, 0x31, 0x27, 0x74, 0xe4, 0xa5, 0xe7, 0xeb,
	0xc8, 0x15, 0x58, 0xb0, 0xad, 0x81, 0x25, 0x84, 0x68, 0xa9, 0x23, 0xfe, 0x61, 0xde, 0x93, 0x83,
	0x03, 0x16, 0xf7, 0x3c, 0xff, 0x59, 0xfe, 0xd7, 0xfc, 0x08, 0xea, 0xe3, 0x51, 0x94, 0x67, 0x22,
	0xaf, 0x42, 0x81, 0x12, 0xca, 0x9c, 0xe2, 0x27, 0x86, 0x1a, 0x07, 0x02, 0xff, 0x49, 0x1c, 0x0a,
	0xde, 0x80, 0xb0, 0x70, 0xc7, 0x26, 0x7d, 0x32, 0x27, 0x84, 0xc2, 0xf5, 0x60, 0x2b, 0xf7, 0x67,
	0x0d, 0xfe, 0x2f, 0x75, 0xcf, 0xf3, 0x3b, 0x97, 0x8b, 0x9d, 0xb2, 0xe5, 0x12, 0xa7, 0x6c, 0xa3,
	0xe5, 0x9b, 0x4b, 0x2c, 0x5f, 0x14, 0xae, 0xf9, 0xec, 0x70, 0x2d, 0x24, 0xc2, 0xf5, 0xa9, 0x06,
	0x97, 0xb3, 0x7d, 0x57, 0x8d, 0xd9, 0xec, 0x23, 0x52, 0xcd, 0xef, 0xc3, 0xfa, 0x3e, 0x25, 0xee,
	0x8b, 0x19, 0x7a, 0xd9, 0x83, 0x4a, 0x92, 0x7c, 0xa6, 0x91, 0x97, 0x0f, 0x18, 0x9b, 0xee, 0xd1,
	0x17, 0xe3, 0xeb, 0x7d, 0xa8, 0xa6, 0xd8, 0x67, 0x72, 0xf6, 0x87, 0x50, 0xeb, 0x60, 0x83, 0x0c,
	0xb1, 0xf7, 0x62, 0xdc, 0x7d, 0x00, 0x1b, 0x63, 0xfc, 0xb3, 0x46, 0x77, 0x17, 0xeb, 0x3e, 0x7e,
	0x61, 0xd1, 0x4d, 0xb1, 0xcf, 0xe2, 0xec, 0xce, 0xe7, 0xab, 0x50, 0x96, 0x54, 0xf7, 0x75, 0x47,
	0xef, 0x63, 0x0f, 0xfd, 0x58, 0x83, 0x52, 0x62, 0x04, 0x12, 0x6d, 0x26, 0xf6, 0x40, 0xc6, 0xf8,
	0x68, 0xe3, 0xb5, 0x53, 0x2c, 0x84, 0x7f, 0xcd, 0xb7, 0x4e, 0x5a, 0xab, 0xa8, 0x2c, 0xba, 0xfa,
	0xa6, 0xf4, 0xeb, 0xd3, 0xcf, 0xff, 0xf1, 0xeb, 0xdc, 0x5a, 0xb3, 0xb8, 0x3d, 0xfc, 0xca, 0xb6,
	0xfc, 0xc9, 0xbf, 0xa9, 0xbd, 0x85, 0x1e, 0x41, 0x29, 0x31, 0x96, 0x96, 0xf4, 0x20, 0x6b, 0x26,
	0x32, 0xe9, 0x41, 0xf6, 0x04, 0xde, 0x8f, 0x60, 0x6d, 0x6c, 0xd8, 0x0d, 0xbd, 0x31, 0x11, 0x17,
	0x9b, 0xb1, 0x6b, 0xbc, 0x39, 0xc5, 0x4a, 0xde, 0xe1, 0x27, 0x1a, 0x94, 0x93, 0xc3, 0x69, 0x28,
	0xe1, 0x57, 0xe6, 0x5c, 0x5c, 0xa3, 0x79, 0x9a, 0x89, 0x8c, 0xde, 0x97, 0x4f, 0x5a, 0x6b, 0x68,
	0x45, 0x9c, 0x22, 0x85, 0xd1, 0xf3, 0x45, 0xf8, 0xde, 0x1a, 0x0b, 0x1f, 0x73, 0x23, 0x39, 0x17,
	0x96, 0x74, 0x23, 0x73, 0xdc, 0x2d, 0xe9, 0x46, 0xf6, 0x58, 0x99, 0x74, 0x43, 0xaa, 0xc2, 0x69,
	0xab, 0xf8, 0x53, 0x0d, 0x56, 0x52, 0x33, 0x59, 0x28, 0x71, 0x93, 0xec, 0x79, 0xb1, 0xc6, 0xeb,
	0xa7, 0xda, 0x48, 0x4f, 0xde, 0x3e, 0x69, 0x21, 0xb4, 0xea, 0xc9, 0xab, 0xd3, 0x5c, 0x61, 0x39,
	0x9d, 0x98, 0x3d, 0x4a, 0x66, 0x54, 0xd6, 0xac, 0x56, 0x32, 0xa3, 0x32, 0x07, 0x97, 0x64, 0x4e,
	0x7b, 0xfc, 0xda, 0x34, 0x17, 0x3e, 0xd3, 0x60, 0x25, 0x35, 0x84, 0x93, 0x8c, 0x46, 0xf6, 0x3c,
	0x52, 0x32, 0x1a, 0x13, 0xa6, 0x78, 0x9a, 0x57, 0x4f, 0x5a, 0xeb, 0x68, 0x4d, 0x37, 0xcd, 0xd0,
	0x8b, 0x4d, 0xd6, 0xc6, 0xfc, 0x49, 0xbe, 0xfc, 0x46, 0x03, 0x34, 0x3e, 0xb5, 0x82, 0xde, 0x9c,
	0x98, 0x88, 0x09, 0x8f, 0xbe, 0x30, 0xcd, 0x4c, 0x3a, 0x75, 0xed, 0xa4, 0x55, 0x43, 0x95, 0x64,
	0xce, 0xc6, 0xfd, 0x1a, 0x4f, 0xdc, 0x5f, 0x6a, 0xb0, 0x9a, 0x1e, 0x06, 0x41, 0xaf, 0x27, 0xf3,
	0x32, 0x73, 0xb4, 0xa5, 0xf1, 0xc6, 0xe9, 0x46, 0xd2, 0xa3, 0xad, 0x93, 0x56, 0x05, 0xa1, 0x80,
	0x5f, 0x8e, 0x3c, 0xc2, 0xce, 0x50, 0xf8, 0xb3, 0x93, 0xb5, 0x66, 0xab, 0x69, 0x21, 0x96, 0xf4,
	0x67, 0x82, 0xd8, 0x4d, 0xfa, 0x33, 0x49, 0xcb, 0xb1, 0xfc, 0x59, 0x47, 0x6b, 0xa6, 0xbc, 0x9c,
	0xdc, 0xd7, 0x65, 0x94, 0x70, 0x07, 0xfd, 0x56, 0x83, 0x4a, 0x96, 0xc8, 0x41, 0x5f, 0x3c, 0xe5,
	0x56, 0x89, 0x75, 0xbb, 0x32, 0xdd, 0x50, 0xfa, 0xb5, 0x7d, 0xd2, 0xaa, 0xa3, 0x5a, 0xda, 0xaf,
	0xd8, 0xda, 0xa5, 0x9d, 0xfb, 0x04, 0x8a, 0x71, 0x7d, 0x82, 0x12, 0x2f, 0x10, 0x19, 0xb2, 0xa8,
	0xb1, 0x39, 0xd9, 0x40, 0xfa, 0xf0, 0xa5, 0x93, 0xd6, 0x0a, 0x2a, 0xf9, 0x94, 0xb8, 0xa9, 0x7a,
	0x97, 0xbd, 0xbb, 0x13, 0x92, 0x03, 0xa5, 0xe8, 0xc7, 0xb5, 0x4e, 0x72, 0x77, 0x67, 0xea, 0x15,
	0xb9, 0xbb, 0xf9, 0x94, 0xc5, 0x54, 0x17, 0x78, 0xad, 0x4b, 0xca, 0x88, 0x54, 0xad, 0xcb, 0xd4,
	0x30, 0xa9, 0x5a, 0x97, 0xad, 0x43, 0xc2, 0x5a, 0x27, 0xae, 0x2a, 0x45, 0x23, 0x21, 0x11, 0x52,
	0xfd, 0x3b, 0x43, 0x9b, 0xa4, 0xfa, 0x77, 0x96, 0xbe, 0x08, 0xfb, 0x37, 0xbb, 0x36, 0xad, 0x01,
	0xdd, 0x99, 0xff, 0x5e, 0xce, 0xed, 0xf5, 0x16, 0xf9, 0x6b, 0xc1, 0xf5, 0xff, 0x06, 0x00, 0x00,
	0xff, 0xff, 0x71, 0x78, 0x40, 0x4c, 0x1d, 0x33, 0x00, 0x00,
}
