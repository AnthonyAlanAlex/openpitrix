// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreateClusterRequest struct {
	AppId         *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	VersionId     *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	RuntimeEnvId  *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=runtime_env_id,json=runtimeEnvId" json:"runtime_env_id,omitempty"`
	Conf          *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=conf" json:"conf,omitempty"`
	AdvancedParam []string                     `protobuf:"bytes,5,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *CreateClusterRequest) Reset()                    { *m = CreateClusterRequest{} }
func (m *CreateClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateClusterRequest) ProtoMessage()               {}
func (*CreateClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CreateClusterRequest) GetAppId() *google_protobuf.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *CreateClusterRequest) GetVersionId() *google_protobuf.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *CreateClusterRequest) GetRuntimeEnvId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvId
	}
	return nil
}

func (m *CreateClusterRequest) GetConf() *google_protobuf.StringValue {
	if m != nil {
		return m.Conf
	}
	return nil
}

func (m *CreateClusterRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type CreateClusterResponse struct {
	ClusterId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *CreateClusterResponse) Reset()                    { *m = CreateClusterResponse{} }
func (m *CreateClusterResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateClusterResponse) ProtoMessage()               {}
func (*CreateClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CreateClusterResponse) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *CreateClusterResponse) GetJobId() *google_protobuf.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type ModifyClusterRequest struct {
	ClusterId        *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Name             *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description      *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Status           *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	TransitionStatus *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	UpgradeStatus    *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=upgrade_status,json=upgradeStatus" json:"upgrade_status,omitempty"`
	UpgradeTime      *google_protobuf1.Timestamp  `protobuf:"bytes,7,opt,name=upgrade_time,json=upgradeTime" json:"upgrade_time,omitempty"`
	StatusTime       *google_protobuf1.Timestamp  `protobuf:"bytes,8,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *ModifyClusterRequest) Reset()                    { *m = ModifyClusterRequest{} }
func (m *ModifyClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyClusterRequest) ProtoMessage()               {}
func (*ModifyClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ModifyClusterRequest) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ModifyClusterRequest) GetName() *google_protobuf.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ModifyClusterRequest) GetDescription() *google_protobuf.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ModifyClusterRequest) GetStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ModifyClusterRequest) GetTransitionStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.TransitionStatus
	}
	return nil
}

func (m *ModifyClusterRequest) GetUpgradeStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.UpgradeStatus
	}
	return nil
}

func (m *ModifyClusterRequest) GetUpgradeTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpgradeTime
	}
	return nil
}

func (m *ModifyClusterRequest) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type ModifyClusterResponse struct {
	ClusterId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
}

func (m *ModifyClusterResponse) Reset()                    { *m = ModifyClusterResponse{} }
func (m *ModifyClusterResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyClusterResponse) ProtoMessage()               {}
func (*ModifyClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ModifyClusterResponse) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

type ModifyClusterNodeRequest struct {
	NodeId           *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Name             *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	InstanceId       *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	VolumeId         *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	VxnetId          *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	PrivateIp        *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	Status           *google_protobuf.StringValue `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
	TransitionStatus *google_protobuf.StringValue `protobuf:"bytes,8,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	HealthStatus     *google_protobuf.StringValue `protobuf:"bytes,9,opt,name=health_status,json=healthStatus" json:"health_status,omitempty"`
	PubKey           *google_protobuf.StringValue `protobuf:"bytes,10,opt,name=pub_key,json=pubKey" json:"pub_key,omitempty"`
	StatusTime       *google_protobuf1.Timestamp  `protobuf:"bytes,11,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *ModifyClusterNodeRequest) Reset()                    { *m = ModifyClusterNodeRequest{} }
func (m *ModifyClusterNodeRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyClusterNodeRequest) ProtoMessage()               {}
func (*ModifyClusterNodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ModifyClusterNodeRequest) GetNodeId() *google_protobuf.StringValue {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *ModifyClusterNodeRequest) GetName() *google_protobuf.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ModifyClusterNodeRequest) GetInstanceId() *google_protobuf.StringValue {
	if m != nil {
		return m.InstanceId
	}
	return nil
}

func (m *ModifyClusterNodeRequest) GetVolumeId() *google_protobuf.StringValue {
	if m != nil {
		return m.VolumeId
	}
	return nil
}

func (m *ModifyClusterNodeRequest) GetVxnetId() *google_protobuf.StringValue {
	if m != nil {
		return m.VxnetId
	}
	return nil
}

func (m *ModifyClusterNodeRequest) GetPrivateIp() *google_protobuf.StringValue {
	if m != nil {
		return m.PrivateIp
	}
	return nil
}

func (m *ModifyClusterNodeRequest) GetStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ModifyClusterNodeRequest) GetTransitionStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.TransitionStatus
	}
	return nil
}

func (m *ModifyClusterNodeRequest) GetHealthStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.HealthStatus
	}
	return nil
}

func (m *ModifyClusterNodeRequest) GetPubKey() *google_protobuf.StringValue {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *ModifyClusterNodeRequest) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type ModifyClusterNodeResponse struct {
	NodeId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (m *ModifyClusterNodeResponse) Reset()                    { *m = ModifyClusterNodeResponse{} }
func (m *ModifyClusterNodeResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyClusterNodeResponse) ProtoMessage()               {}
func (*ModifyClusterNodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *ModifyClusterNodeResponse) GetNodeId() *google_protobuf.StringValue {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type DeleteClustersRequest struct {
	ClusterId     []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AdvancedParam []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *DeleteClustersRequest) Reset()                    { *m = DeleteClustersRequest{} }
func (m *DeleteClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteClustersRequest) ProtoMessage()               {}
func (*DeleteClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *DeleteClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DeleteClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type DeleteClustersResponse struct {
	ClusterId []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     []string `protobuf:"bytes,2,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *DeleteClustersResponse) Reset()                    { *m = DeleteClustersResponse{} }
func (m *DeleteClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteClustersResponse) ProtoMessage()               {}
func (*DeleteClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *DeleteClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DeleteClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

type UpgradeClusterRequest struct {
	ClusterId     *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	VersionId     *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	AdvancedParam []string                     `protobuf:"bytes,3,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *UpgradeClusterRequest) Reset()                    { *m = UpgradeClusterRequest{} }
func (m *UpgradeClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*UpgradeClusterRequest) ProtoMessage()               {}
func (*UpgradeClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *UpgradeClusterRequest) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *UpgradeClusterRequest) GetVersionId() *google_protobuf.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *UpgradeClusterRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type UpgradeClusterResponse struct {
	ClusterId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *UpgradeClusterResponse) Reset()                    { *m = UpgradeClusterResponse{} }
func (m *UpgradeClusterResponse) String() string            { return proto.CompactTextString(m) }
func (*UpgradeClusterResponse) ProtoMessage()               {}
func (*UpgradeClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *UpgradeClusterResponse) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *UpgradeClusterResponse) GetJobId() *google_protobuf.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type RollbackClusterRequest struct {
	ClusterId     *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AdvancedParam []string                     `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *RollbackClusterRequest) Reset()                    { *m = RollbackClusterRequest{} }
func (m *RollbackClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*RollbackClusterRequest) ProtoMessage()               {}
func (*RollbackClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *RollbackClusterRequest) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *RollbackClusterRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type RollbackClusterResponse struct {
	ClusterId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *RollbackClusterResponse) Reset()                    { *m = RollbackClusterResponse{} }
func (m *RollbackClusterResponse) String() string            { return proto.CompactTextString(m) }
func (*RollbackClusterResponse) ProtoMessage()               {}
func (*RollbackClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *RollbackClusterResponse) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *RollbackClusterResponse) GetJobId() *google_protobuf.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type ResizeClusterRequest struct {
	ClusterId     *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Role          *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	Cpu           *google_protobuf.UInt32Value `protobuf:"bytes,3,opt,name=cpu" json:"cpu,omitempty"`
	Memory        *google_protobuf.UInt32Value `protobuf:"bytes,4,opt,name=memory" json:"memory,omitempty"`
	AdvancedParam []string                     `protobuf:"bytes,5,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *ResizeClusterRequest) Reset()                    { *m = ResizeClusterRequest{} }
func (m *ResizeClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*ResizeClusterRequest) ProtoMessage()               {}
func (*ResizeClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *ResizeClusterRequest) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ResizeClusterRequest) GetRole() *google_protobuf.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ResizeClusterRequest) GetCpu() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *ResizeClusterRequest) GetMemory() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *ResizeClusterRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type ResizeClusterResponse struct {
	ClusterId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *ResizeClusterResponse) Reset()                    { *m = ResizeClusterResponse{} }
func (m *ResizeClusterResponse) String() string            { return proto.CompactTextString(m) }
func (*ResizeClusterResponse) ProtoMessage()               {}
func (*ResizeClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *ResizeClusterResponse) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ResizeClusterResponse) GetJobId() *google_protobuf.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type AddClusterNodesRequest struct {
	ClusterId     *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Role          *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	NodeCount     *google_protobuf.UInt32Value `protobuf:"bytes,3,opt,name=node_count,json=nodeCount" json:"node_count,omitempty"`
	AdvancedParam []string                     `protobuf:"bytes,4,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *AddClusterNodesRequest) Reset()                    { *m = AddClusterNodesRequest{} }
func (m *AddClusterNodesRequest) String() string            { return proto.CompactTextString(m) }
func (*AddClusterNodesRequest) ProtoMessage()               {}
func (*AddClusterNodesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *AddClusterNodesRequest) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *AddClusterNodesRequest) GetRole() *google_protobuf.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *AddClusterNodesRequest) GetNodeCount() *google_protobuf.UInt32Value {
	if m != nil {
		return m.NodeCount
	}
	return nil
}

func (m *AddClusterNodesRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type AddClusterNodesResponse struct {
	ClusterId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *AddClusterNodesResponse) Reset()                    { *m = AddClusterNodesResponse{} }
func (m *AddClusterNodesResponse) String() string            { return proto.CompactTextString(m) }
func (*AddClusterNodesResponse) ProtoMessage()               {}
func (*AddClusterNodesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *AddClusterNodesResponse) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *AddClusterNodesResponse) GetJobId() *google_protobuf.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type DeleteClusterNodesRequest struct {
	ClusterId     *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Role          *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	NodeId        []string                     `protobuf:"bytes,3,rep,name=node_id,json=nodeId" json:"node_id,omitempty"`
	AdvancedParam []string                     `protobuf:"bytes,4,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *DeleteClusterNodesRequest) Reset()                    { *m = DeleteClusterNodesRequest{} }
func (m *DeleteClusterNodesRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteClusterNodesRequest) ProtoMessage()               {}
func (*DeleteClusterNodesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *DeleteClusterNodesRequest) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DeleteClusterNodesRequest) GetRole() *google_protobuf.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *DeleteClusterNodesRequest) GetNodeId() []string {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *DeleteClusterNodesRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type DeleteClusterNodesResponse struct {
	ClusterId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *DeleteClusterNodesResponse) Reset()                    { *m = DeleteClusterNodesResponse{} }
func (m *DeleteClusterNodesResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteClusterNodesResponse) ProtoMessage()               {}
func (*DeleteClusterNodesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *DeleteClusterNodesResponse) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DeleteClusterNodesResponse) GetJobId() *google_protobuf.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type UpdateClusterEnvRequest struct {
	ClusterId     *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Env           *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=env" json:"env,omitempty"`
	AdvancedParam []string                     `protobuf:"bytes,3,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *UpdateClusterEnvRequest) Reset()                    { *m = UpdateClusterEnvRequest{} }
func (m *UpdateClusterEnvRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateClusterEnvRequest) ProtoMessage()               {}
func (*UpdateClusterEnvRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *UpdateClusterEnvRequest) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *UpdateClusterEnvRequest) GetEnv() *google_protobuf.StringValue {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *UpdateClusterEnvRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type UpdateClusterEnvResponse struct {
	ClusterId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *UpdateClusterEnvResponse) Reset()                    { *m = UpdateClusterEnvResponse{} }
func (m *UpdateClusterEnvResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateClusterEnvResponse) ProtoMessage()               {}
func (*UpdateClusterEnvResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *UpdateClusterEnvResponse) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *UpdateClusterEnvResponse) GetJobId() *google_protobuf.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type ClusterNode struct {
	ClusterId          *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	NodeId             *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Name               *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	InstanceId         *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	VxnetId            *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	PrivateIp          *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	Status             *google_protobuf.StringValue `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
	TransitionStatus   *google_protobuf.StringValue `protobuf:"bytes,8,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	ServerId           *google_protobuf.UInt32Value `protobuf:"bytes,9,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	ServerIdUpperBound *google_protobuf.UInt32Value `protobuf:"bytes,10,opt,name=server_id_upper_bound,json=serverIdUpperBound" json:"server_id_upper_bound,omitempty"`
	GlobalServerId     *google_protobuf.UInt64Value `protobuf:"bytes,11,opt,name=global_server_id,json=globalServerId" json:"global_server_id,omitempty"`
	HealthStatus       *google_protobuf.StringValue `protobuf:"bytes,12,opt,name=health_status,json=healthStatus" json:"health_status,omitempty"`
	Role               *google_protobuf.StringValue `protobuf:"bytes,13,opt,name=role" json:"role,omitempty"`
	Owner              *google_protobuf.StringValue `protobuf:"bytes,14,opt,name=owner" json:"owner,omitempty"`
	Cpu                *google_protobuf.UInt32Value `protobuf:"bytes,15,opt,name=cpu" json:"cpu,omitempty"`
	Gpu                *google_protobuf.UInt32Value `protobuf:"bytes,16,opt,name=gpu" json:"gpu,omitempty"`
	Memory             *google_protobuf.UInt32Value `protobuf:"bytes,17,opt,name=memory" json:"memory,omitempty"`
	StorageSize        *google_protobuf.UInt32Value `protobuf:"bytes,18,opt,name=storage_size,json=storageSize" json:"storage_size,omitempty"`
	Env                *google_protobuf.StringValue `protobuf:"bytes,19,opt,name=env" json:"env,omitempty"`
	Passphraseless     *google_protobuf.StringValue `protobuf:"bytes,20,opt,name=passphraseless" json:"passphraseless,omitempty"`
	AdvancedActions    *google_protobuf.StringValue `protobuf:"bytes,21,opt,name=advanced_actions,json=advancedActions" json:"advanced_actions,omitempty"`
	ImageId            *google_protobuf.StringValue `protobuf:"bytes,22,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	CreateTime         *google_protobuf1.Timestamp  `protobuf:"bytes,23,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime         *google_protobuf1.Timestamp  `protobuf:"bytes,24,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *ClusterNode) Reset()                    { *m = ClusterNode{} }
func (m *ClusterNode) String() string            { return proto.CompactTextString(m) }
func (*ClusterNode) ProtoMessage()               {}
func (*ClusterNode) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *ClusterNode) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ClusterNode) GetNodeId() *google_protobuf.StringValue {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *ClusterNode) GetName() *google_protobuf.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ClusterNode) GetInstanceId() *google_protobuf.StringValue {
	if m != nil {
		return m.InstanceId
	}
	return nil
}

func (m *ClusterNode) GetVxnetId() *google_protobuf.StringValue {
	if m != nil {
		return m.VxnetId
	}
	return nil
}

func (m *ClusterNode) GetPrivateIp() *google_protobuf.StringValue {
	if m != nil {
		return m.PrivateIp
	}
	return nil
}

func (m *ClusterNode) GetStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ClusterNode) GetTransitionStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.TransitionStatus
	}
	return nil
}

func (m *ClusterNode) GetServerId() *google_protobuf.UInt32Value {
	if m != nil {
		return m.ServerId
	}
	return nil
}

func (m *ClusterNode) GetServerIdUpperBound() *google_protobuf.UInt32Value {
	if m != nil {
		return m.ServerIdUpperBound
	}
	return nil
}

func (m *ClusterNode) GetGlobalServerId() *google_protobuf.UInt64Value {
	if m != nil {
		return m.GlobalServerId
	}
	return nil
}

func (m *ClusterNode) GetHealthStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.HealthStatus
	}
	return nil
}

func (m *ClusterNode) GetRole() *google_protobuf.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ClusterNode) GetOwner() *google_protobuf.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *ClusterNode) GetCpu() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *ClusterNode) GetGpu() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Gpu
	}
	return nil
}

func (m *ClusterNode) GetMemory() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *ClusterNode) GetStorageSize() *google_protobuf.UInt32Value {
	if m != nil {
		return m.StorageSize
	}
	return nil
}

func (m *ClusterNode) GetEnv() *google_protobuf.StringValue {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *ClusterNode) GetPassphraseless() *google_protobuf.StringValue {
	if m != nil {
		return m.Passphraseless
	}
	return nil
}

func (m *ClusterNode) GetAdvancedActions() *google_protobuf.StringValue {
	if m != nil {
		return m.AdvancedActions
	}
	return nil
}

func (m *ClusterNode) GetImageId() *google_protobuf.StringValue {
	if m != nil {
		return m.ImageId
	}
	return nil
}

func (m *ClusterNode) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ClusterNode) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type Cluster struct {
	ClusterId          *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	GlobalUuid         *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=global_uuid,json=globalUuid" json:"global_uuid,omitempty"`
	FrontgateId        *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=frontgate_id,json=frontgateId" json:"frontgate_id,omitempty"`
	AppId              *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	VersionId          *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	Status             *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	TransitionStatus   *google_protobuf.StringValue `protobuf:"bytes,7,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	RuntimeEnvId       *google_protobuf.StringValue `protobuf:"bytes,8,opt,name=runtime_env_id,json=runtimeEnvId" json:"runtime_env_id,omitempty"`
	Owner              *google_protobuf.StringValue `protobuf:"bytes,9,opt,name=owner" json:"owner,omitempty"`
	Name               *google_protobuf.StringValue `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	Description        *google_protobuf.StringValue `protobuf:"bytes,11,opt,name=description" json:"description,omitempty"`
	NodeCount          *google_protobuf.UInt32Value `protobuf:"bytes,12,opt,name=node_count,json=nodeCount" json:"node_count,omitempty"`
	Endpoints          *google_protobuf.StringValue `protobuf:"bytes,13,opt,name=endpoints" json:"endpoints,omitempty"`
	MetadataRootAccess *google_protobuf.BoolValue   `protobuf:"bytes,14,opt,name=metadata_root_access,json=metadataRootAccess" json:"metadata_root_access,omitempty"`
	Links              map[string]string            `protobuf:"bytes,15,rep,name=links" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Roles              map[string]string            `protobuf:"bytes,16,rep,name=roles" json:"roles,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AdvancedActions    map[string]string            `protobuf:"bytes,17,rep,name=advanced_actions,json=advancedActions" json:"advanced_actions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	UpgradeStatus      *google_protobuf.StringValue `protobuf:"bytes,18,opt,name=upgrade_status,json=upgradeStatus" json:"upgrade_status,omitempty"`
	CreateTime         *google_protobuf1.Timestamp  `protobuf:"bytes,19,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime         *google_protobuf1.Timestamp  `protobuf:"bytes,20,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	ClusterNodeSet     []*ClusterNode               `protobuf:"bytes,21,rep,name=cluster_node_set,json=clusterNodeSet" json:"cluster_node_set,omitempty"`
}

func (m *Cluster) Reset()                    { *m = Cluster{} }
func (m *Cluster) String() string            { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()               {}
func (*Cluster) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *Cluster) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *Cluster) GetGlobalUuid() *google_protobuf.StringValue {
	if m != nil {
		return m.GlobalUuid
	}
	return nil
}

func (m *Cluster) GetFrontgateId() *google_protobuf.StringValue {
	if m != nil {
		return m.FrontgateId
	}
	return nil
}

func (m *Cluster) GetAppId() *google_protobuf.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *Cluster) GetVersionId() *google_protobuf.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *Cluster) GetStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Cluster) GetTransitionStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.TransitionStatus
	}
	return nil
}

func (m *Cluster) GetRuntimeEnvId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvId
	}
	return nil
}

func (m *Cluster) GetOwner() *google_protobuf.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Cluster) GetName() *google_protobuf.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Cluster) GetDescription() *google_protobuf.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Cluster) GetNodeCount() *google_protobuf.UInt32Value {
	if m != nil {
		return m.NodeCount
	}
	return nil
}

func (m *Cluster) GetEndpoints() *google_protobuf.StringValue {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *Cluster) GetMetadataRootAccess() *google_protobuf.BoolValue {
	if m != nil {
		return m.MetadataRootAccess
	}
	return nil
}

func (m *Cluster) GetLinks() map[string]string {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *Cluster) GetRoles() map[string]string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Cluster) GetAdvancedActions() map[string]string {
	if m != nil {
		return m.AdvancedActions
	}
	return nil
}

func (m *Cluster) GetUpgradeStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.UpgradeStatus
	}
	return nil
}

func (m *Cluster) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Cluster) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Cluster) GetClusterNodeSet() []*ClusterNode {
	if m != nil {
		return m.ClusterNodeSet
	}
	return nil
}

type DescribeClustersRequest struct {
	ClusterId         []string                     `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AppId             []string                     `protobuf:"bytes,2,rep,name=app_id,json=appId" json:"app_id,omitempty"`
	VersionId         []string                     `protobuf:"bytes,3,rep,name=version_id,json=versionId" json:"version_id,omitempty"`
	Status            []string                     `protobuf:"bytes,4,rep,name=status" json:"status,omitempty"`
	RuntimeEnvId      []string                     `protobuf:"bytes,5,rep,name=runtime_env_id,json=runtimeEnvId" json:"runtime_env_id,omitempty"`
	FrontgateId       []string                     `protobuf:"bytes,6,rep,name=frontgate_id,json=frontgateId" json:"frontgate_id,omitempty"`
	ExternalClusterId *google_protobuf.StringValue `protobuf:"bytes,7,opt,name=external_cluster_id,json=externalClusterId" json:"external_cluster_id,omitempty"`
	// default is 20, max value is 200
	Limit uint32 `protobuf:"varint,8,opt,name=limit" json:"limit,omitempty"`
	// default is 0
	Offset uint32 `protobuf:"varint,9,opt,name=offset" json:"offset,omitempty"`
}

func (m *DescribeClustersRequest) Reset()                    { *m = DescribeClustersRequest{} }
func (m *DescribeClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeClustersRequest) ProtoMessage()               {}
func (*DescribeClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *DescribeClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DescribeClustersRequest) GetAppId() []string {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *DescribeClustersRequest) GetVersionId() []string {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *DescribeClustersRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeClustersRequest) GetRuntimeEnvId() []string {
	if m != nil {
		return m.RuntimeEnvId
	}
	return nil
}

func (m *DescribeClustersRequest) GetFrontgateId() []string {
	if m != nil {
		return m.FrontgateId
	}
	return nil
}

func (m *DescribeClustersRequest) GetExternalClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ExternalClusterId
	}
	return nil
}

func (m *DescribeClustersRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeClustersRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type DescribeClustersResponse struct {
	TotalCount uint32     `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	ClusterSet []*Cluster `protobuf:"bytes,2,rep,name=cluster_set,json=clusterSet" json:"cluster_set,omitempty"`
}

func (m *DescribeClustersResponse) Reset()                    { *m = DescribeClustersResponse{} }
func (m *DescribeClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeClustersResponse) ProtoMessage()               {}
func (*DescribeClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *DescribeClustersResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeClustersResponse) GetClusterSet() []*Cluster {
	if m != nil {
		return m.ClusterSet
	}
	return nil
}

type DescribeClusterNodesRequest struct {
	ClusterId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	NodeId    []string                     `protobuf:"bytes,2,rep,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Status    []string                     `protobuf:"bytes,3,rep,name=status" json:"status,omitempty"`
	// default is 20, max value is 200
	Limit uint32 `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	// default is 0
	Offset uint32 `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
}

func (m *DescribeClusterNodesRequest) Reset()                    { *m = DescribeClusterNodesRequest{} }
func (m *DescribeClusterNodesRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeClusterNodesRequest) ProtoMessage()               {}
func (*DescribeClusterNodesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *DescribeClusterNodesRequest) GetClusterId() *google_protobuf.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DescribeClusterNodesRequest) GetNodeId() []string {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *DescribeClusterNodesRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeClusterNodesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeClusterNodesRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type DescribeClusterNodesResponse struct {
	TotalCount     uint32         `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	ClusterNodeSet []*ClusterNode `protobuf:"bytes,2,rep,name=cluster_node_set,json=clusterNodeSet" json:"cluster_node_set,omitempty"`
}

func (m *DescribeClusterNodesResponse) Reset()                    { *m = DescribeClusterNodesResponse{} }
func (m *DescribeClusterNodesResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeClusterNodesResponse) ProtoMessage()               {}
func (*DescribeClusterNodesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *DescribeClusterNodesResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeClusterNodesResponse) GetClusterNodeSet() []*ClusterNode {
	if m != nil {
		return m.ClusterNodeSet
	}
	return nil
}

type StopClustersRequest struct {
	ClusterId     []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AdvancedParam []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *StopClustersRequest) Reset()                    { *m = StopClustersRequest{} }
func (m *StopClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*StopClustersRequest) ProtoMessage()               {}
func (*StopClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *StopClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *StopClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type StopClustersResponse struct {
	ClusterId []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     []string `protobuf:"bytes,2,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *StopClustersResponse) Reset()                    { *m = StopClustersResponse{} }
func (m *StopClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*StopClustersResponse) ProtoMessage()               {}
func (*StopClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *StopClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *StopClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

type StartClustersRequest struct {
	ClusterId     []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AdvancedParam []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *StartClustersRequest) Reset()                    { *m = StartClustersRequest{} }
func (m *StartClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*StartClustersRequest) ProtoMessage()               {}
func (*StartClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

func (m *StartClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *StartClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type StartClustersResponse struct {
	ClusterId []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     []string `protobuf:"bytes,2,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *StartClustersResponse) Reset()                    { *m = StartClustersResponse{} }
func (m *StartClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*StartClustersResponse) ProtoMessage()               {}
func (*StartClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *StartClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *StartClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

type RecoverClustersRequest struct {
	ClusterId     []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AdvancedParam []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *RecoverClustersRequest) Reset()                    { *m = RecoverClustersRequest{} }
func (m *RecoverClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*RecoverClustersRequest) ProtoMessage()               {}
func (*RecoverClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{30} }

func (m *RecoverClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *RecoverClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type RecoverClustersResponse struct {
	ClusterId []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     []string `protobuf:"bytes,2,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *RecoverClustersResponse) Reset()                    { *m = RecoverClustersResponse{} }
func (m *RecoverClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*RecoverClustersResponse) ProtoMessage()               {}
func (*RecoverClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{31} }

func (m *RecoverClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *RecoverClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

type CeaseClustersRequest struct {
	ClusterId     []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	AdvancedParam []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam" json:"advanced_param,omitempty"`
}

func (m *CeaseClustersRequest) Reset()                    { *m = CeaseClustersRequest{} }
func (m *CeaseClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*CeaseClustersRequest) ProtoMessage()               {}
func (*CeaseClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{32} }

func (m *CeaseClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *CeaseClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type CeaseClustersResponse struct {
	ClusterId []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	JobId     []string `protobuf:"bytes,2,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *CeaseClustersResponse) Reset()                    { *m = CeaseClustersResponse{} }
func (m *CeaseClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*CeaseClustersResponse) ProtoMessage()               {}
func (*CeaseClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{33} }

func (m *CeaseClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *CeaseClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateClusterRequest)(nil), "openpitrix.CreateClusterRequest")
	proto.RegisterType((*CreateClusterResponse)(nil), "openpitrix.CreateClusterResponse")
	proto.RegisterType((*ModifyClusterRequest)(nil), "openpitrix.ModifyClusterRequest")
	proto.RegisterType((*ModifyClusterResponse)(nil), "openpitrix.ModifyClusterResponse")
	proto.RegisterType((*ModifyClusterNodeRequest)(nil), "openpitrix.ModifyClusterNodeRequest")
	proto.RegisterType((*ModifyClusterNodeResponse)(nil), "openpitrix.ModifyClusterNodeResponse")
	proto.RegisterType((*DeleteClustersRequest)(nil), "openpitrix.DeleteClustersRequest")
	proto.RegisterType((*DeleteClustersResponse)(nil), "openpitrix.DeleteClustersResponse")
	proto.RegisterType((*UpgradeClusterRequest)(nil), "openpitrix.UpgradeClusterRequest")
	proto.RegisterType((*UpgradeClusterResponse)(nil), "openpitrix.UpgradeClusterResponse")
	proto.RegisterType((*RollbackClusterRequest)(nil), "openpitrix.RollbackClusterRequest")
	proto.RegisterType((*RollbackClusterResponse)(nil), "openpitrix.RollbackClusterResponse")
	proto.RegisterType((*ResizeClusterRequest)(nil), "openpitrix.ResizeClusterRequest")
	proto.RegisterType((*ResizeClusterResponse)(nil), "openpitrix.ResizeClusterResponse")
	proto.RegisterType((*AddClusterNodesRequest)(nil), "openpitrix.AddClusterNodesRequest")
	proto.RegisterType((*AddClusterNodesResponse)(nil), "openpitrix.AddClusterNodesResponse")
	proto.RegisterType((*DeleteClusterNodesRequest)(nil), "openpitrix.DeleteClusterNodesRequest")
	proto.RegisterType((*DeleteClusterNodesResponse)(nil), "openpitrix.DeleteClusterNodesResponse")
	proto.RegisterType((*UpdateClusterEnvRequest)(nil), "openpitrix.UpdateClusterEnvRequest")
	proto.RegisterType((*UpdateClusterEnvResponse)(nil), "openpitrix.UpdateClusterEnvResponse")
	proto.RegisterType((*ClusterNode)(nil), "openpitrix.ClusterNode")
	proto.RegisterType((*Cluster)(nil), "openpitrix.Cluster")
	proto.RegisterType((*DescribeClustersRequest)(nil), "openpitrix.DescribeClustersRequest")
	proto.RegisterType((*DescribeClustersResponse)(nil), "openpitrix.DescribeClustersResponse")
	proto.RegisterType((*DescribeClusterNodesRequest)(nil), "openpitrix.DescribeClusterNodesRequest")
	proto.RegisterType((*DescribeClusterNodesResponse)(nil), "openpitrix.DescribeClusterNodesResponse")
	proto.RegisterType((*StopClustersRequest)(nil), "openpitrix.StopClustersRequest")
	proto.RegisterType((*StopClustersResponse)(nil), "openpitrix.StopClustersResponse")
	proto.RegisterType((*StartClustersRequest)(nil), "openpitrix.StartClustersRequest")
	proto.RegisterType((*StartClustersResponse)(nil), "openpitrix.StartClustersResponse")
	proto.RegisterType((*RecoverClustersRequest)(nil), "openpitrix.RecoverClustersRequest")
	proto.RegisterType((*RecoverClustersResponse)(nil), "openpitrix.RecoverClustersResponse")
	proto.RegisterType((*CeaseClustersRequest)(nil), "openpitrix.CeaseClustersRequest")
	proto.RegisterType((*CeaseClustersResponse)(nil), "openpitrix.CeaseClustersResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ClusterManager service

type ClusterManagerClient interface {
	CreateCluster(ctx context.Context, in *CreateClusterRequest, opts ...grpc.CallOption) (*CreateClusterResponse, error)
	ModifyCluster(ctx context.Context, in *ModifyClusterRequest, opts ...grpc.CallOption) (*ModifyClusterResponse, error)
	ModifyClusterNode(ctx context.Context, in *ModifyClusterNodeRequest, opts ...grpc.CallOption) (*ModifyClusterNodeResponse, error)
	DeleteClusters(ctx context.Context, in *DeleteClustersRequest, opts ...grpc.CallOption) (*DeleteClustersResponse, error)
	UpgradeCluster(ctx context.Context, in *UpgradeClusterRequest, opts ...grpc.CallOption) (*UpgradeClusterResponse, error)
	RollbackCluster(ctx context.Context, in *RollbackClusterRequest, opts ...grpc.CallOption) (*RollbackClusterResponse, error)
	ResizeCluster(ctx context.Context, in *ResizeClusterRequest, opts ...grpc.CallOption) (*ResizeClusterResponse, error)
	AddClusterNodes(ctx context.Context, in *AddClusterNodesRequest, opts ...grpc.CallOption) (*AddClusterNodesResponse, error)
	DeleteClusterNodes(ctx context.Context, in *DeleteClusterNodesRequest, opts ...grpc.CallOption) (*DeleteClusterNodesResponse, error)
	UpdateClusterEnv(ctx context.Context, in *UpdateClusterEnvRequest, opts ...grpc.CallOption) (*UpdateClusterEnvResponse, error)
	DescribeClusters(ctx context.Context, in *DescribeClustersRequest, opts ...grpc.CallOption) (*DescribeClustersResponse, error)
	DescribeClusterNodes(ctx context.Context, in *DescribeClusterNodesRequest, opts ...grpc.CallOption) (*DescribeClusterNodesResponse, error)
	StopClusters(ctx context.Context, in *StopClustersRequest, opts ...grpc.CallOption) (*StopClustersResponse, error)
	StartClusters(ctx context.Context, in *StartClustersRequest, opts ...grpc.CallOption) (*StartClustersResponse, error)
	RecoverClusters(ctx context.Context, in *RecoverClustersRequest, opts ...grpc.CallOption) (*RecoverClustersResponse, error)
	CeaseClusters(ctx context.Context, in *CeaseClustersRequest, opts ...grpc.CallOption) (*CeaseClustersResponse, error)
}

type clusterManagerClient struct {
	cc *grpc.ClientConn
}

func NewClusterManagerClient(cc *grpc.ClientConn) ClusterManagerClient {
	return &clusterManagerClient{cc}
}

func (c *clusterManagerClient) CreateCluster(ctx context.Context, in *CreateClusterRequest, opts ...grpc.CallOption) (*CreateClusterResponse, error) {
	out := new(CreateClusterResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/CreateCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ModifyCluster(ctx context.Context, in *ModifyClusterRequest, opts ...grpc.CallOption) (*ModifyClusterResponse, error) {
	out := new(ModifyClusterResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/ModifyCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ModifyClusterNode(ctx context.Context, in *ModifyClusterNodeRequest, opts ...grpc.CallOption) (*ModifyClusterNodeResponse, error) {
	out := new(ModifyClusterNodeResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/ModifyClusterNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteClusters(ctx context.Context, in *DeleteClustersRequest, opts ...grpc.CallOption) (*DeleteClustersResponse, error) {
	out := new(DeleteClustersResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/DeleteClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpgradeCluster(ctx context.Context, in *UpgradeClusterRequest, opts ...grpc.CallOption) (*UpgradeClusterResponse, error) {
	out := new(UpgradeClusterResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/UpgradeCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) RollbackCluster(ctx context.Context, in *RollbackClusterRequest, opts ...grpc.CallOption) (*RollbackClusterResponse, error) {
	out := new(RollbackClusterResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/RollbackCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ResizeCluster(ctx context.Context, in *ResizeClusterRequest, opts ...grpc.CallOption) (*ResizeClusterResponse, error) {
	out := new(ResizeClusterResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/ResizeCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) AddClusterNodes(ctx context.Context, in *AddClusterNodesRequest, opts ...grpc.CallOption) (*AddClusterNodesResponse, error) {
	out := new(AddClusterNodesResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/AddClusterNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteClusterNodes(ctx context.Context, in *DeleteClusterNodesRequest, opts ...grpc.CallOption) (*DeleteClusterNodesResponse, error) {
	out := new(DeleteClusterNodesResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/DeleteClusterNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateClusterEnv(ctx context.Context, in *UpdateClusterEnvRequest, opts ...grpc.CallOption) (*UpdateClusterEnvResponse, error) {
	out := new(UpdateClusterEnvResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/UpdateClusterEnv", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DescribeClusters(ctx context.Context, in *DescribeClustersRequest, opts ...grpc.CallOption) (*DescribeClustersResponse, error) {
	out := new(DescribeClustersResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/DescribeClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DescribeClusterNodes(ctx context.Context, in *DescribeClusterNodesRequest, opts ...grpc.CallOption) (*DescribeClusterNodesResponse, error) {
	out := new(DescribeClusterNodesResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/DescribeClusterNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) StopClusters(ctx context.Context, in *StopClustersRequest, opts ...grpc.CallOption) (*StopClustersResponse, error) {
	out := new(StopClustersResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/StopClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) StartClusters(ctx context.Context, in *StartClustersRequest, opts ...grpc.CallOption) (*StartClustersResponse, error) {
	out := new(StartClustersResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/StartClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) RecoverClusters(ctx context.Context, in *RecoverClustersRequest, opts ...grpc.CallOption) (*RecoverClustersResponse, error) {
	out := new(RecoverClustersResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/RecoverClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CeaseClusters(ctx context.Context, in *CeaseClustersRequest, opts ...grpc.CallOption) (*CeaseClustersResponse, error) {
	out := new(CeaseClustersResponse)
	err := grpc.Invoke(ctx, "/openpitrix.ClusterManager/CeaseClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ClusterManager service

type ClusterManagerServer interface {
	CreateCluster(context.Context, *CreateClusterRequest) (*CreateClusterResponse, error)
	ModifyCluster(context.Context, *ModifyClusterRequest) (*ModifyClusterResponse, error)
	ModifyClusterNode(context.Context, *ModifyClusterNodeRequest) (*ModifyClusterNodeResponse, error)
	DeleteClusters(context.Context, *DeleteClustersRequest) (*DeleteClustersResponse, error)
	UpgradeCluster(context.Context, *UpgradeClusterRequest) (*UpgradeClusterResponse, error)
	RollbackCluster(context.Context, *RollbackClusterRequest) (*RollbackClusterResponse, error)
	ResizeCluster(context.Context, *ResizeClusterRequest) (*ResizeClusterResponse, error)
	AddClusterNodes(context.Context, *AddClusterNodesRequest) (*AddClusterNodesResponse, error)
	DeleteClusterNodes(context.Context, *DeleteClusterNodesRequest) (*DeleteClusterNodesResponse, error)
	UpdateClusterEnv(context.Context, *UpdateClusterEnvRequest) (*UpdateClusterEnvResponse, error)
	DescribeClusters(context.Context, *DescribeClustersRequest) (*DescribeClustersResponse, error)
	DescribeClusterNodes(context.Context, *DescribeClusterNodesRequest) (*DescribeClusterNodesResponse, error)
	StopClusters(context.Context, *StopClustersRequest) (*StopClustersResponse, error)
	StartClusters(context.Context, *StartClustersRequest) (*StartClustersResponse, error)
	RecoverClusters(context.Context, *RecoverClustersRequest) (*RecoverClustersResponse, error)
	CeaseClusters(context.Context, *CeaseClustersRequest) (*CeaseClustersResponse, error)
}

func RegisterClusterManagerServer(s *grpc.Server, srv ClusterManagerServer) {
	s.RegisterService(&_ClusterManager_serviceDesc, srv)
}

func _ClusterManager_CreateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/CreateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateCluster(ctx, req.(*CreateClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ModifyCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ModifyCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/ModifyCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ModifyCluster(ctx, req.(*ModifyClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ModifyClusterNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyClusterNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ModifyClusterNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/ModifyClusterNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ModifyClusterNode(ctx, req.(*ModifyClusterNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DeleteClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteClusters(ctx, req.(*DeleteClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpgradeCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpgradeCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/UpgradeCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpgradeCluster(ctx, req.(*UpgradeClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_RollbackCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).RollbackCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/RollbackCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).RollbackCluster(ctx, req.(*RollbackClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ResizeCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResizeClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ResizeCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/ResizeCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ResizeCluster(ctx, req.(*ResizeClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_AddClusterNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddClusterNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).AddClusterNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/AddClusterNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).AddClusterNodes(ctx, req.(*AddClusterNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteClusterNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteClusterNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DeleteClusterNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteClusterNodes(ctx, req.(*DeleteClusterNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateClusterEnv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateClusterEnvRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateClusterEnv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/UpdateClusterEnv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateClusterEnv(ctx, req.(*UpdateClusterEnvRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DescribeClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DescribeClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DescribeClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DescribeClusters(ctx, req.(*DescribeClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DescribeClusterNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeClusterNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DescribeClusterNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DescribeClusterNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DescribeClusterNodes(ctx, req.(*DescribeClusterNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_StopClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).StopClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/StopClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).StopClusters(ctx, req.(*StopClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_StartClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).StartClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/StartClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).StartClusters(ctx, req.(*StartClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_RecoverClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecoverClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).RecoverClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/RecoverClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).RecoverClusters(ctx, req.(*RecoverClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CeaseClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CeaseClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CeaseClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/CeaseClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CeaseClusters(ctx, req.(*CeaseClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.ClusterManager",
	HandlerType: (*ClusterManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCluster",
			Handler:    _ClusterManager_CreateCluster_Handler,
		},
		{
			MethodName: "ModifyCluster",
			Handler:    _ClusterManager_ModifyCluster_Handler,
		},
		{
			MethodName: "ModifyClusterNode",
			Handler:    _ClusterManager_ModifyClusterNode_Handler,
		},
		{
			MethodName: "DeleteClusters",
			Handler:    _ClusterManager_DeleteClusters_Handler,
		},
		{
			MethodName: "UpgradeCluster",
			Handler:    _ClusterManager_UpgradeCluster_Handler,
		},
		{
			MethodName: "RollbackCluster",
			Handler:    _ClusterManager_RollbackCluster_Handler,
		},
		{
			MethodName: "ResizeCluster",
			Handler:    _ClusterManager_ResizeCluster_Handler,
		},
		{
			MethodName: "AddClusterNodes",
			Handler:    _ClusterManager_AddClusterNodes_Handler,
		},
		{
			MethodName: "DeleteClusterNodes",
			Handler:    _ClusterManager_DeleteClusterNodes_Handler,
		},
		{
			MethodName: "UpdateClusterEnv",
			Handler:    _ClusterManager_UpdateClusterEnv_Handler,
		},
		{
			MethodName: "DescribeClusters",
			Handler:    _ClusterManager_DescribeClusters_Handler,
		},
		{
			MethodName: "DescribeClusterNodes",
			Handler:    _ClusterManager_DescribeClusterNodes_Handler,
		},
		{
			MethodName: "StopClusters",
			Handler:    _ClusterManager_StopClusters_Handler,
		},
		{
			MethodName: "StartClusters",
			Handler:    _ClusterManager_StartClusters_Handler,
		},
		{
			MethodName: "RecoverClusters",
			Handler:    _ClusterManager_RecoverClusters_Handler,
		},
		{
			MethodName: "CeaseClusters",
			Handler:    _ClusterManager_CeaseClusters_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cluster.proto",
}

func init() { proto.RegisterFile("cluster.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 2217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x5a, 0x4f, 0x73, 0x1b, 0x49,
	0x15, 0xaf, 0x91, 0x2c, 0xdb, 0x7a, 0xb2, 0x65, 0xa9, 0x2d, 0xd9, 0x5a, 0x91, 0xdd, 0x78, 0xb5,
	0x09, 0x98, 0xec, 0x46, 0xf2, 0x3a, 0x59, 0xd8, 0x75, 0x2a, 0x50, 0xb2, 0x13, 0x40, 0x45, 0xb2,
	0x49, 0xc9, 0x6b, 0x0e, 0xfc, 0x53, 0x8d, 0x34, 0x6d, 0x65, 0x12, 0x69, 0x7a, 0x32, 0xd3, 0x52,
	0xe2, 0xad, 0x3d, 0x50, 0x29, 0xaa, 0x20, 0xfc, 0xab, 0x42, 0x14, 0x17, 0xee, 0x9c, 0x28, 0x8a,
	0x2a, 0x4e, 0xf0, 0x15, 0xe0, 0xc8, 0x57, 0x80, 0x13, 0x5f, 0x82, 0xea, 0x9e, 0x1e, 0x6b, 0x7a,
	0x66, 0x64, 0xb5, 0x2c, 0xa7, 0x7c, 0xe0, 0x94, 0x78, 0xfa, 0xf7, 0xde, 0xfc, 0xe6, 0xf5, 0x7b,
	0xbf, 0x7e, 0xdd, 0x2d, 0x58, 0xed, 0xf4, 0x06, 0x2e, 0xc5, 0x4e, 0xd5, 0x76, 0x08, 0x25, 0x08,
	0x88, 0x8d, 0x2d, 0xdb, 0xa4, 0x8e, 0xf9, 0xb2, 0xfc, 0x4e, 0x97, 0x90, 0x6e, 0x0f, 0xd7, 0xf8,
	0x48, 0x7b, 0x70, 0x5c, 0x7b, 0xe1, 0xe8, 0xb6, 0x8d, 0x1d, 0xd7, 0xc3, 0x96, 0xaf, 0x86, 0xc7,
	0xa9, 0xd9, 0xc7, 0x2e, 0xd5, 0xfb, 0xb6, 0x00, 0x5c, 0x11, 0x00, 0xdd, 0x36, 0x6b, 0xba, 0x65,
	0x11, 0xaa, 0x53, 0x93, 0x58, 0xbe, 0xf9, 0x07, 0xfc, 0x9f, 0xce, 0xcd, 0x2e, 0xb6, 0x6e, 0xba,
	0x2f, 0xf4, 0x6e, 0x17, 0x3b, 0x35, 0x62, 0x73, 0x44, 0x14, 0x5d, 0xf9, 0x63, 0x02, 0x0a, 0x07,
	0x0e, 0xd6, 0x29, 0x3e, 0xf0, 0x08, 0x37, 0xf1, 0xf3, 0x01, 0x76, 0x29, 0xba, 0x05, 0x8b, 0xba,
	0x6d, 0xb7, 0x4c, 0xa3, 0xa4, 0x6d, 0x69, 0xdb, 0x99, 0xdd, 0x2b, 0x55, 0xef, 0xad, 0x55, 0x9f,
	0x56, 0xf5, 0x90, 0x3a, 0xa6, 0xd5, 0xfd, 0x9e, 0xde, 0x1b, 0xe0, 0x66, 0x4a, 0xb7, 0xed, 0x86,
	0x81, 0xee, 0x00, 0x0c, 0xb1, 0xe3, 0x9a, 0xc4, 0x62, 0x86, 0x09, 0x05, 0xc3, 0xb4, 0xc0, 0x37,
	0x0c, 0xb4, 0x0f, 0x59, 0x67, 0x60, 0xb1, 0x8f, 0x6d, 0x61, 0x6b, 0xc8, 0x1c, 0x24, 0x15, 0x1c,
	0xac, 0x08, 0x9b, 0xfb, 0xd6, 0xb0, 0x61, 0xa0, 0x1d, 0x58, 0xe8, 0x10, 0xeb, 0xb8, 0xb4, 0xa0,
	0x60, 0xc9, 0x91, 0xe8, 0x3a, 0x64, 0x75, 0x63, 0xa8, 0x5b, 0x1d, 0x6c, 0xb4, 0x6c, 0xdd, 0xd1,
	0xfb, 0xa5, 0xd4, 0x56, 0x72, 0x3b, 0xdd, 0x5c, 0xf5, 0x9f, 0x3e, 0x66, 0x0f, 0x2b, 0xaf, 0x35,
	0x28, 0x86, 0xe2, 0xe4, 0xda, 0xc4, 0x72, 0x31, 0xfb, 0x66, 0x31, 0xd7, 0xaa, 0xc1, 0x4a, 0x0b,
	0x7c, 0xc3, 0x60, 0x51, 0x7e, 0x4a, 0xda, 0xaa, 0xc1, 0x4a, 0x3d, 0x25, 0xed, 0x86, 0x51, 0xf9,
	0xd9, 0x02, 0x14, 0x1e, 0x12, 0xc3, 0x3c, 0x3e, 0x09, 0xcd, 0xd9, 0x5c, 0x54, 0x76, 0x60, 0xc1,
	0xd2, 0xfb, 0x58, 0x89, 0x08, 0x47, 0xa2, 0x6f, 0x40, 0xc6, 0xc0, 0x6e, 0xc7, 0x31, 0x79, 0x76,
	0x29, 0xcd, 0x56, 0xd0, 0x00, 0xdd, 0x86, 0x45, 0x97, 0xea, 0x74, 0xe0, 0x2a, 0x4d, 0x97, 0xc0,
	0xa2, 0x06, 0xe4, 0xa9, 0xa3, 0x5b, 0xae, 0xc9, 0x7c, 0xb4, 0x84, 0x83, 0x94, 0x82, 0x83, 0xdc,
	0xd8, 0xec, 0xd0, 0x73, 0x75, 0x00, 0xd9, 0x81, 0xdd, 0x75, 0x74, 0x03, 0xfb, 0x7e, 0x16, 0x15,
	0xfc, 0xac, 0x0a, 0x1b, 0xe1, 0xe4, 0x2e, 0xac, 0xf8, 0x4e, 0x58, 0x1e, 0x96, 0x96, 0xb8, 0x8b,
	0x72, 0xc4, 0xc5, 0x67, 0x7e, 0x15, 0x37, 0x33, 0x02, 0xcf, 0x9e, 0xa0, 0x3b, 0x90, 0xf1, 0xde,
	0xed, 0x59, 0x2f, 0x4f, 0xb5, 0x06, 0x0f, 0xce, 0x1e, 0x54, 0x3e, 0x83, 0x62, 0x28, 0x11, 0x2e,
	0x20, 0x29, 0x2b, 0x7f, 0x4a, 0x41, 0x49, 0x72, 0xfb, 0x29, 0x31, 0xb0, 0x9f, 0x63, 0x1f, 0xc1,
	0x92, 0x45, 0x0c, 0xac, 0xea, 0x76, 0x91, 0x81, 0xcf, 0x95, 0x5d, 0x77, 0x21, 0x63, 0x5a, 0x2e,
	0x65, 0x35, 0xa8, 0xaa, 0x05, 0xe0, 0x1b, 0x34, 0x0c, 0xf4, 0x09, 0xa4, 0x87, 0xa4, 0x37, 0xe8,
	0x73, 0x63, 0x95, 0xfc, 0x5a, 0xf6, 0xe0, 0x0d, 0x03, 0x7d, 0x1d, 0x96, 0x87, 0x2f, 0x2d, 0x4c,
	0x99, 0xa5, 0x4a, 0x62, 0x2d, 0x71, 0xb4, 0x27, 0x7f, 0xb6, 0x63, 0x0e, 0x75, 0x8a, 0x5b, 0xa6,
	0xad, 0x94, 0x4b, 0x69, 0x81, 0x6f, 0xd8, 0x81, 0x6a, 0x58, 0x9a, 0xb7, 0x1a, 0x96, 0xcf, 0x55,
	0x0d, 0x75, 0x58, 0x7d, 0x82, 0xf5, 0x1e, 0x7d, 0xe2, 0xbb, 0x49, 0xab, 0xc8, 0xaf, 0x67, 0x22,
	0x5c, 0x7c, 0x04, 0x4b, 0xf6, 0xa0, 0xdd, 0x7a, 0x86, 0x4f, 0x4a, 0xa0, 0xf2, 0x11, 0xf6, 0xa0,
	0xfd, 0x5d, 0x7c, 0x12, 0xae, 0x81, 0xcc, 0x4c, 0x35, 0xd0, 0x84, 0xb7, 0x62, 0x92, 0x55, 0xd4,
	0xc1, 0xf9, 0xb2, 0xb5, 0xf2, 0x23, 0x28, 0xde, 0xc3, 0x3d, 0x7c, 0x2a, 0xf6, 0xae, 0x9f, 0xfd,
	0x6f, 0x87, 0xea, 0x8a, 0xad, 0x14, 0x01, 0x0d, 0x8d, 0x2e, 0x26, 0x89, 0xb8, 0xc5, 0xe4, 0x53,
	0xd8, 0x08, 0xbb, 0x17, 0x7c, 0xa7, 0xf8, 0x2f, 0x06, 0x96, 0x0b, 0x36, 0x24, 0x16, 0x84, 0xbf,
	0x69, 0x50, 0x3c, 0xf2, 0x34, 0xe5, 0x22, 0x57, 0x84, 0xb9, 0x56, 0xf3, 0x68, 0x28, 0x92, 0x71,
	0xa1, 0xf8, 0x85, 0x06, 0x1b, 0x61, 0xea, 0x97, 0xb6, 0xb0, 0x7e, 0x01, 0x1b, 0x4d, 0xd2, 0xeb,
	0xb5, 0xf5, 0xce, 0xb3, 0x8b, 0x8c, 0xa3, 0x62, 0x56, 0xfc, 0x52, 0x83, 0xcd, 0xc8, 0xeb, 0x2f,
	0x2d, 0x16, 0xa3, 0x04, 0x14, 0x9a, 0xd8, 0x35, 0x3f, 0xc7, 0x17, 0xdc, 0x64, 0x38, 0xa4, 0xa7,
	0xb8, 0x0c, 0x30, 0x24, 0xaa, 0x42, 0xb2, 0x63, 0x0f, 0x26, 0xca, 0xff, 0x51, 0xc3, 0xa2, 0xb7,
	0x76, 0x3d, 0x03, 0x06, 0x64, 0x32, 0xda, 0xc7, 0x7d, 0xe2, 0x9c, 0x4c, 0x14, 0xfd, 0xa0, 0x89,
	0xc0, 0xce, 0xd2, 0x05, 0x86, 0x82, 0x72, 0x69, 0x13, 0xf4, 0x5f, 0x0d, 0x36, 0xea, 0x86, 0x11,
	0x50, 0x3d, 0xf7, 0x92, 0xa6, 0xe8, 0x0e, 0x00, 0x17, 0xd9, 0x0e, 0x19, 0x58, 0x54, 0x69, 0xa6,
	0xd2, 0x0c, 0x7f, 0xc0, 0xe0, 0x31, 0x91, 0x5f, 0x98, 0x54, 0x1c, 0x91, 0xaf, 0xbd, 0xb4, 0xd8,
	0xff, 0x43, 0x83, 0xb7, 0x24, 0x05, 0xbf, 0xcc, 0xf0, 0x6f, 0x8e, 0xd7, 0x38, 0x4f, 0x62, 0xfd,
	0x9e, 0x4b, 0x31, 0xb4, 0xbf, 0xd1, 0xa0, 0x1c, 0xf7, 0x31, 0x97, 0x16, 0xdd, 0x3f, 0x6b, 0xb0,
	0x79, 0x64, 0x1b, 0xe3, 0xbd, 0xd6, 0x7d, 0x6b, 0x78, 0x21, 0xb1, 0xad, 0x42, 0x12, 0x5b, 0x43,
	0x25, 0x2a, 0x0c, 0xa8, 0xba, 0x86, 0xfd, 0x4a, 0x83, 0x52, 0x94, 0xef, 0xa5, 0x85, 0xef, 0x2f,
	0x19, 0xc8, 0x04, 0x66, 0x72, 0x3e, 0x06, 0x81, 0x06, 0x2a, 0x71, 0x8e, 0x76, 0x3f, 0x79, 0xde,
	0x76, 0x7f, 0x61, 0xc6, 0x76, 0xff, 0xff, 0xb4, 0x67, 0xff, 0x04, 0xd2, 0x2e, 0x76, 0x86, 0xde,
	0xd4, 0xa6, 0x15, 0x94, 0x77, 0xd9, 0x83, 0x37, 0x0c, 0xf4, 0x08, 0x8a, 0xa7, 0xa6, 0xad, 0x81,
	0x6d, 0x63, 0xa7, 0xd5, 0x26, 0x03, 0xcb, 0x98, 0xd8, 0xb9, 0x07, 0xdd, 0x20, 0xdf, 0xcd, 0x11,
	0x33, 0xdc, 0x67, 0x76, 0xe8, 0x5b, 0x90, 0xeb, 0xf6, 0x48, 0x5b, 0xef, 0xb5, 0xc6, 0x94, 0x32,
	0x67, 0xf8, 0xfa, 0xda, 0x6d, 0xcf, 0x57, 0xd6, 0xb3, 0x3a, 0xf4, 0x89, 0x45, 0xf6, 0x21, 0x2b,
	0x33, 0xef, 0x43, 0x7c, 0x11, 0x5d, 0x55, 0x16, 0xd1, 0x5d, 0x48, 0x91, 0x17, 0x16, 0x76, 0x4a,
	0x59, 0x95, 0x42, 0xe3, 0x50, 0xbf, 0x35, 0x59, 0x53, 0x6d, 0x4d, 0xaa, 0x90, 0xec, 0xda, 0x83,
	0x52, 0x4e, 0x05, 0xdf, 0x95, 0x5a, 0x99, 0xfc, 0x0c, 0xad, 0xcc, 0x37, 0x61, 0xc5, 0xa5, 0xc4,
	0xd1, 0xbb, 0xb8, 0xc5, 0x1a, 0x95, 0x12, 0x52, 0xb0, 0xcd, 0x08, 0x8b, 0x43, 0xf3, 0x73, 0xec,
	0xab, 0xe4, 0xba, 0xaa, 0x4a, 0xde, 0x83, 0xac, 0xad, 0xbb, 0xae, 0xfd, 0xc4, 0xd1, 0x5d, 0xdc,
	0xc3, 0xae, 0x5b, 0x2a, 0x28, 0x98, 0x86, 0x6c, 0xd0, 0xb7, 0x21, 0x77, 0xaa, 0xb5, 0x7a, 0x87,
	0x1f, 0x51, 0x96, 0x8a, 0x0a, 0x7e, 0xd6, 0x7c, 0xab, 0xba, 0x67, 0xc4, 0x94, 0xc0, 0xec, 0xb3,
	0xaf, 0x37, 0x8d, 0xd2, 0x86, 0x8a, 0x12, 0x70, 0x34, 0x57, 0x82, 0x4c, 0x87, 0x9f, 0xf0, 0x79,
	0xbb, 0xd0, 0xcd, 0xe9, 0xbb, 0x50, 0x0f, 0x1e, 0x77, 0x8c, 0x53, 0x9a, 0x69, 0x0b, 0xfb, 0x9f,
	0x0c, 0x2c, 0x09, 0xc5, 0x9e, 0x4f, 0xad, 0xef, 0x42, 0x46, 0x94, 0xe0, 0x60, 0xa0, 0xa8, 0xd8,
	0xe0, 0x19, 0x1c, 0x0d, 0x4c, 0x83, 0xa5, 0xce, 0xb1, 0x43, 0x2c, 0xda, 0xe5, 0x6a, 0xa8, 0x76,
	0xe6, 0x92, 0x39, 0xb5, 0xf0, 0xd6, 0x2b, 0x71, 0x68, 0xbc, 0x70, 0xde, 0x43, 0xe3, 0xd4, 0x6c,
	0xdb, 0xcc, 0xb1, 0x02, 0x2f, 0xce, 0xab, 0xc0, 0x4b, 0xe7, 0x52, 0xe0, 0xe8, 0xa9, 0xf5, 0xf2,
	0xcc, 0xa7, 0xd6, 0xa7, 0xe2, 0x93, 0x56, 0x17, 0x1f, 0x7f, 0x85, 0x85, 0xf3, 0x1e, 0xd7, 0x66,
	0x66, 0x3d, 0xae, 0x95, 0xdb, 0xfc, 0x95, 0xd9, 0xda, 0xfc, 0x3d, 0x48, 0x63, 0xcb, 0xb0, 0x89,
	0x69, 0x51, 0x57, 0x49, 0x96, 0xc7, 0x70, 0xf4, 0x00, 0x0a, 0x7d, 0x4c, 0x75, 0x43, 0xa7, 0x7a,
	0xcb, 0x21, 0x84, 0xb6, 0xf4, 0x4e, 0x87, 0xc9, 0x4c, 0x76, 0x42, 0x91, 0xed, 0x13, 0xd2, 0x13,
	0xcb, 0x94, 0x6f, 0xd7, 0x24, 0x84, 0xd6, 0xb9, 0x15, 0xba, 0x0d, 0xa9, 0x9e, 0x69, 0x3d, 0x73,
	0x4b, 0x6b, 0x5b, 0xc9, 0xed, 0xcc, 0xee, 0x3b, 0xd5, 0xf1, 0xd5, 0x4c, 0x55, 0x14, 0x61, 0xf5,
	0x01, 0x03, 0xdc, 0xb7, 0xa8, 0x73, 0xd2, 0xf4, 0xc0, 0xcc, 0x8a, 0xad, 0x13, 0x6e, 0x29, 0x37,
	0xd9, 0xaa, 0xc9, 0x00, 0xc2, 0x8a, 0x83, 0xd1, 0x61, 0x8c, 0xa8, 0xe5, 0xb9, 0x83, 0xed, 0x38,
	0x07, 0x75, 0x59, 0xca, 0x3c, 0x57, 0x11, 0x81, 0x8b, 0x9e, 0x5a, 0xa3, 0xd9, 0x4f, 0xad, 0x43,
	0x62, 0xb7, 0x3e, 0x8f, 0xd8, 0x15, 0x66, 0x11, 0x3b, 0x54, 0x87, 0x9c, 0x2f, 0x70, 0x3c, 0x9d,
	0x5c, 0x4c, 0x4b, 0x45, 0x1e, 0x93, 0xcd, 0x98, 0x98, 0xf0, 0xd3, 0xbc, 0x6c, 0x67, 0xfc, 0xc7,
	0x21, 0xa6, 0xe5, 0x8f, 0x01, 0xc6, 0x33, 0x84, 0x72, 0x90, 0x7c, 0x86, 0x4f, 0xb8, 0x54, 0xa6,
	0x9b, 0xec, 0xbf, 0xa8, 0x00, 0xa9, 0x21, 0xfb, 0x68, 0x2e, 0x80, 0xe9, 0xa6, 0xf7, 0xc7, 0x5e,
	0xe2, 0x63, 0x8d, 0x59, 0x8e, 0x67, 0x69, 0x26, 0xcb, 0x7d, 0x28, 0xc4, 0x4d, 0xcf, 0x2c, 0x3e,
	0x2a, 0xff, 0x4c, 0xc0, 0xe6, 0x3d, 0x5e, 0x51, 0xed, 0x59, 0x4f, 0x16, 0x8b, 0xa7, 0xca, 0x2a,
	0x4e, 0xfe, 0x3c, 0xed, 0x7c, 0x5b, 0xd2, 0x4e, 0x6f, 0x77, 0x12, 0x50, 0xc7, 0x8d, 0xc0, 0x0d,
	0x0b, 0xdf, 0x19, 0x0a, 0xfd, 0xbb, 0x16, 0x11, 0x2d, 0xef, 0xb8, 0x43, 0x96, 0xa5, 0x77, 0x43,
	0xcb, 0xc1, 0x22, 0xc7, 0x48, 0x82, 0xff, 0x00, 0xd6, 0xf1, 0x4b, 0x8a, 0x1d, 0x4b, 0xef, 0xb5,
	0x02, 0xf4, 0x55, 0xa4, 0x34, 0xef, 0x1b, 0x1e, 0x9c, 0x7e, 0x64, 0x81, 0x95, 0x66, 0xdf, 0xa4,
	0x5c, 0x42, 0x57, 0x9b, 0xde, 0x1f, 0xec, 0x23, 0xc8, 0xf1, 0x31, 0x4b, 0x93, 0x34, 0x7f, 0x2c,
	0xfe, 0xaa, 0x3c, 0x87, 0x52, 0x34, 0x98, 0x62, 0xd7, 0x75, 0x15, 0x32, 0x94, 0x50, 0x46, 0x8a,
	0x8b, 0x95, 0xc6, 0x0d, 0x81, 0x3f, 0xf2, 0xf4, 0xe8, 0x36, 0x64, 0x7c, 0xbe, 0xcc, 0x73, 0x82,
	0x27, 0xe0, 0x7a, 0x4c, 0x02, 0x36, 0xfd, 0x69, 0x39, 0xc4, 0xb4, 0xf2, 0x77, 0x0d, 0xbe, 0x14,
	0x7a, 0xe7, 0xc5, 0xed, 0xfc, 0x37, 0x83, 0x5b, 0xad, 0xe0, 0x3e, 0x7e, 0x3c, 0x8b, 0x49, 0x69,
	0x16, 0x4f, 0xc3, 0xb5, 0x10, 0x1f, 0xae, 0x94, 0x14, 0xae, 0x57, 0x1a, 0x5c, 0x89, 0xe7, 0xae,
	0x1a, 0xb3, 0xb8, 0xca, 0x4d, 0xcc, 0x54, 0xb9, 0x95, 0x1f, 0xc0, 0xfa, 0x21, 0x25, 0xf6, 0x9b,
	0x39, 0x56, 0x7f, 0x00, 0x05, 0xd9, 0xf9, 0x5c, 0x87, 0xea, 0x3f, 0x64, 0xde, 0x74, 0x87, 0xbe,
	0x19, 0xae, 0x0f, 0xa1, 0x18, 0xf2, 0x3e, 0x17, 0xd9, 0x1f, 0xc3, 0x46, 0x13, 0x77, 0xc8, 0x10,
	0x3b, 0x6f, 0x86, 0xee, 0x23, 0xd8, 0x8c, 0xf8, 0x9f, 0x37, 0xba, 0x07, 0x58, 0x77, 0xf1, 0x1b,
	0x8b, 0x6e, 0xc8, 0xfb, 0x3c, 0x64, 0x77, 0xff, 0x9a, 0x87, 0xac, 0x70, 0xf5, 0x50, 0xb7, 0xf4,
	0x2e, 0x76, 0xd0, 0x4f, 0x34, 0x58, 0x95, 0x7e, 0x0f, 0x80, 0xb6, 0xa4, 0x1a, 0x88, 0xf9, 0x49,
	0x45, 0xf9, 0xdd, 0x33, 0x10, 0x1e, 0xbf, 0xca, 0x8d, 0x51, 0x3d, 0x87, 0xb2, 0xde, 0x52, 0xbb,
	0x25, 0x78, 0xbd, 0xfa, 0xd7, 0xbf, 0x7f, 0x97, 0xc8, 0x57, 0x56, 0x6a, 0xc3, 0x0f, 0x6b, 0xe2,
	0x91, 0xbb, 0xa7, 0xdd, 0xe0, 0x14, 0xa4, 0x9b, 0x2f, 0x99, 0x42, 0xdc, 0x2f, 0x04, 0x64, 0x0a,
	0xb1, 0x57, 0xc7, 0x82, 0x42, 0x9f, 0x8f, 0xc9, 0x14, 0x76, 0x23, 0x14, 0x7e, 0xab, 0x41, 0x3e,
	0x72, 0xf9, 0x86, 0xae, 0x4d, 0x7c, 0x49, 0xe0, 0x22, 0xb9, 0x7c, 0x7d, 0x0a, 0x4a, 0xd0, 0xa9,
	0x8d, 0xea, 0x45, 0xb4, 0x2e, 0xd3, 0xd9, 0x62, 0xf2, 0x33, 0x89, 0xd3, 0x4f, 0x35, 0xc8, 0xca,
	0xb7, 0x6b, 0x48, 0xfa, 0xea, 0xd8, 0x8b, 0xbd, 0x72, 0xe5, 0x2c, 0x88, 0xa0, 0xf2, 0xfe, 0xa8,
	0x9e, 0x47, 0x6b, 0x06, 0x1f, 0xf4, 0xa9, 0xb8, 0x1e, 0x8d, 0x1b, 0xb1, 0x34, 0xe4, 0x8b, 0x2d,
	0x99, 0x46, 0xec, 0x7d, 0x9d, 0x4c, 0x23, 0xfe, 0x5e, 0x4c, 0xd0, 0x10, 0xed, 0xdc, 0xb4, 0x24,
	0xf9, 0xb9, 0x06, 0x6b, 0xa1, 0x4b, 0x25, 0x24, 0xbd, 0x24, 0xfe, 0xc2, 0xab, 0xfc, 0xde, 0x99,
	0x18, 0xc1, 0xe4, 0x83, 0x51, 0x1d, 0xa1, 0x9c, 0x23, 0x46, 0x55, 0xf2, 0x55, 0xba, 0x3c, 0x91,
	0xf3, 0x35, 0xee, 0xb2, 0x49, 0xce, 0xd7, 0xd8, 0x9b, 0x17, 0x91, 0xaf, 0x0e, 0x1f, 0x9b, 0x46,
	0xe1, 0xb5, 0x06, 0x6b, 0xa1, 0x5b, 0x04, 0x39, 0x1a, 0xf1, 0x17, 0x2a, 0x72, 0x34, 0x26, 0x5c,
	0x43, 0x54, 0x6e, 0x8e, 0xea, 0xeb, 0x28, 0xaf, 0x1b, 0x86, 0x94, 0xa6, 0xee, 0x24, 0x2e, 0xbf,
	0xd7, 0x00, 0x45, 0x8f, 0xdd, 0xd1, 0xf5, 0x89, 0x89, 0x28, 0x31, 0xfa, 0xf2, 0x34, 0x98, 0x20,
	0xb5, 0x33, 0xaa, 0x6f, 0xa0, 0x82, 0x9c, 0xb3, 0x41, 0x5e, 0xd1, 0xc4, 0xfd, 0xb5, 0x06, 0xb9,
	0xf0, 0x69, 0x36, 0x7a, 0x4f, 0xce, 0xcb, 0xd8, 0xb3, 0xf9, 0xf2, 0xb5, 0xb3, 0x41, 0x82, 0x51,
	0x75, 0x54, 0x2f, 0x20, 0x34, 0xe0, 0xc3, 0xa7, 0x8c, 0xb0, 0x35, 0x9c, 0x54, 0xcf, 0xaf, 0x35,
	0xc8, 0x85, 0xfb, 0x3c, 0x99, 0xcf, 0x84, 0x96, 0x5a, 0xe6, 0x33, 0xa9, 0x55, 0x64, 0xf9, 0xb3,
	0x8e, 0xf2, 0x86, 0x18, 0x96, 0xeb, 0x3a, 0x8b, 0x24, 0x3a, 0xe8, 0x0f, 0x1a, 0x14, 0xe2, 0x7a,
	0x28, 0xf4, 0x95, 0x33, 0x5e, 0x25, 0xcd, 0xdb, 0xf6, 0x74, 0xe0, 0x58, 0xf8, 0x4a, 0x68, 0x23,
	0xcc, 0x2b, 0x30, 0x77, 0x61, 0x72, 0x5f, 0xc0, 0x4a, 0xb0, 0xfd, 0x41, 0x57, 0x83, 0xaf, 0x8a,
	0xe9, 0xba, 0xca, 0x5b, 0x93, 0x01, 0x82, 0xc3, 0x57, 0x47, 0xf5, 0x35, 0xb4, 0xea, 0x52, 0x62,
	0x87, 0xf4, 0x2e, 0xbe, 0xba, 0xa5, 0x8e, 0x06, 0x85, 0xdc, 0x47, 0x5b, 0x29, 0xb9, 0xba, 0x63,
	0xdb, 0x21, 0x51, 0xdd, 0x2e, 0x1b, 0x9b, 0x4a, 0x81, 0x6b, 0x9d, 0xdc, 0xa5, 0x84, 0xb4, 0x2e,
	0xb6, 0x45, 0x0a, 0x69, 0x5d, 0x7c, 0x9b, 0xe3, 0x6b, 0x9d, 0x37, 0xaa, 0x14, 0x0d, 0xa9, 0x03,
	0x09, 0xb5, 0x07, 0x31, 0xad, 0x4f, 0xa8, 0x3d, 0x88, 0x6b, 0x5f, 0xfc, 0xf6, 0x80, 0x8d, 0x4d,
	0x5b, 0x80, 0xf6, 0x5f, 0x8e, 0xea, 0xcf, 0xd1, 0x77, 0x00, 0x3d, 0xb2, 0xb1, 0xf5, 0x98, 0x3b,
	0xdd, 0x7a, 0xec, 0x90, 0xa7, 0xb8, 0x43, 0x2b, 0xef, 0xc7, 0x3d, 0x45, 0xc5, 0x27, 0x94, 0xda,
	0xee, 0x5e, 0xad, 0x16, 0xa0, 0x61, 0x92, 0xdd, 0xd4, 0x4e, 0x75, 0xa7, 0xfa, 0xe1, 0x0d, 0x4d,
	0xdb, 0xcd, 0xe9, 0xb6, 0xdd, 0x33, 0x3b, 0xfc, 0xf7, 0xa3, 0xb5, 0xa7, 0x2e, 0xb1, 0xf6, 0x22,
	0x4f, 0xbe, 0x9f, 0xb0, 0xdb, 0xed, 0x45, 0xbe, 0xd3, 0xb9, 0xf5, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xea, 0xe6, 0xed, 0xdc, 0x04, 0x2b, 0x00, 0x00,
}
