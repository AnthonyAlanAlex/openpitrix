// Code generated by protoc-gen-go. DO NOT EDIT.
// source: openpitrix/types/confd.proto

/*
Package pbtypes is a generated protocol buffer package.

It is generated from these files:
	openpitrix/types/confd.proto
	openpitrix/types/drone.proto
	openpitrix/types/etcd.proto
	openpitrix/types/frontgate.proto
	openpitrix/types/metadata.proto
	openpitrix/types/pilot.proto
	openpitrix/types/task.proto
	openpitrix/types/types.proto

It has these top-level messages:
	ConfdConfig
	ConfdEndpoint
	ConfdProcessorConfig
	ConfdBackendConfig
	ConfdStatus
	DroneId
	DroneIdList
	DroneConfig
	DroneEndpoint
	EtcdConfig
	EtcdEndpoint
	FrontgateId
	FrontgateIdList
	FrontgateConfig
	FrontgateEndpoint
	Metadata
	Cluster
	Instance
	CommandInfo
	Endpoint
	IPAddress
	PilotConfig
	PilotEndpoint
	SubTaskId
	SubTaskMessage
	SubTaskStatus
	SubTask_StartConfd
	SubTask_RegisterMetadata
	SubTask_DeregisterMetadata
	SubTask_RegisterCmd
	SubTask_DeregisterCmd
	SubTask_GetTaskStatus
	Empty
	Bool
	BoolList
	Int32
	Int32List
	UInt32
	UInt32List
	Int64
	Int64List
	UInt64
	UInt64List
	Float32
	Float32List
	Float64
	Float64List
	String
	StringList
	StringMap
	StringListMap
	Bytes
	BytesList
	BytesMap
	BytesListMap
*/
package pbtypes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConfdConfig struct {
	ProcessorConfig *ConfdProcessorConfig `protobuf:"bytes,2,opt,name=processor_config,json=processorConfig" json:"processor_config"`
	BackendConfig   *ConfdBackendConfig   `protobuf:"bytes,3,opt,name=backend_config,json=backendConfig" json:"backend_config"`
}

func (m *ConfdConfig) Reset()                    { *m = ConfdConfig{} }
func (m *ConfdConfig) String() string            { return proto.CompactTextString(m) }
func (*ConfdConfig) ProtoMessage()               {}
func (*ConfdConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ConfdConfig) GetProcessorConfig() *ConfdProcessorConfig {
	if m != nil {
		return m.ProcessorConfig
	}
	return nil
}

func (m *ConfdConfig) GetBackendConfig() *ConfdBackendConfig {
	if m != nil {
		return m.BackendConfig
	}
	return nil
}

type ConfdEndpoint struct {
	DroneIp   string `protobuf:"bytes,1,opt,name=drone_ip,json=droneIp" json:"drone_ip"`
	DronePort int32  `protobuf:"varint,2,opt,name=drone_port,json=dronePort" json:"drone_port"`
}

func (m *ConfdEndpoint) Reset()                    { *m = ConfdEndpoint{} }
func (m *ConfdEndpoint) String() string            { return proto.CompactTextString(m) }
func (*ConfdEndpoint) ProtoMessage()               {}
func (*ConfdEndpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ConfdEndpoint) GetDroneIp() string {
	if m != nil {
		return m.DroneIp
	}
	return ""
}

func (m *ConfdEndpoint) GetDronePort() int32 {
	if m != nil {
		return m.DronePort
	}
	return 0
}

// Keep same as libconfd.Config
// See https://godoc.org/openpitrix.io/libconfd#Config
type ConfdProcessorConfig struct {
	Confdir       string `protobuf:"bytes,1,opt,name=confdir" json:"confdir"`
	Interval      int32  `protobuf:"varint,2,opt,name=interval" json:"interval"`
	Noop          bool   `protobuf:"varint,3,opt,name=noop" json:"noop"`
	Prefix        string `protobuf:"bytes,4,opt,name=prefix" json:"prefix"`
	SyncOnly      bool   `protobuf:"varint,5,opt,name=sync_only,json=syncOnly" json:"sync_only"`
	LogLevel      string `protobuf:"bytes,6,opt,name=log_level,json=logLevel" json:"log_level"`
	Onetime       bool   `protobuf:"varint,7,opt,name=onetime" json:"onetime"`
	Watch         bool   `protobuf:"varint,8,opt,name=watch" json:"watch"`
	KeepStageFile bool   `protobuf:"varint,9,opt,name=keep_stage_file,json=keepStageFile" json:"keep_stage_file"`
}

func (m *ConfdProcessorConfig) Reset()                    { *m = ConfdProcessorConfig{} }
func (m *ConfdProcessorConfig) String() string            { return proto.CompactTextString(m) }
func (*ConfdProcessorConfig) ProtoMessage()               {}
func (*ConfdProcessorConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ConfdProcessorConfig) GetConfdir() string {
	if m != nil {
		return m.Confdir
	}
	return ""
}

func (m *ConfdProcessorConfig) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *ConfdProcessorConfig) GetNoop() bool {
	if m != nil {
		return m.Noop
	}
	return false
}

func (m *ConfdProcessorConfig) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *ConfdProcessorConfig) GetSyncOnly() bool {
	if m != nil {
		return m.SyncOnly
	}
	return false
}

func (m *ConfdProcessorConfig) GetLogLevel() string {
	if m != nil {
		return m.LogLevel
	}
	return ""
}

func (m *ConfdProcessorConfig) GetOnetime() bool {
	if m != nil {
		return m.Onetime
	}
	return false
}

func (m *ConfdProcessorConfig) GetWatch() bool {
	if m != nil {
		return m.Watch
	}
	return false
}

func (m *ConfdProcessorConfig) GetKeepStageFile() bool {
	if m != nil {
		return m.KeepStageFile
	}
	return false
}

// Keep same as libconfd.BackendConfig
// See https://godoc.org/openpitrix.io/libconfd#BackendConfig
type ConfdBackendConfig struct {
	Type         string   `protobuf:"bytes,1,opt,name=type" json:"type"`
	Host         []string `protobuf:"bytes,2,rep,name=host" json:"host"`
	User         string   `protobuf:"bytes,3,opt,name=user" json:"user"`
	Password     string   `protobuf:"bytes,4,opt,name=password" json:"password"`
	ClientCaKeys string   `protobuf:"bytes,5,opt,name=client_ca_keys,json=clientCaKeys" json:"client_ca_keys"`
	ClientCert   string   `protobuf:"bytes,6,opt,name=client_cert,json=clientCert" json:"client_cert"`
	ClientKey    string   `protobuf:"bytes,7,opt,name=client_key,json=clientKey" json:"client_key"`
}

func (m *ConfdBackendConfig) Reset()                    { *m = ConfdBackendConfig{} }
func (m *ConfdBackendConfig) String() string            { return proto.CompactTextString(m) }
func (*ConfdBackendConfig) ProtoMessage()               {}
func (*ConfdBackendConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ConfdBackendConfig) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ConfdBackendConfig) GetHost() []string {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *ConfdBackendConfig) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ConfdBackendConfig) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ConfdBackendConfig) GetClientCaKeys() string {
	if m != nil {
		return m.ClientCaKeys
	}
	return ""
}

func (m *ConfdBackendConfig) GetClientCert() string {
	if m != nil {
		return m.ClientCert
	}
	return ""
}

func (m *ConfdBackendConfig) GetClientKey() string {
	if m != nil {
		return m.ClientKey
	}
	return ""
}

type ConfdStatus struct {
	ProcessId int32                      `protobuf:"varint,1,opt,name=process_id,json=processId" json:"process_id"`
	UpTime    *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=up_time,json=upTime" json:"up_time"`
	Status    string                     `protobuf:"bytes,3,opt,name=status" json:"status"`
}

func (m *ConfdStatus) Reset()                    { *m = ConfdStatus{} }
func (m *ConfdStatus) String() string            { return proto.CompactTextString(m) }
func (*ConfdStatus) ProtoMessage()               {}
func (*ConfdStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ConfdStatus) GetProcessId() int32 {
	if m != nil {
		return m.ProcessId
	}
	return 0
}

func (m *ConfdStatus) GetUpTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpTime
	}
	return nil
}

func (m *ConfdStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*ConfdConfig)(nil), "openpitrix.types.ConfdConfig")
	proto.RegisterType((*ConfdEndpoint)(nil), "openpitrix.types.ConfdEndpoint")
	proto.RegisterType((*ConfdProcessorConfig)(nil), "openpitrix.types.ConfdProcessorConfig")
	proto.RegisterType((*ConfdBackendConfig)(nil), "openpitrix.types.ConfdBackendConfig")
	proto.RegisterType((*ConfdStatus)(nil), "openpitrix.types.ConfdStatus")
}

func init() { proto.RegisterFile("openpitrix/types/confd.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xcb, 0x6e, 0xdb, 0x30,
	0x10, 0x84, 0x93, 0xd8, 0x96, 0xe8, 0x3a, 0x09, 0x88, 0xa0, 0x50, 0xdd, 0x16, 0x09, 0x8c, 0x20,
	0xc8, 0xa5, 0x12, 0xd0, 0x1c, 0x7b, 0x4b, 0xd0, 0x02, 0x86, 0x0b, 0x34, 0x55, 0x7a, 0xea, 0x45,
	0xd0, 0x63, 0xad, 0x10, 0x56, 0x48, 0x82, 0xa4, 0x93, 0xe8, 0x17, 0xfa, 0x2f, 0xfd, 0x99, 0x7e,
	0x51, 0xb1, 0x2b, 0x2a, 0x75, 0x5f, 0x17, 0x9b, 0x33, 0xbb, 0x3b, 0xf6, 0x0c, 0xb9, 0xec, 0x95,
	0xd2, 0x20, 0xb5, 0x70, 0x46, 0x3c, 0x26, 0xae, 0xd5, 0x60, 0x93, 0x52, 0xc9, 0x55, 0x15, 0x6b,
	0xa3, 0x9c, 0xe2, 0x87, 0xbf, 0xaa, 0x31, 0x55, 0x67, 0xc7, 0xb5, 0x52, 0x75, 0x03, 0x09, 0xd5,
	0x8b, 0xcd, 0x2a, 0x71, 0xe2, 0x0e, 0xac, 0xcb, 0xef, 0x74, 0x37, 0x32, 0xff, 0x3e, 0x60, 0x93,
	0x2b, 0x94, 0xc0, 0x0f, 0x51, 0xf3, 0xcf, 0xec, 0x50, 0x1b, 0x55, 0x82, 0xb5, 0xca, 0x64, 0x25,
	0x71, 0xd1, 0xce, 0xc9, 0xe0, 0x7c, 0xf2, 0xf6, 0x2c, 0xfe, 0x53, 0x3d, 0xa6, 0xc1, 0xeb, 0xbe,
	0xbd, 0x53, 0x48, 0x0f, 0xf4, 0xef, 0x04, 0x5f, 0xb2, 0xfd, 0x22, 0x2f, 0xd7, 0x20, 0xab, 0x5e,
	0x70, 0x97, 0x04, 0x4f, 0xff, 0x23, 0x78, 0xd9, 0x35, 0x7b, 0xb9, 0x69, 0xb1, 0x0d, 0xe7, 0x0b,
	0x36, 0xa5, 0xa6, 0xf7, 0xb2, 0xd2, 0x4a, 0x48, 0xc7, 0x5f, 0xb0, 0xa0, 0x32, 0x4a, 0x42, 0x26,
	0x74, 0x34, 0x38, 0x19, 0x9c, 0x87, 0xe9, 0x98, 0xf0, 0x42, 0xf3, 0xd7, 0x8c, 0x75, 0x25, 0xad,
	0x8c, 0x23, 0x17, 0xc3, 0x34, 0x24, 0xe6, 0x5a, 0x19, 0x37, 0xff, 0xb6, 0xc3, 0x8e, 0xfe, 0xe5,
	0x80, 0x47, 0x6c, 0x4c, 0xa9, 0x0a, 0xd3, 0x2b, 0x7a, 0xc8, 0x67, 0x2c, 0x10, 0xd2, 0x81, 0xb9,
	0xcf, 0x1b, 0xaf, 0xf7, 0x84, 0x39, 0x67, 0x7b, 0x52, 0x29, 0x4d, 0xe6, 0x82, 0x94, 0xce, 0xfc,
	0x39, 0x1b, 0x69, 0x03, 0x2b, 0xf1, 0x18, 0xed, 0x91, 0x90, 0x47, 0xfc, 0x25, 0x0b, 0x6d, 0x2b,
	0xcb, 0x4c, 0xc9, 0xa6, 0x8d, 0x86, 0x34, 0x10, 0x20, 0xf1, 0x49, 0x36, 0x2d, 0x16, 0x1b, 0x55,
	0x67, 0x0d, 0xdc, 0x43, 0x13, 0x8d, 0x68, 0x2e, 0x68, 0x54, 0xfd, 0x11, 0x31, 0xfe, 0x37, 0x25,
	0x01, 0x6f, 0x31, 0x1a, 0xd3, 0x5c, 0x0f, 0xf9, 0x11, 0x1b, 0x3e, 0xe4, 0xae, 0xbc, 0x8d, 0x02,
	0xe2, 0x3b, 0xc0, 0xcf, 0xd8, 0xc1, 0x1a, 0x40, 0x67, 0xd6, 0xe5, 0x35, 0x64, 0x2b, 0xd1, 0x40,
	0x14, 0x52, 0x7d, 0x8a, 0xf4, 0x0d, 0xb2, 0x1f, 0x44, 0x03, 0xf3, 0x1f, 0x03, 0xc6, 0xff, 0x4e,
	0x1f, 0x4d, 0xe1, 0xcd, 0xf8, 0x1c, 0xe8, 0x8c, 0xdc, 0xad, 0xb2, 0x18, 0xe8, 0x2e, 0x72, 0x78,
	0x46, 0x6e, 0x63, 0xc1, 0x90, 0xf9, 0x30, 0xa5, 0x33, 0x86, 0xa5, 0x73, 0x6b, 0x1f, 0x94, 0xa9,
	0xbc, 0xfd, 0x27, 0xcc, 0x4f, 0xd9, 0x7e, 0xd9, 0x08, 0x90, 0x2e, 0x2b, 0xf3, 0x6c, 0x0d, 0xad,
	0xa5, 0x14, 0xc2, 0xf4, 0x59, 0xc7, 0x5e, 0xe5, 0x4b, 0x68, 0x2d, 0x3f, 0x66, 0x93, 0xbe, 0x0b,
	0x8c, 0xf3, 0x59, 0x30, 0xdf, 0x02, 0xc6, 0xe1, 0x0d, 0xfb, 0x86, 0x35, 0xb4, 0x14, 0x48, 0x98,
	0x86, 0x1d, 0xb3, 0x84, 0x76, 0xde, 0xfa, 0xb7, 0x7d, 0xe3, 0x72, 0xb7, 0xb1, 0xd8, 0xed, 0xdf,
	0x66, 0x26, 0x2a, 0xb2, 0x34, 0x4c, 0x43, 0xcf, 0x2c, 0x2a, 0x7e, 0xc1, 0xc6, 0x1b, 0x9d, 0x51,
	0xb4, 0xdd, 0x8b, 0x9f, 0xc5, 0xdd, 0xf6, 0xc4, 0xfd, 0xf6, 0xc4, 0x5f, 0xfa, 0xed, 0x49, 0x47,
	0x1b, 0x8d, 0x00, 0x6f, 0xd8, 0x92, 0xba, 0xb7, 0xee, 0xd1, 0x65, 0xf2, 0xf5, 0xcd, 0xd6, 0xeb,
	0x16, 0x2a, 0xd9, 0x5a, 0x5c, 0xbd, 0xae, 0x13, 0x5d, 0x74, 0xfb, 0xfb, 0x4e, 0x17, 0xf4, 0x5d,
	0x8c, 0xe8, 0x47, 0x2e, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0xdc, 0xec, 0x2d, 0xac, 0xe2, 0x03,
	0x00, 0x00,
}
