// Code generated by protoc-gen-go. DO NOT EDIT.
// source: openpitrix/types/frontgate.proto

package pbtypes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FrontgateId struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id"`
}

func (m *FrontgateId) Reset()                    { *m = FrontgateId{} }
func (m *FrontgateId) String() string            { return proto.CompactTextString(m) }
func (*FrontgateId) ProtoMessage()               {}
func (*FrontgateId) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *FrontgateId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type FrontgateIdList struct {
	IdList []string `protobuf:"bytes,1,rep,name=id_list,json=idList" json:"id_list"`
}

func (m *FrontgateIdList) Reset()                    { *m = FrontgateIdList{} }
func (m *FrontgateIdList) String() string            { return proto.CompactTextString(m) }
func (*FrontgateIdList) ProtoMessage()               {}
func (*FrontgateIdList) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *FrontgateIdList) GetIdList() []string {
	if m != nil {
		return m.IdList
	}
	return nil
}

type FrontgateConfig struct {
	Id          string               `protobuf:"bytes,1,opt,name=id" json:"id"`
	NodeId      string               `protobuf:"bytes,2,opt,name=node_id,json=nodeId" json:"node_id"`
	Host        string               `protobuf:"bytes,3,opt,name=host" json:"host"`
	ListenPort  int32                `protobuf:"varint,4,opt,name=listen_port,json=listenPort" json:"listen_port"`
	PilotHost   string               `protobuf:"bytes,5,opt,name=pilot_host,json=pilotHost" json:"pilot_host"`
	PilotPort   int32                `protobuf:"varint,6,opt,name=pilot_port,json=pilotPort" json:"pilot_port"`
	NodeList    []*FrontgateEndpoint `protobuf:"bytes,7,rep,name=node_list,json=nodeList" json:"node_list"`
	EtcdConfig  *EtcdConfig          `protobuf:"bytes,8,opt,name=etcd_config,json=etcdConfig" json:"etcd_config"`
	ConfdConfig *ConfdConfig         `protobuf:"bytes,9,opt,name=confd_config,json=confdConfig" json:"confd_config"`
	LogLevel    string               `protobuf:"bytes,10,opt,name=log_level,json=logLevel" json:"log_level"`
}

func (m *FrontgateConfig) Reset()                    { *m = FrontgateConfig{} }
func (m *FrontgateConfig) String() string            { return proto.CompactTextString(m) }
func (*FrontgateConfig) ProtoMessage()               {}
func (*FrontgateConfig) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *FrontgateConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FrontgateConfig) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *FrontgateConfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *FrontgateConfig) GetListenPort() int32 {
	if m != nil {
		return m.ListenPort
	}
	return 0
}

func (m *FrontgateConfig) GetPilotHost() string {
	if m != nil {
		return m.PilotHost
	}
	return ""
}

func (m *FrontgateConfig) GetPilotPort() int32 {
	if m != nil {
		return m.PilotPort
	}
	return 0
}

func (m *FrontgateConfig) GetNodeList() []*FrontgateEndpoint {
	if m != nil {
		return m.NodeList
	}
	return nil
}

func (m *FrontgateConfig) GetEtcdConfig() *EtcdConfig {
	if m != nil {
		return m.EtcdConfig
	}
	return nil
}

func (m *FrontgateConfig) GetConfdConfig() *ConfdConfig {
	if m != nil {
		return m.ConfdConfig
	}
	return nil
}

func (m *FrontgateConfig) GetLogLevel() string {
	if m != nil {
		return m.LogLevel
	}
	return ""
}

type FrontgateEndpoint struct {
	FrontgateId   string `protobuf:"bytes,1,opt,name=frontgate_id,json=frontgateId" json:"frontgate_id"`
	FrontgateIp   string `protobuf:"bytes,2,opt,name=frontgate_ip,json=frontgateIp" json:"frontgate_ip"`
	FrontgatePort int32  `protobuf:"varint,3,opt,name=frontgate_port,json=frontgatePort" json:"frontgate_port"`
}

func (m *FrontgateEndpoint) Reset()                    { *m = FrontgateEndpoint{} }
func (m *FrontgateEndpoint) String() string            { return proto.CompactTextString(m) }
func (*FrontgateEndpoint) ProtoMessage()               {}
func (*FrontgateEndpoint) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *FrontgateEndpoint) GetFrontgateId() string {
	if m != nil {
		return m.FrontgateId
	}
	return ""
}

func (m *FrontgateEndpoint) GetFrontgateIp() string {
	if m != nil {
		return m.FrontgateIp
	}
	return ""
}

func (m *FrontgateEndpoint) GetFrontgatePort() int32 {
	if m != nil {
		return m.FrontgatePort
	}
	return 0
}

func init() {
	proto.RegisterType((*FrontgateId)(nil), "openpitrix.types.FrontgateId")
	proto.RegisterType((*FrontgateIdList)(nil), "openpitrix.types.FrontgateIdList")
	proto.RegisterType((*FrontgateConfig)(nil), "openpitrix.types.FrontgateConfig")
	proto.RegisterType((*FrontgateEndpoint)(nil), "openpitrix.types.FrontgateEndpoint")
}

func init() { proto.RegisterFile("openpitrix/types/frontgate.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xcf, 0xab, 0x9b, 0x40,
	0x10, 0xc7, 0x31, 0x26, 0x26, 0x8e, 0x69, 0xda, 0xee, 0xa5, 0x92, 0x1f, 0xd4, 0x5a, 0x0a, 0x52,
	0xa8, 0x42, 0x7a, 0x2c, 0x85, 0xd0, 0x92, 0xd2, 0x40, 0x0e, 0xc5, 0x63, 0x2f, 0xd2, 0xb8, 0xab,
	0x5d, 0x2a, 0xbb, 0x8b, 0x2e, 0xe5, 0xbd, 0xdb, 0xfb, 0x07, 0xde, 0xff, 0xfc, 0xd8, 0x31, 0x31,
	0xbe, 0x78, 0x72, 0x77, 0xe6, 0xfb, 0x19, 0x77, 0xbe, 0x33, 0x10, 0x48, 0xc5, 0x84, 0xe2, 0xba,
	0xe6, 0x77, 0x89, 0xbe, 0x57, 0xac, 0x49, 0x8a, 0x5a, 0x0a, 0x5d, 0xfe, 0xd1, 0x2c, 0x56, 0xb5,
	0xd4, 0x92, 0xbc, 0xba, 0x2a, 0x62, 0x54, 0x2c, 0x57, 0x03, 0x86, 0xe9, 0x9c, 0xb6, 0xf2, 0xe5,
	0x7a, 0x90, 0xcc, 0xa5, 0x28, 0xce, 0xd9, 0x70, 0x03, 0xde, 0x8f, 0x4b, 0xfd, 0x03, 0x25, 0x0b,
	0x18, 0x71, 0xea, 0x5b, 0x81, 0x15, 0xb9, 0xe9, 0x88, 0xd3, 0xf0, 0x23, 0xbc, 0xec, 0xa5, 0x8f,
	0xbc, 0xd1, 0xe4, 0x0d, 0x4c, 0x39, 0xcd, 0x2a, 0xde, 0x68, 0xdf, 0x0a, 0xec, 0xc8, 0x4d, 0x1d,
	0x8e, 0x89, 0xf0, 0xd1, 0xee, 0x89, 0xbf, 0x4b, 0x51, 0xf0, 0xf2, 0xb6, 0x9e, 0x81, 0x85, 0xa4,
	0x2c, 0xe3, 0xd4, 0x1f, 0x61, 0xd0, 0x31, 0xd7, 0x03, 0x25, 0x04, 0xc6, 0x7f, 0x65, 0xa3, 0x7d,
	0x1b, 0xa3, 0x78, 0x26, 0x6f, 0xc1, 0x33, 0xbf, 0x61, 0x22, 0x53, 0xb2, 0xd6, 0xfe, 0x38, 0xb0,
	0xa2, 0x49, 0x0a, 0x6d, 0xe8, 0x97, 0xac, 0x35, 0xd9, 0x00, 0x28, 0x5e, 0x49, 0x9d, 0x21, 0x3a,
	0x41, 0xd4, 0xc5, 0xc8, 0x4f, 0xc3, 0x77, 0x69, 0xc4, 0x1d, 0xc4, 0xdb, 0x34, 0xd2, 0x3b, 0x70,
	0xf1, 0x2d, 0xd8, 0xca, 0x34, 0xb0, 0x23, 0x6f, 0xfb, 0x3e, 0xbe, 0xf5, 0x36, 0xee, 0x3a, 0xda,
	0x0b, 0xaa, 0x24, 0x17, 0x3a, 0x9d, 0x19, 0x0a, 0xad, 0xf8, 0x0a, 0x9e, 0x31, 0x3a, 0xcb, 0xb1,
	0x59, 0x7f, 0x16, 0x58, 0x91, 0xb7, 0x5d, 0x0f, 0x6b, 0xec, 0x75, 0x4e, 0x5b, 0x43, 0x52, 0x60,
	0xdd, 0x99, 0xec, 0x60, 0x8e, 0xa3, 0xb8, 0xf0, 0x2e, 0xf2, 0x9b, 0x21, 0x6f, 0xf4, 0x97, 0x02,
	0x5e, 0x7e, 0xbd, 0x90, 0x15, 0xb8, 0x95, 0x2c, 0xb3, 0x8a, 0xfd, 0x67, 0x95, 0x0f, 0xd8, 0xff,
	0xac, 0x92, 0xe5, 0xd1, 0xdc, 0xc3, 0x07, 0x0b, 0x5e, 0x0f, 0x5e, 0x4f, 0xde, 0xc1, 0xbc, 0x5b,
	0xa8, 0xac, 0x9b, 0x8d, 0x57, 0xf4, 0x96, 0xe0, 0xb9, 0x44, 0x9d, 0x27, 0xd5, 0x93, 0x28, 0xf2,
	0x01, 0x16, 0x57, 0x09, 0xda, 0x6b, 0xa3, 0xbd, 0x2f, 0xba, 0xa8, 0xb1, 0xf8, 0x5b, 0xf2, 0xfb,
	0x53, 0xaf, 0x19, 0x2e, 0x93, 0xde, 0x2e, 0xaa, 0x7f, 0x65, 0xa2, 0x4e, 0xed, 0x4a, 0x7e, 0x51,
	0x27, 0xfc, 0x9e, 0x1c, 0xdc, 0xca, 0xcf, 0x4f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x7b, 0x5a,
	0xf0, 0x06, 0x03, 0x00, 0x00,
}
