// Code generated by protoc-gen-go. DO NOT EDIT.
// source: openpitrix/types/types.proto

package pbtypes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

type Bool struct {
	Value bool `protobuf:"varint,1,opt,name=value" json:"value"`
}

func (m *Bool) Reset()                    { *m = Bool{} }
func (m *Bool) String() string            { return proto.CompactTextString(m) }
func (*Bool) ProtoMessage()               {}
func (*Bool) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *Bool) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type BoolList struct {
	ValueList []bool `protobuf:"varint,1,rep,packed,name=value_list,json=valueList" json:"value_list"`
}

func (m *BoolList) Reset()                    { *m = BoolList{} }
func (m *BoolList) String() string            { return proto.CompactTextString(m) }
func (*BoolList) ProtoMessage()               {}
func (*BoolList) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *BoolList) GetValueList() []bool {
	if m != nil {
		return m.ValueList
	}
	return nil
}

type Int32 struct {
	Value int32 `protobuf:"varint,1,opt,name=value" json:"value"`
}

func (m *Int32) Reset()                    { *m = Int32{} }
func (m *Int32) String() string            { return proto.CompactTextString(m) }
func (*Int32) ProtoMessage()               {}
func (*Int32) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *Int32) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Int32List struct {
	ValueList []int32 `protobuf:"varint,1,rep,packed,name=value_list,json=valueList" json:"value_list"`
}

func (m *Int32List) Reset()                    { *m = Int32List{} }
func (m *Int32List) String() string            { return proto.CompactTextString(m) }
func (*Int32List) ProtoMessage()               {}
func (*Int32List) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *Int32List) GetValueList() []int32 {
	if m != nil {
		return m.ValueList
	}
	return nil
}

type UInt32 struct {
	Value uint32 `protobuf:"varint,1,opt,name=value" json:"value"`
}

func (m *UInt32) Reset()                    { *m = UInt32{} }
func (m *UInt32) String() string            { return proto.CompactTextString(m) }
func (*UInt32) ProtoMessage()               {}
func (*UInt32) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *UInt32) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type UInt32List struct {
	ValueList []uint32 `protobuf:"varint,1,rep,packed,name=value_list,json=valueList" json:"value_list"`
}

func (m *UInt32List) Reset()                    { *m = UInt32List{} }
func (m *UInt32List) String() string            { return proto.CompactTextString(m) }
func (*UInt32List) ProtoMessage()               {}
func (*UInt32List) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{6} }

func (m *UInt32List) GetValueList() []uint32 {
	if m != nil {
		return m.ValueList
	}
	return nil
}

type Int64 struct {
	Value int64 `protobuf:"varint,1,opt,name=value" json:"value"`
}

func (m *Int64) Reset()                    { *m = Int64{} }
func (m *Int64) String() string            { return proto.CompactTextString(m) }
func (*Int64) ProtoMessage()               {}
func (*Int64) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{7} }

func (m *Int64) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Int64List struct {
	ValueList []int64 `protobuf:"varint,1,rep,packed,name=value_list,json=valueList" json:"value_list"`
}

func (m *Int64List) Reset()                    { *m = Int64List{} }
func (m *Int64List) String() string            { return proto.CompactTextString(m) }
func (*Int64List) ProtoMessage()               {}
func (*Int64List) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{8} }

func (m *Int64List) GetValueList() []int64 {
	if m != nil {
		return m.ValueList
	}
	return nil
}

type UInt64 struct {
	Value uint64 `protobuf:"varint,1,opt,name=value" json:"value"`
}

func (m *UInt64) Reset()                    { *m = UInt64{} }
func (m *UInt64) String() string            { return proto.CompactTextString(m) }
func (*UInt64) ProtoMessage()               {}
func (*UInt64) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{9} }

func (m *UInt64) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type UInt64List struct {
	ValueList []uint64 `protobuf:"varint,1,rep,packed,name=value_list,json=valueList" json:"value_list"`
}

func (m *UInt64List) Reset()                    { *m = UInt64List{} }
func (m *UInt64List) String() string            { return proto.CompactTextString(m) }
func (*UInt64List) ProtoMessage()               {}
func (*UInt64List) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{10} }

func (m *UInt64List) GetValueList() []uint64 {
	if m != nil {
		return m.ValueList
	}
	return nil
}

type Float32 struct {
	Value float32 `protobuf:"fixed32,1,opt,name=value" json:"value"`
}

func (m *Float32) Reset()                    { *m = Float32{} }
func (m *Float32) String() string            { return proto.CompactTextString(m) }
func (*Float32) ProtoMessage()               {}
func (*Float32) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{11} }

func (m *Float32) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Float32List struct {
	ValueList []float32 `protobuf:"fixed32,1,rep,packed,name=value_list,json=valueList" json:"value_list"`
}

func (m *Float32List) Reset()                    { *m = Float32List{} }
func (m *Float32List) String() string            { return proto.CompactTextString(m) }
func (*Float32List) ProtoMessage()               {}
func (*Float32List) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{12} }

func (m *Float32List) GetValueList() []float32 {
	if m != nil {
		return m.ValueList
	}
	return nil
}

type Float64 struct {
	Value float64 `protobuf:"fixed64,1,opt,name=value" json:"value"`
}

func (m *Float64) Reset()                    { *m = Float64{} }
func (m *Float64) String() string            { return proto.CompactTextString(m) }
func (*Float64) ProtoMessage()               {}
func (*Float64) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{13} }

func (m *Float64) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Float64List struct {
	ValueList []float64 `protobuf:"fixed64,1,rep,packed,name=value_list,json=valueList" json:"value_list"`
}

func (m *Float64List) Reset()                    { *m = Float64List{} }
func (m *Float64List) String() string            { return proto.CompactTextString(m) }
func (*Float64List) ProtoMessage()               {}
func (*Float64List) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{14} }

func (m *Float64List) GetValueList() []float64 {
	if m != nil {
		return m.ValueList
	}
	return nil
}

type String struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value"`
}

func (m *String) Reset()                    { *m = String{} }
func (m *String) String() string            { return proto.CompactTextString(m) }
func (*String) ProtoMessage()               {}
func (*String) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{15} }

func (m *String) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type StringList struct {
	ValueList []string `protobuf:"bytes,1,rep,name=value_list,json=valueList" json:"value_list"`
}

func (m *StringList) Reset()                    { *m = StringList{} }
func (m *StringList) String() string            { return proto.CompactTextString(m) }
func (*StringList) ProtoMessage()               {}
func (*StringList) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{16} }

func (m *StringList) GetValueList() []string {
	if m != nil {
		return m.ValueList
	}
	return nil
}

type StringMap struct {
	ValueMap map[string]string `protobuf:"bytes,1,rep,name=value_map,json=valueMap" json:"value_map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *StringMap) Reset()                    { *m = StringMap{} }
func (m *StringMap) String() string            { return proto.CompactTextString(m) }
func (*StringMap) ProtoMessage()               {}
func (*StringMap) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{17} }

func (m *StringMap) GetValueMap() map[string]string {
	if m != nil {
		return m.ValueMap
	}
	return nil
}

type StringListMap struct {
	ValueListMap map[string]*StringList `protobuf:"bytes,1,rep,name=value_list_map,json=valueListMap" json:"value_list_map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *StringListMap) Reset()                    { *m = StringListMap{} }
func (m *StringListMap) String() string            { return proto.CompactTextString(m) }
func (*StringListMap) ProtoMessage()               {}
func (*StringListMap) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{18} }

func (m *StringListMap) GetValueListMap() map[string]*StringList {
	if m != nil {
		return m.ValueListMap
	}
	return nil
}

type Bytes struct {
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value"`
}

func (m *Bytes) Reset()                    { *m = Bytes{} }
func (m *Bytes) String() string            { return proto.CompactTextString(m) }
func (*Bytes) ProtoMessage()               {}
func (*Bytes) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{19} }

func (m *Bytes) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type BytesList struct {
	ValueList [][]byte `protobuf:"bytes,1,rep,name=value_list,json=valueList,proto3" json:"value_list"`
}

func (m *BytesList) Reset()                    { *m = BytesList{} }
func (m *BytesList) String() string            { return proto.CompactTextString(m) }
func (*BytesList) ProtoMessage()               {}
func (*BytesList) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{20} }

func (m *BytesList) GetValueList() [][]byte {
	if m != nil {
		return m.ValueList
	}
	return nil
}

type BytesMap struct {
	ValueMap map[string][]byte `protobuf:"bytes,1,rep,name=value_map,json=valueMap" json:"value_map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *BytesMap) Reset()                    { *m = BytesMap{} }
func (m *BytesMap) String() string            { return proto.CompactTextString(m) }
func (*BytesMap) ProtoMessage()               {}
func (*BytesMap) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{21} }

func (m *BytesMap) GetValueMap() map[string][]byte {
	if m != nil {
		return m.ValueMap
	}
	return nil
}

type BytesListMap struct {
	ValueListMap map[string]*BytesList `protobuf:"bytes,1,rep,name=value_list_map,json=valueListMap" json:"value_list_map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BytesListMap) Reset()                    { *m = BytesListMap{} }
func (m *BytesListMap) String() string            { return proto.CompactTextString(m) }
func (*BytesListMap) ProtoMessage()               {}
func (*BytesListMap) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{22} }

func (m *BytesListMap) GetValueListMap() map[string]*BytesList {
	if m != nil {
		return m.ValueListMap
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "openpitrix.types.Empty")
	proto.RegisterType((*Bool)(nil), "openpitrix.types.Bool")
	proto.RegisterType((*BoolList)(nil), "openpitrix.types.BoolList")
	proto.RegisterType((*Int32)(nil), "openpitrix.types.Int32")
	proto.RegisterType((*Int32List)(nil), "openpitrix.types.Int32List")
	proto.RegisterType((*UInt32)(nil), "openpitrix.types.UInt32")
	proto.RegisterType((*UInt32List)(nil), "openpitrix.types.UInt32List")
	proto.RegisterType((*Int64)(nil), "openpitrix.types.Int64")
	proto.RegisterType((*Int64List)(nil), "openpitrix.types.Int64List")
	proto.RegisterType((*UInt64)(nil), "openpitrix.types.UInt64")
	proto.RegisterType((*UInt64List)(nil), "openpitrix.types.UInt64List")
	proto.RegisterType((*Float32)(nil), "openpitrix.types.Float32")
	proto.RegisterType((*Float32List)(nil), "openpitrix.types.Float32List")
	proto.RegisterType((*Float64)(nil), "openpitrix.types.Float64")
	proto.RegisterType((*Float64List)(nil), "openpitrix.types.Float64List")
	proto.RegisterType((*String)(nil), "openpitrix.types.String")
	proto.RegisterType((*StringList)(nil), "openpitrix.types.StringList")
	proto.RegisterType((*StringMap)(nil), "openpitrix.types.StringMap")
	proto.RegisterType((*StringListMap)(nil), "openpitrix.types.StringListMap")
	proto.RegisterType((*Bytes)(nil), "openpitrix.types.Bytes")
	proto.RegisterType((*BytesList)(nil), "openpitrix.types.BytesList")
	proto.RegisterType((*BytesMap)(nil), "openpitrix.types.BytesMap")
	proto.RegisterType((*BytesListMap)(nil), "openpitrix.types.BytesListMap")
}

func init() { proto.RegisterFile("openpitrix/types/types.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xdd, 0x8a, 0x9b, 0x40,
	0x14, 0xc7, 0x19, 0x8d, 0xbb, 0x7a, 0xa2, 0x65, 0x2b, 0xbd, 0x58, 0xb6, 0x49, 0xbb, 0x78, 0x95,
	0xed, 0x87, 0x76, 0xdd, 0x65, 0x29, 0xdd, 0xbb, 0x40, 0x02, 0x85, 0xe6, 0x26, 0x25, 0x29, 0x94,
	0x96, 0x60, 0x40, 0x82, 0xc4, 0xe8, 0xa0, 0xd3, 0x50, 0x5f, 0xa2, 0xf4, 0xa1, 0x0a, 0x7d, 0xad,
	0xe2, 0x8c, 0xc6, 0xf1, 0x63, 0x42, 0x2e, 0x7a, 0x93, 0x64, 0xe6, 0x9c, 0xfc, 0xfc, 0x1d, 0xff,
	0xc3, 0xc0, 0x20, 0xc6, 0x7e, 0x84, 0x03, 0x92, 0x04, 0x3f, 0x1d, 0x92, 0x61, 0x3f, 0x65, 0x9f,
	0x36, 0x4e, 0x62, 0x12, 0x9b, 0x17, 0x55, 0xd5, 0xa6, 0xfb, 0xd6, 0x39, 0x28, 0x93, 0x1d, 0x26,
	0x99, 0x35, 0x80, 0xde, 0x38, 0x8e, 0x43, 0xf3, 0x19, 0x28, 0x7b, 0x2f, 0xfc, 0xe1, 0x5f, 0xa2,
	0x6b, 0x34, 0x52, 0xe7, 0x6c, 0x61, 0xdd, 0x80, 0x9a, 0x57, 0x3f, 0x05, 0x29, 0x31, 0x87, 0x00,
	0x74, 0x73, 0x15, 0x06, 0x29, 0xb9, 0x44, 0xd7, 0xf2, 0x48, 0x9d, 0x6b, 0x74, 0x27, 0x2f, 0x5b,
	0x43, 0x50, 0x3e, 0x46, 0xe4, 0xce, 0xad, 0x93, 0x94, 0x92, 0xf4, 0x0a, 0x34, 0x5a, 0x16, 0xa0,
	0x14, 0x1e, 0xf5, 0x02, 0xce, 0x16, 0x1d, 0x2c, 0xa3, 0x64, 0xbd, 0x06, 0x58, 0x1c, 0x83, 0x19,
	0x6d, 0xaf, 0x87, 0xfb, 0x3a, 0x4b, 0xae, 0x7b, 0x3d, 0xdc, 0x0b, 0x50, 0x72, 0x87, 0x57, 0x93,
	0xd5, 0x6b, 0x78, 0x09, 0x61, 0x3d, 0x1e, 0xf6, 0x12, 0xce, 0xa7, 0x61, 0xec, 0xb5, 0xa6, 0x94,
	0x4a, 0xda, 0x1b, 0xe8, 0x17, 0x0d, 0x02, 0x9c, 0xd4, 0x85, 0x6b, 0xca, 0xa1, 0x26, 0x4e, 0x68,
	0x87, 0x1a, 0xa3, 0x7e, 0x26, 0x49, 0x10, 0x6d, 0xea, 0x34, 0x8d, 0x1b, 0x95, 0xd5, 0x05, 0x30,
	0x8d, 0x87, 0xfd, 0x46, 0xa0, 0xb1, 0xee, 0x99, 0x87, 0xcd, 0x29, 0xb0, 0xd2, 0x6a, 0xe7, 0x61,
	0xda, 0xdb, 0x77, 0x6f, 0xec, 0xe6, 0x01, 0xb5, 0x0f, 0xfd, 0xf6, 0x32, 0x6f, 0x9e, 0x79, 0x78,
	0x12, 0x91, 0x24, 0x9b, 0xab, 0xfb, 0x62, 0x79, 0xf5, 0x08, 0x46, 0xad, 0x64, 0x5e, 0x80, 0xbc,
	0xf5, 0xb3, 0xc2, 0x33, 0xff, 0x59, 0xb9, 0x4b, 0x9c, 0xfb, 0x07, 0xe9, 0x3d, 0xb2, 0xfe, 0x22,
	0x30, 0xaa, 0x01, 0x72, 0xad, 0x2f, 0xf0, 0xa4, 0x9a, 0x81, 0x73, 0xbb, 0x15, 0xb9, 0x15, 0x7f,
	0x64, 0x7e, 0xc5, 0x82, 0x39, 0xea, 0x7b, 0x6e, 0xeb, 0xea, 0x3b, 0x3c, 0x6d, 0xb5, 0x74, 0xb8,
	0xba, 0xbc, 0x6b, 0xdf, 0x1d, 0x1c, 0x7b, 0x2c, 0x3f, 0xc9, 0x10, 0x94, 0x71, 0x46, 0xfc, 0xb4,
	0x1e, 0x94, 0xce, 0x9d, 0x6f, 0x5a, 0x16, 0xe4, 0xa4, 0xf3, 0x39, 0xfd, 0x42, 0xa0, 0xd2, 0xe6,
	0xfc, 0x7d, 0x4c, 0xda, 0x31, 0x8d, 0xda, 0x4e, 0x65, 0xfb, 0x7f, 0x4b, 0x49, 0xe7, 0x67, 0xfb,
	0x83, 0x40, 0x3f, 0xd8, 0xe7, 0x52, 0x4b, 0x41, 0x48, 0xef, 0x04, 0x66, 0xa7, 0x66, 0xf4, 0xed,
	0xb4, 0x8c, 0x6e, 0xeb, 0x19, 0x3d, 0x3f, 0xf2, 0x54, 0x6e, 0x8c, 0xb1, 0xf3, 0xf5, 0x2d, 0xd7,
	0x18, 0xc4, 0x0e, 0x77, 0x59, 0xe3, 0xed, 0xc6, 0xc1, 0x6b, 0x76, 0x5b, 0x3f, 0xe2, 0x35, 0xfd,
	0x5e, 0x9f, 0xd1, 0x6b, 0xfb, 0xee, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x27, 0xcd, 0x44,
	0xd6, 0x05, 0x00, 0x00,
}
