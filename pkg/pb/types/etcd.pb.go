// Code generated by protoc-gen-go. DO NOT EDIT.
// source: openpitrix/types/etcd.proto

package pbtypes // import "openpitrix.io/openpitrix/pkg/pb/types"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EtcdConfig struct {
	User                 string          `protobuf:"bytes,1,opt,name=user,proto3" json:"user"`
	Password             string          `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
	MaxTxnOps            int32           `protobuf:"varint,3,opt,name=max_txn_ops,json=maxTxnOps,proto3" json:"max_txn_ops"`
	TimeoutSeconds       int32           `protobuf:"varint,4,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds"`
	NodeList             []*EtcdEndpoint `protobuf:"bytes,5,rep,name=node_list,json=nodeList,proto3" json:"node_list"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EtcdConfig) Reset()         { *m = EtcdConfig{} }
func (m *EtcdConfig) String() string { return proto.CompactTextString(m) }
func (*EtcdConfig) ProtoMessage()    {}
func (*EtcdConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_etcd_b4be60b3d2cd5aca, []int{0}
}
func (m *EtcdConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EtcdConfig.Unmarshal(m, b)
}
func (m *EtcdConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EtcdConfig.Marshal(b, m, deterministic)
}
func (dst *EtcdConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EtcdConfig.Merge(dst, src)
}
func (m *EtcdConfig) XXX_Size() int {
	return xxx_messageInfo_EtcdConfig.Size(m)
}
func (m *EtcdConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EtcdConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EtcdConfig proto.InternalMessageInfo

func (m *EtcdConfig) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *EtcdConfig) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *EtcdConfig) GetMaxTxnOps() int32 {
	if m != nil {
		return m.MaxTxnOps
	}
	return 0
}

func (m *EtcdConfig) GetTimeoutSeconds() int32 {
	if m != nil {
		return m.TimeoutSeconds
	}
	return 0
}

func (m *EtcdConfig) GetNodeList() []*EtcdEndpoint {
	if m != nil {
		return m.NodeList
	}
	return nil
}

type EtcdEndpoint struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EtcdEndpoint) Reset()         { *m = EtcdEndpoint{} }
func (m *EtcdEndpoint) String() string { return proto.CompactTextString(m) }
func (*EtcdEndpoint) ProtoMessage()    {}
func (*EtcdEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_etcd_b4be60b3d2cd5aca, []int{1}
}
func (m *EtcdEndpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EtcdEndpoint.Unmarshal(m, b)
}
func (m *EtcdEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EtcdEndpoint.Marshal(b, m, deterministic)
}
func (dst *EtcdEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EtcdEndpoint.Merge(dst, src)
}
func (m *EtcdEndpoint) XXX_Size() int {
	return xxx_messageInfo_EtcdEndpoint.Size(m)
}
func (m *EtcdEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_EtcdEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_EtcdEndpoint proto.InternalMessageInfo

func (m *EtcdEndpoint) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *EtcdEndpoint) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*EtcdConfig)(nil), "openpitrix.types.EtcdConfig")
	proto.RegisterType((*EtcdEndpoint)(nil), "openpitrix.types.EtcdEndpoint")
}

func init() { proto.RegisterFile("openpitrix/types/etcd.proto", fileDescriptor_etcd_b4be60b3d2cd5aca) }

var fileDescriptor_etcd_b4be60b3d2cd5aca = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0xa9, 0xbb, 0x95, 0x6d, 0x56, 0x54, 0x72, 0x2a, 0x0a, 0x4b, 0xd9, 0x8b, 0xbd, 0xd8,
	0x82, 0x82, 0x97, 0xbd, 0x29, 0x7b, 0x13, 0x84, 0xea, 0xc9, 0x4b, 0x69, 0x9b, 0xb8, 0x06, 0x6d,
	0x66, 0xe8, 0xcc, 0x62, 0xfc, 0x7a, 0x7e, 0x32, 0x49, 0xd6, 0x3f, 0x65, 0x4f, 0x79, 0xf9, 0xbd,
	0x84, 0x99, 0xf7, 0xc4, 0x39, 0xa0, 0xb6, 0x68, 0x78, 0x30, 0xae, 0xe4, 0x4f, 0xd4, 0x54, 0x6a,
	0xee, 0x54, 0x81, 0x03, 0x30, 0xc8, 0xd3, 0x7f, 0xb3, 0x08, 0xe6, 0xf2, 0x2b, 0x12, 0x62, 0xcd,
	0x9d, 0xba, 0x03, 0xfb, 0x62, 0x36, 0x52, 0x8a, 0xe9, 0x96, 0xf4, 0x90, 0x46, 0x59, 0x94, 0x27,
	0x55, 0xd0, 0xf2, 0x4c, 0xcc, 0xb0, 0x21, 0xfa, 0x80, 0x41, 0xa5, 0x07, 0x81, 0xff, 0xdd, 0xe5,
	0x42, 0xcc, 0xfb, 0xc6, 0xd5, 0xec, 0x6c, 0x0d, 0x48, 0xe9, 0x24, 0x8b, 0xf2, 0xb8, 0x4a, 0xfa,
	0xc6, 0x3d, 0x39, 0xfb, 0x80, 0x24, 0x2f, 0xc4, 0x09, 0x9b, 0x5e, 0xc3, 0x96, 0x6b, 0xd2, 0x1d,
	0x58, 0x45, 0xe9, 0x34, 0xbc, 0x39, 0xfe, 0xc1, 0x8f, 0x3b, 0x2a, 0x57, 0x22, 0xb1, 0xa0, 0x74,
	0xfd, 0x6e, 0x88, 0xd3, 0x38, 0x9b, 0xe4, 0xf3, 0xab, 0x45, 0xb1, 0xbf, 0x6d, 0xe1, 0x37, 0x5d,
	0x5b, 0x85, 0x60, 0x2c, 0x57, 0x33, 0xff, 0xe1, 0xde, 0x10, 0x2f, 0x6f, 0xc4, 0xd1, 0xd8, 0xf1,
	0x29, 0x5e, 0x81, 0xf8, 0x37, 0x85, 0xd7, 0x9e, 0x21, 0x0c, 0x1c, 0x12, 0xc4, 0x55, 0xd0, 0xb7,
	0xe5, 0xf3, 0xe5, 0x68, 0x84, 0x81, 0x72, 0xd4, 0x1d, 0xbe, 0x6d, 0x4a, 0x6c, 0x77, 0x15, 0xae,
	0xb0, 0x0d, 0x67, 0x7b, 0x18, 0x6a, 0xbc, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x12, 0x21,
	0xc8, 0x65, 0x01, 0x00, 0x00,
}
