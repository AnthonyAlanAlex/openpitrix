// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

package pb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateTaskRequest struct {
	JobId                *wrappers.StringValue `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	NodeId               *wrappers.StringValue `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Target               *wrappers.StringValue `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	TaskAction           *wrappers.StringValue `protobuf:"bytes,4,opt,name=task_action,json=taskAction,proto3" json:"task_action,omitempty"`
	Directive            *wrappers.StringValue `protobuf:"bytes,5,opt,name=directive,proto3" json:"directive,omitempty"`
	FailureAllowed       *wrappers.BoolValue   `protobuf:"bytes,6,opt,name=failure_allowed,json=failureAllowed,proto3" json:"failure_allowed,omitempty"`
	Status               *wrappers.StringValue `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateTaskRequest) Reset()         { *m = CreateTaskRequest{} }
func (m *CreateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskRequest) ProtoMessage()    {}
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}

func (m *CreateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskRequest.Unmarshal(m, b)
}
func (m *CreateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskRequest.Marshal(b, m, deterministic)
}
func (m *CreateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskRequest.Merge(m, src)
}
func (m *CreateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskRequest.Size(m)
}
func (m *CreateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskRequest proto.InternalMessageInfo

func (m *CreateTaskRequest) GetJobId() *wrappers.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *CreateTaskRequest) GetNodeId() *wrappers.StringValue {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *CreateTaskRequest) GetTarget() *wrappers.StringValue {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *CreateTaskRequest) GetTaskAction() *wrappers.StringValue {
	if m != nil {
		return m.TaskAction
	}
	return nil
}

func (m *CreateTaskRequest) GetDirective() *wrappers.StringValue {
	if m != nil {
		return m.Directive
	}
	return nil
}

func (m *CreateTaskRequest) GetFailureAllowed() *wrappers.BoolValue {
	if m != nil {
		return m.FailureAllowed
	}
	return nil
}

func (m *CreateTaskRequest) GetStatus() *wrappers.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

type CreateTaskResponse struct {
	TaskId               *wrappers.StringValue `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	JobId                *wrappers.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateTaskResponse) Reset()         { *m = CreateTaskResponse{} }
func (m *CreateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTaskResponse) ProtoMessage()    {}
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{1}
}

func (m *CreateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskResponse.Unmarshal(m, b)
}
func (m *CreateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskResponse.Marshal(b, m, deterministic)
}
func (m *CreateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskResponse.Merge(m, src)
}
func (m *CreateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTaskResponse.Size(m)
}
func (m *CreateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskResponse proto.InternalMessageInfo

func (m *CreateTaskResponse) GetTaskId() *wrappers.StringValue {
	if m != nil {
		return m.TaskId
	}
	return nil
}

func (m *CreateTaskResponse) GetJobId() *wrappers.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type RetryTasksRequest struct {
	TaskId               []string `protobuf:"bytes,1,rep,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetryTasksRequest) Reset()         { *m = RetryTasksRequest{} }
func (m *RetryTasksRequest) String() string { return proto.CompactTextString(m) }
func (*RetryTasksRequest) ProtoMessage()    {}
func (*RetryTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{2}
}

func (m *RetryTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryTasksRequest.Unmarshal(m, b)
}
func (m *RetryTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryTasksRequest.Marshal(b, m, deterministic)
}
func (m *RetryTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryTasksRequest.Merge(m, src)
}
func (m *RetryTasksRequest) XXX_Size() int {
	return xxx_messageInfo_RetryTasksRequest.Size(m)
}
func (m *RetryTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetryTasksRequest proto.InternalMessageInfo

func (m *RetryTasksRequest) GetTaskId() []string {
	if m != nil {
		return m.TaskId
	}
	return nil
}

type RetryTasksResponse struct {
	TaskSet              []*Task  `protobuf:"bytes,1,rep,name=task_set,json=taskSet,proto3" json:"task_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetryTasksResponse) Reset()         { *m = RetryTasksResponse{} }
func (m *RetryTasksResponse) String() string { return proto.CompactTextString(m) }
func (*RetryTasksResponse) ProtoMessage()    {}
func (*RetryTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{3}
}

func (m *RetryTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryTasksResponse.Unmarshal(m, b)
}
func (m *RetryTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryTasksResponse.Marshal(b, m, deterministic)
}
func (m *RetryTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryTasksResponse.Merge(m, src)
}
func (m *RetryTasksResponse) XXX_Size() int {
	return xxx_messageInfo_RetryTasksResponse.Size(m)
}
func (m *RetryTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RetryTasksResponse proto.InternalMessageInfo

func (m *RetryTasksResponse) GetTaskSet() []*Task {
	if m != nil {
		return m.TaskSet
	}
	return nil
}

type Task struct {
	TaskId               *wrappers.StringValue `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	JobId                *wrappers.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	TaskAction           *wrappers.StringValue `protobuf:"bytes,3,opt,name=task_action,json=taskAction,proto3" json:"task_action,omitempty"`
	Status               *wrappers.StringValue `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	ErrorCode            *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Directive            *wrappers.StringValue `protobuf:"bytes,6,opt,name=directive,proto3" json:"directive,omitempty"`
	Executor             *wrappers.StringValue `protobuf:"bytes,7,opt,name=executor,proto3" json:"executor,omitempty"`
	OwnerPath            *wrappers.StringValue `protobuf:"bytes,8,opt,name=owner_path,json=ownerPath,proto3" json:"owner_path,omitempty"`
	Target               *wrappers.StringValue `protobuf:"bytes,9,opt,name=target,proto3" json:"target,omitempty"`
	NodeId               *wrappers.StringValue `protobuf:"bytes,10,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StatusTime           *timestamp.Timestamp  `protobuf:"bytes,12,opt,name=status_time,json=statusTime,proto3" json:"status_time,omitempty"`
	FailureAllowed       *wrappers.BoolValue   `protobuf:"bytes,13,opt,name=failure_allowed,json=failureAllowed,proto3" json:"failure_allowed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{4}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetTaskId() *wrappers.StringValue {
	if m != nil {
		return m.TaskId
	}
	return nil
}

func (m *Task) GetJobId() *wrappers.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *Task) GetTaskAction() *wrappers.StringValue {
	if m != nil {
		return m.TaskAction
	}
	return nil
}

func (m *Task) GetStatus() *wrappers.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Task) GetErrorCode() *wrappers.UInt32Value {
	if m != nil {
		return m.ErrorCode
	}
	return nil
}

func (m *Task) GetDirective() *wrappers.StringValue {
	if m != nil {
		return m.Directive
	}
	return nil
}

func (m *Task) GetExecutor() *wrappers.StringValue {
	if m != nil {
		return m.Executor
	}
	return nil
}

func (m *Task) GetOwnerPath() *wrappers.StringValue {
	if m != nil {
		return m.OwnerPath
	}
	return nil
}

func (m *Task) GetTarget() *wrappers.StringValue {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Task) GetNodeId() *wrappers.StringValue {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *Task) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Task) GetStatusTime() *timestamp.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Task) GetFailureAllowed() *wrappers.BoolValue {
	if m != nil {
		return m.FailureAllowed
	}
	return nil
}

type DescribeTasksRequest struct {
	TaskId   []string              `protobuf:"bytes,1,rep,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	JobId    []string              `protobuf:"bytes,2,rep,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Executor *wrappers.StringValue `protobuf:"bytes,3,opt,name=executor,proto3" json:"executor,omitempty"`
	Target   *wrappers.StringValue `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Status   []string              `protobuf:"bytes,5,rep,name=status,proto3" json:"status,omitempty"`
	// default is 20, max value is 200
	Limit uint32 `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	// default is 0
	Offset               uint32                `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	SearchWord           *wrappers.StringValue `protobuf:"bytes,8,opt,name=search_word,json=searchWord,proto3" json:"search_word,omitempty"`
	Owner                []string              `protobuf:"bytes,9,rep,name=owner,proto3" json:"owner,omitempty"`
	DisplayColumns       []string              `protobuf:"bytes,10,rep,name=display_columns,json=displayColumns,proto3" json:"display_columns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DescribeTasksRequest) Reset()         { *m = DescribeTasksRequest{} }
func (m *DescribeTasksRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeTasksRequest) ProtoMessage()    {}
func (*DescribeTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{5}
}

func (m *DescribeTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTasksRequest.Unmarshal(m, b)
}
func (m *DescribeTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTasksRequest.Marshal(b, m, deterministic)
}
func (m *DescribeTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTasksRequest.Merge(m, src)
}
func (m *DescribeTasksRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeTasksRequest.Size(m)
}
func (m *DescribeTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTasksRequest proto.InternalMessageInfo

func (m *DescribeTasksRequest) GetTaskId() []string {
	if m != nil {
		return m.TaskId
	}
	return nil
}

func (m *DescribeTasksRequest) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *DescribeTasksRequest) GetExecutor() *wrappers.StringValue {
	if m != nil {
		return m.Executor
	}
	return nil
}

func (m *DescribeTasksRequest) GetTarget() *wrappers.StringValue {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *DescribeTasksRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeTasksRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeTasksRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeTasksRequest) GetSearchWord() *wrappers.StringValue {
	if m != nil {
		return m.SearchWord
	}
	return nil
}

func (m *DescribeTasksRequest) GetOwner() []string {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *DescribeTasksRequest) GetDisplayColumns() []string {
	if m != nil {
		return m.DisplayColumns
	}
	return nil
}

type DescribeTasksResponse struct {
	TotalCount           uint32   `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	TaskSet              []*Task  `protobuf:"bytes,2,rep,name=task_set,json=taskSet,proto3" json:"task_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeTasksResponse) Reset()         { *m = DescribeTasksResponse{} }
func (m *DescribeTasksResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeTasksResponse) ProtoMessage()    {}
func (*DescribeTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{6}
}

func (m *DescribeTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTasksResponse.Unmarshal(m, b)
}
func (m *DescribeTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTasksResponse.Marshal(b, m, deterministic)
}
func (m *DescribeTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTasksResponse.Merge(m, src)
}
func (m *DescribeTasksResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeTasksResponse.Size(m)
}
func (m *DescribeTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTasksResponse proto.InternalMessageInfo

func (m *DescribeTasksResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeTasksResponse) GetTaskSet() []*Task {
	if m != nil {
		return m.TaskSet
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateTaskRequest)(nil), "openpitrix.CreateTaskRequest")
	proto.RegisterType((*CreateTaskResponse)(nil), "openpitrix.CreateTaskResponse")
	proto.RegisterType((*RetryTasksRequest)(nil), "openpitrix.RetryTasksRequest")
	proto.RegisterType((*RetryTasksResponse)(nil), "openpitrix.RetryTasksResponse")
	proto.RegisterType((*Task)(nil), "openpitrix.Task")
	proto.RegisterType((*DescribeTasksRequest)(nil), "openpitrix.DescribeTasksRequest")
	proto.RegisterType((*DescribeTasksResponse)(nil), "openpitrix.DescribeTasksResponse")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_ce5d8dd45b4a91ff) }

var fileDescriptor_ce5d8dd45b4a91ff = []byte{
	// 814 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xcd, 0x8e, 0xe3, 0x44,
	0x10, 0x56, 0xfe, 0x3c, 0x93, 0x32, 0xd9, 0x61, 0x5b, 0xb3, 0x60, 0x45, 0xc3, 0x6e, 0xf0, 0x85,
	0xd5, 0xb2, 0x9b, 0x40, 0x06, 0x24, 0xb4, 0x2b, 0x0e, 0xd9, 0x70, 0x89, 0x10, 0x12, 0xca, 0x2e,
	0x20, 0x71, 0xb1, 0x3a, 0x76, 0xc5, 0xe9, 0x5d, 0xc7, 0x6d, 0xba, 0xdb, 0x93, 0x99, 0x1b, 0x02,
	0x89, 0x07, 0x18, 0x1e, 0x83, 0xc7, 0xe1, 0xca, 0x91, 0xa7, 0xe0, 0x84, 0xba, 0xdb, 0x99, 0x38,
	0x93, 0x19, 0xc6, 0xb9, 0x70, 0xb2, 0x5c, 0xf5, 0x7d, 0x5d, 0x55, 0x5d, 0x5f, 0x55, 0x03, 0x28,
	0x2a, 0xdf, 0xf6, 0x33, 0xc1, 0x15, 0x27, 0xc0, 0x33, 0x4c, 0x33, 0xa6, 0x04, 0x3b, 0xef, 0x3e,
	0x8c, 0x39, 0x8f, 0x13, 0x1c, 0x18, 0xcf, 0x2c, 0x9f, 0x0f, 0x56, 0x82, 0x66, 0x19, 0x0a, 0x69,
	0xb1, 0xdd, 0x47, 0xd7, 0xfd, 0x8a, 0x2d, 0x51, 0x2a, 0xba, 0xcc, 0x0a, 0xc0, 0x49, 0x01, 0xa0,
	0x19, 0x1b, 0xd0, 0x34, 0xe5, 0x8a, 0x2a, 0xc6, 0xd3, 0x35, 0xfd, 0xa9, 0xf9, 0x84, 0xcf, 0x62,
	0x4c, 0x9f, 0xc9, 0x15, 0x8d, 0x63, 0x14, 0x03, 0x9e, 0x19, 0xc4, 0x2e, 0xda, 0xff, 0xa3, 0x01,
	0xf7, 0xc7, 0x02, 0xa9, 0xc2, 0xd7, 0x54, 0xbe, 0x9d, 0xe2, 0x4f, 0x39, 0x4a, 0x45, 0x4e, 0xc1,
	0x79, 0xc3, 0x67, 0x01, 0x8b, 0xbc, 0x5a, 0xaf, 0xf6, 0xd8, 0x1d, 0x9e, 0xf4, 0x6d, 0xc8, 0xfe,
	0x3a, 0xa7, 0xfe, 0x2b, 0x25, 0x58, 0x1a, 0x7f, 0x4f, 0x93, 0x1c, 0xa7, 0xad, 0x37, 0x7c, 0x36,
	0x89, 0xc8, 0xe7, 0x70, 0x90, 0xf2, 0x08, 0x35, 0xab, 0x5e, 0x81, 0xe5, 0x68, 0xf0, 0x24, 0x22,
	0x9f, 0x81, 0xa3, 0xa8, 0x88, 0x51, 0x79, 0x8d, 0x2a, 0x2c, 0x8b, 0x25, 0x5f, 0x82, 0xab, 0xaf,
	0x37, 0xa0, 0xa1, 0xae, 0xc6, 0x6b, 0x56, 0xa0, 0x9a, 0x7e, 0x8c, 0x0c, 0x9e, 0x3c, 0x87, 0x76,
	0xc4, 0x04, 0x86, 0x8a, 0x9d, 0xa1, 0xd7, 0xaa, 0x40, 0xde, 0xc0, 0xc9, 0x18, 0x8e, 0xe6, 0x94,
	0x25, 0xb9, 0xc0, 0x80, 0x26, 0x09, 0x5f, 0x61, 0xe4, 0x39, 0xe6, 0x84, 0xee, 0xce, 0x09, 0x2f,
	0x39, 0x4f, 0x2c, 0xff, 0x5e, 0x41, 0x19, 0x59, 0x86, 0xae, 0x5a, 0x2a, 0xaa, 0x72, 0xe9, 0x1d,
	0x54, 0xa9, 0xda, 0x62, 0xfd, 0x9f, 0x6b, 0x40, 0xca, 0xdd, 0x92, 0x19, 0x4f, 0x25, 0xea, 0x9b,
	0x37, 0x97, 0x51, 0xb1, 0x5f, 0x8e, 0x06, 0x4f, 0xa2, 0x52, 0x97, 0xeb, 0x95, 0xbb, 0xec, 0x3f,
	0x85, 0xfb, 0x53, 0x54, 0xe2, 0x42, 0x27, 0x20, 0xd7, 0x7a, 0x79, 0xbf, 0x9c, 0x40, 0xe3, 0x71,
	0x7b, 0x1d, 0xc2, 0x1f, 0x01, 0x29, 0xa3, 0x8b, 0x7c, 0x3f, 0x86, 0x43, 0x03, 0x97, 0xa8, 0x0c,
	0xde, 0x1d, 0xbe, 0xdb, 0xdf, 0x0c, 0x48, 0xdf, 0xd4, 0x66, 0x0e, 0x7c, 0x85, 0xca, 0xff, 0xd5,
	0x81, 0xa6, 0xb6, 0xfc, 0x9f, 0x55, 0x5e, 0x97, 0x57, 0x63, 0x4f, 0x79, 0x6d, 0xba, 0xdb, 0xac,
	0xde, 0x5d, 0xf2, 0x02, 0x00, 0x85, 0xe0, 0x22, 0x08, 0x79, 0x74, 0xbb, 0x2a, 0xbf, 0x9b, 0xa4,
	0xea, 0x74, 0x58, 0xa8, 0xd2, 0xe0, 0xc7, 0x3c, 0xc2, 0x6d, 0x45, 0x3b, 0xfb, 0x29, 0xfa, 0x0b,
	0x38, 0xc4, 0x73, 0x0c, 0x73, 0xc5, 0x45, 0x25, 0x39, 0x5e, 0xa1, 0x75, 0xca, 0x7c, 0x95, 0xa2,
	0x08, 0x32, 0xaa, 0x16, 0xde, 0x61, 0x95, 0xb0, 0x06, 0xff, 0x2d, 0x55, 0x8b, 0xd2, 0xe4, 0xb7,
	0xf7, 0x98, 0xfc, 0xd2, 0x9a, 0x81, 0x3d, 0xd6, 0xcc, 0x0b, 0x70, 0x43, 0x33, 0x39, 0x81, 0x5e,
	0xa7, 0x9e, 0x7b, 0xcb, 0xc4, 0xbe, 0x5e, 0xef, 0xda, 0x29, 0x58, 0xb8, 0x36, 0x68, 0xb2, 0xed,
	0x91, 0x25, 0xbf, 0x73, 0x37, 0xd9, 0xc2, 0x0d, 0xf9, 0x86, 0x7d, 0xd1, 0xd9, 0x77, 0x5f, 0xf8,
	0xff, 0xd4, 0xe1, 0xf8, 0x2b, 0x94, 0xa1, 0x60, 0x33, 0xac, 0x34, 0x7a, 0xe4, 0x41, 0x49, 0xf7,
	0xda, 0x5e, 0x28, 0xbb, 0xdc, 0xeb, 0xc6, 0x5e, 0xbd, 0xde, 0xb4, 0xab, 0xb9, 0x47, 0xbb, 0xde,
	0xbb, 0x1a, 0x85, 0x96, 0x4d, 0xaf, 0x10, 0xfb, 0x31, 0xb4, 0x12, 0xb6, 0x64, 0xca, 0x68, 0xb5,
	0x33, 0xb5, 0x3f, 0x1a, 0xcd, 0xe7, 0x73, 0xbd, 0x17, 0x0e, 0x8c, 0xb9, 0xf8, 0xd3, 0xf3, 0x28,
	0x91, 0x8a, 0x70, 0x11, 0xac, 0xb8, 0x88, 0x2a, 0x09, 0x0d, 0x2c, 0xe1, 0x07, 0x2e, 0x22, 0x1d,
	0xcc, 0xc8, 0xce, 0x6b, 0xdb, 0xab, 0x30, 0x3f, 0xe4, 0x23, 0x38, 0x8a, 0x98, 0xcc, 0x12, 0x7a,
	0x11, 0x84, 0x3c, 0xc9, 0x97, 0xa9, 0xf4, 0xc0, 0xf8, 0xef, 0x15, 0xe6, 0xb1, 0xb5, 0xfa, 0x08,
	0x0f, 0xae, 0xdd, 0x7d, 0xb1, 0xc8, 0x1e, 0x81, 0xab, 0xb8, 0xa2, 0x49, 0x10, 0xf2, 0x3c, 0x55,
	0x66, 0x2d, 0x75, 0xa6, 0x60, 0x4c, 0x63, 0x6d, 0xd9, 0xda, 0x74, 0xf5, 0x3b, 0x36, 0xdd, 0xf0,
	0xaf, 0x3a, 0xb8, 0xda, 0xf2, 0x0d, 0x4d, 0x69, 0x8c, 0x82, 0x7c, 0x0d, 0xb0, 0x59, 0xf6, 0xe4,
	0x83, 0x32, 0x71, 0xe7, 0xc9, 0xee, 0x3e, 0xbc, 0xcd, 0x5d, 0xa4, 0xfa, 0x5b, 0x0d, 0x3a, 0x5b,
	0x45, 0x90, 0x5e, 0x99, 0x71, 0x93, 0xb6, 0xba, 0x1f, 0xfe, 0x07, 0xc2, 0x1e, 0xeb, 0x7f, 0x72,
	0x39, 0x3a, 0x21, 0xdd, 0xa8, 0xf0, 0xf5, 0x74, 0x29, 0xb2, 0xb7, 0x62, 0x6a, 0xd1, 0x9b, 0xb3,
	0x44, 0xa1, 0xf8, 0xe5, 0xcf, 0xbf, 0x7f, 0xaf, 0xbb, 0xa4, 0x3d, 0x38, 0xfb, 0x74, 0x60, 0x9c,
	0x64, 0x05, 0xb0, 0x79, 0x12, 0xb6, 0xab, 0xda, 0x79, 0x58, 0xb6, 0xab, 0xda, 0x7d, 0x49, 0xfc,
	0x27, 0x97, 0xa3, 0x0e, 0x71, 0x85, 0x76, 0xd8, 0xd8, 0x26, 0xde, 0xb1, 0x7f, 0x74, 0x15, 0x6f,
	0x60, 0x9c, 0xcf, 0x6b, 0x4f, 0x5e, 0x36, 0x7f, 0xac, 0x67, 0xb3, 0x99, 0x63, 0xc4, 0x72, 0xfa,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x28, 0x88, 0x7a, 0x17, 0x9e, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskManagerClient is the client API for TaskManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskManagerClient interface {
	CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error)
	DescribeTasks(ctx context.Context, in *DescribeTasksRequest, opts ...grpc.CallOption) (*DescribeTasksResponse, error)
	RetryTasks(ctx context.Context, in *RetryTasksRequest, opts ...grpc.CallOption) (*RetryTasksResponse, error)
}

type taskManagerClient struct {
	cc *grpc.ClientConn
}

func NewTaskManagerClient(cc *grpc.ClientConn) TaskManagerClient {
	return &taskManagerClient{cc}
}

func (c *taskManagerClient) CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error) {
	out := new(CreateTaskResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.TaskManager/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskManagerClient) DescribeTasks(ctx context.Context, in *DescribeTasksRequest, opts ...grpc.CallOption) (*DescribeTasksResponse, error) {
	out := new(DescribeTasksResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.TaskManager/DescribeTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskManagerClient) RetryTasks(ctx context.Context, in *RetryTasksRequest, opts ...grpc.CallOption) (*RetryTasksResponse, error) {
	out := new(RetryTasksResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.TaskManager/RetryTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskManagerServer is the server API for TaskManager service.
type TaskManagerServer interface {
	CreateTask(context.Context, *CreateTaskRequest) (*CreateTaskResponse, error)
	DescribeTasks(context.Context, *DescribeTasksRequest) (*DescribeTasksResponse, error)
	RetryTasks(context.Context, *RetryTasksRequest) (*RetryTasksResponse, error)
}

func RegisterTaskManagerServer(s *grpc.Server, srv TaskManagerServer) {
	s.RegisterService(&_TaskManager_serviceDesc, srv)
}

func _TaskManager_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskManagerServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.TaskManager/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskManagerServer).CreateTask(ctx, req.(*CreateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskManager_DescribeTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskManagerServer).DescribeTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.TaskManager/DescribeTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskManagerServer).DescribeTasks(ctx, req.(*DescribeTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskManager_RetryTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetryTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskManagerServer).RetryTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.TaskManager/RetryTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskManagerServer).RetryTasks(ctx, req.(*RetryTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.TaskManager",
	HandlerType: (*TaskManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTask",
			Handler:    _TaskManager_CreateTask_Handler,
		},
		{
			MethodName: "DescribeTasks",
			Handler:    _TaskManager_DescribeTasks_Handler,
		},
		{
			MethodName: "RetryTasks",
			Handler:    _TaskManager_RetryTasks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task.proto",
}
