// Code generated by protoc-gen-go. DO NOT EDIT.
// source: frontgate.proto

/*
Package openpitrix_frontgate is a generated protocol buffer package.

It is generated from these files:
	frontgate.proto

It has these top-level messages:
	Info
	SubTaskResult
	ConfdConfig
	ConfdBackendConfig
	GetConfdInfoRequest
	ConfdInfo
	StartConfdRequest
	StopConfdRequest
	RegisterMetadataRequest
	DeregisterMetadataRequest
	RegisterCmdRequest
	DeregisterCmdRequest
	GetSubTaskResultRequest
	Empty
*/
package openpitrix_frontgate

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf1 "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Info struct {
	FrontgateId     string `protobuf:"bytes,1,opt,name=frontgate_id,json=frontgateId" json:"frontgate_id,omitempty"`
	FrontgateNodeId string `protobuf:"bytes,2,opt,name=frontgate_node_id,json=frontgateNodeId" json:"frontgate_node_id,omitempty"`
	FrontgateNodeIp string `protobuf:"bytes,3,opt,name=frontgate_node_ip,json=frontgateNodeIp" json:"frontgate_node_ip,omitempty"`
}

func (m *Info) Reset()                    { *m = Info{} }
func (m *Info) String() string            { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()               {}
func (*Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Info) GetFrontgateId() string {
	if m != nil {
		return m.FrontgateId
	}
	return ""
}

func (m *Info) GetFrontgateNodeId() string {
	if m != nil {
		return m.FrontgateNodeId
	}
	return ""
}

func (m *Info) GetFrontgateNodeIp() string {
	if m != nil {
		return m.FrontgateNodeIp
	}
	return ""
}

type SubTaskResult struct {
	DroneIp   string `protobuf:"bytes,1,opt,name=drone_ip,json=droneIp" json:"drone_ip,omitempty"`
	SubtaskId string `protobuf:"bytes,2,opt,name=subtask_id,json=subtaskId" json:"subtask_id,omitempty"`
	Status    string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *SubTaskResult) Reset()                    { *m = SubTaskResult{} }
func (m *SubTaskResult) String() string            { return proto.CompactTextString(m) }
func (*SubTaskResult) ProtoMessage()               {}
func (*SubTaskResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SubTaskResult) GetDroneIp() string {
	if m != nil {
		return m.DroneIp
	}
	return ""
}

func (m *SubTaskResult) GetSubtaskId() string {
	if m != nil {
		return m.SubtaskId
	}
	return ""
}

func (m *SubTaskResult) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// See https://godoc.org/openpitrix.io/libconfd#Config
type ConfdConfig struct {
	ConfDir  *google_protobuf1.StringValue `protobuf:"bytes,1,opt,name=conf_dir,json=confDir" json:"conf_dir,omitempty"`
	Interval *google_protobuf1.Int32Value  `protobuf:"bytes,2,opt,name=interval" json:"interval,omitempty"`
	Noop     *google_protobuf1.BoolValue   `protobuf:"bytes,3,opt,name=noop" json:"noop,omitempty"`
	Prefix   *google_protobuf1.StringValue `protobuf:"bytes,4,opt,name=prefix" json:"prefix,omitempty"`
	SyncOnly *google_protobuf1.BoolValue   `protobuf:"bytes,5,opt,name=sync_only,json=syncOnly" json:"sync_only,omitempty"`
	LogLevel *google_protobuf1.StringValue `protobuf:"bytes,6,opt,name=log_level,json=logLevel" json:"log_level,omitempty"`
}

func (m *ConfdConfig) Reset()                    { *m = ConfdConfig{} }
func (m *ConfdConfig) String() string            { return proto.CompactTextString(m) }
func (*ConfdConfig) ProtoMessage()               {}
func (*ConfdConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ConfdConfig) GetConfDir() *google_protobuf1.StringValue {
	if m != nil {
		return m.ConfDir
	}
	return nil
}

func (m *ConfdConfig) GetInterval() *google_protobuf1.Int32Value {
	if m != nil {
		return m.Interval
	}
	return nil
}

func (m *ConfdConfig) GetNoop() *google_protobuf1.BoolValue {
	if m != nil {
		return m.Noop
	}
	return nil
}

func (m *ConfdConfig) GetPrefix() *google_protobuf1.StringValue {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *ConfdConfig) GetSyncOnly() *google_protobuf1.BoolValue {
	if m != nil {
		return m.SyncOnly
	}
	return nil
}

func (m *ConfdConfig) GetLogLevel() *google_protobuf1.StringValue {
	if m != nil {
		return m.LogLevel
	}
	return nil
}

// See https://godoc.org/openpitrix.io/libconfd#BackendConfig
type ConfdBackendConfig struct {
	Type         *google_protobuf1.StringValue `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Host         []string                      `protobuf:"bytes,2,rep,name=host" json:"host,omitempty"`
	Username     *google_protobuf1.StringValue `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	Password     *google_protobuf1.StringValue `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	ClientCaKeys *google_protobuf1.StringValue `protobuf:"bytes,5,opt,name=client_ca_keys,json=clientCaKeys" json:"client_ca_keys,omitempty"`
	ClientCert   *google_protobuf1.StringValue `protobuf:"bytes,6,opt,name=client_cert,json=clientCert" json:"client_cert,omitempty"`
	ClientKey    *google_protobuf1.StringValue `protobuf:"bytes,7,opt,name=client_key,json=clientKey" json:"client_key,omitempty"`
}

func (m *ConfdBackendConfig) Reset()                    { *m = ConfdBackendConfig{} }
func (m *ConfdBackendConfig) String() string            { return proto.CompactTextString(m) }
func (*ConfdBackendConfig) ProtoMessage()               {}
func (*ConfdBackendConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ConfdBackendConfig) GetType() *google_protobuf1.StringValue {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ConfdBackendConfig) GetHost() []string {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *ConfdBackendConfig) GetUsername() *google_protobuf1.StringValue {
	if m != nil {
		return m.Username
	}
	return nil
}

func (m *ConfdBackendConfig) GetPassword() *google_protobuf1.StringValue {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *ConfdBackendConfig) GetClientCaKeys() *google_protobuf1.StringValue {
	if m != nil {
		return m.ClientCaKeys
	}
	return nil
}

func (m *ConfdBackendConfig) GetClientCert() *google_protobuf1.StringValue {
	if m != nil {
		return m.ClientCert
	}
	return nil
}

func (m *ConfdBackendConfig) GetClientKey() *google_protobuf1.StringValue {
	if m != nil {
		return m.ClientKey
	}
	return nil
}

type GetConfdInfoRequest struct {
	DroneIp string `protobuf:"bytes,1,opt,name=drone_ip,json=droneIp" json:"drone_ip,omitempty"`
}

func (m *GetConfdInfoRequest) Reset()                    { *m = GetConfdInfoRequest{} }
func (m *GetConfdInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetConfdInfoRequest) ProtoMessage()               {}
func (*GetConfdInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetConfdInfoRequest) GetDroneIp() string {
	if m != nil {
		return m.DroneIp
	}
	return ""
}

type ConfdInfo struct {
	DroneIp string `protobuf:"bytes,1,opt,name=drone_ip,json=droneIp" json:"drone_ip,omitempty"`
	Status  string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *ConfdInfo) Reset()                    { *m = ConfdInfo{} }
func (m *ConfdInfo) String() string            { return proto.CompactTextString(m) }
func (*ConfdInfo) ProtoMessage()               {}
func (*ConfdInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ConfdInfo) GetDroneIp() string {
	if m != nil {
		return m.DroneIp
	}
	return ""
}

func (m *ConfdInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type StartConfdRequest struct {
	DroneIp            string              `protobuf:"bytes,1,opt,name=drone_ip,json=droneIp" json:"drone_ip,omitempty"`
	TimeoutSecond      int32               `protobuf:"varint,2,opt,name=timeout_second,json=timeoutSecond" json:"timeout_second,omitempty"`
	ConfdConfig        *ConfdConfig        `protobuf:"bytes,3,opt,name=confd_config,json=confdConfig" json:"confd_config,omitempty"`
	ConfdBackendConfig *ConfdBackendConfig `protobuf:"bytes,4,opt,name=confd_backend_config,json=confdBackendConfig" json:"confd_backend_config,omitempty"`
}

func (m *StartConfdRequest) Reset()                    { *m = StartConfdRequest{} }
func (m *StartConfdRequest) String() string            { return proto.CompactTextString(m) }
func (*StartConfdRequest) ProtoMessage()               {}
func (*StartConfdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *StartConfdRequest) GetDroneIp() string {
	if m != nil {
		return m.DroneIp
	}
	return ""
}

func (m *StartConfdRequest) GetTimeoutSecond() int32 {
	if m != nil {
		return m.TimeoutSecond
	}
	return 0
}

func (m *StartConfdRequest) GetConfdConfig() *ConfdConfig {
	if m != nil {
		return m.ConfdConfig
	}
	return nil
}

func (m *StartConfdRequest) GetConfdBackendConfig() *ConfdBackendConfig {
	if m != nil {
		return m.ConfdBackendConfig
	}
	return nil
}

type StopConfdRequest struct {
	DroneIp       string `protobuf:"bytes,1,opt,name=drone_ip,json=droneIp" json:"drone_ip,omitempty"`
	TimeoutSecond int32  `protobuf:"varint,2,opt,name=timeout_second,json=timeoutSecond" json:"timeout_second,omitempty"`
}

func (m *StopConfdRequest) Reset()                    { *m = StopConfdRequest{} }
func (m *StopConfdRequest) String() string            { return proto.CompactTextString(m) }
func (*StopConfdRequest) ProtoMessage()               {}
func (*StopConfdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *StopConfdRequest) GetDroneIp() string {
	if m != nil {
		return m.DroneIp
	}
	return ""
}

func (m *StopConfdRequest) GetTimeoutSecond() int32 {
	if m != nil {
		return m.TimeoutSecond
	}
	return 0
}

type RegisterMetadataRequest struct {
	DroneIp       string `protobuf:"bytes,1,opt,name=drone_ip,json=droneIp" json:"drone_ip,omitempty"`
	FrontgateId   string `protobuf:"bytes,2,opt,name=frontgate_id,json=frontgateId" json:"frontgate_id,omitempty"`
	SubtaskId     string `protobuf:"bytes,3,opt,name=subtask_id,json=subtaskId" json:"subtask_id,omitempty"`
	TimeoutSecond int32  `protobuf:"varint,4,opt,name=timeout_second,json=timeoutSecond" json:"timeout_second,omitempty"`
	Retry         int32  `protobuf:"varint,5,opt,name=retry" json:"retry,omitempty"`
}

func (m *RegisterMetadataRequest) Reset()                    { *m = RegisterMetadataRequest{} }
func (m *RegisterMetadataRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterMetadataRequest) ProtoMessage()               {}
func (*RegisterMetadataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RegisterMetadataRequest) GetDroneIp() string {
	if m != nil {
		return m.DroneIp
	}
	return ""
}

func (m *RegisterMetadataRequest) GetFrontgateId() string {
	if m != nil {
		return m.FrontgateId
	}
	return ""
}

func (m *RegisterMetadataRequest) GetSubtaskId() string {
	if m != nil {
		return m.SubtaskId
	}
	return ""
}

func (m *RegisterMetadataRequest) GetTimeoutSecond() int32 {
	if m != nil {
		return m.TimeoutSecond
	}
	return 0
}

func (m *RegisterMetadataRequest) GetRetry() int32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

type DeregisterMetadataRequest struct {
	DroneIp       string `protobuf:"bytes,1,opt,name=drone_ip,json=droneIp" json:"drone_ip,omitempty"`
	FrontgateId   string `protobuf:"bytes,2,opt,name=frontgate_id,json=frontgateId" json:"frontgate_id,omitempty"`
	SubtaskId     string `protobuf:"bytes,3,opt,name=subtask_id,json=subtaskId" json:"subtask_id,omitempty"`
	TimeoutSecond int32  `protobuf:"varint,4,opt,name=timeout_second,json=timeoutSecond" json:"timeout_second,omitempty"`
	Retry         int32  `protobuf:"varint,5,opt,name=retry" json:"retry,omitempty"`
}

func (m *DeregisterMetadataRequest) Reset()                    { *m = DeregisterMetadataRequest{} }
func (m *DeregisterMetadataRequest) String() string            { return proto.CompactTextString(m) }
func (*DeregisterMetadataRequest) ProtoMessage()               {}
func (*DeregisterMetadataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeregisterMetadataRequest) GetDroneIp() string {
	if m != nil {
		return m.DroneIp
	}
	return ""
}

func (m *DeregisterMetadataRequest) GetFrontgateId() string {
	if m != nil {
		return m.FrontgateId
	}
	return ""
}

func (m *DeregisterMetadataRequest) GetSubtaskId() string {
	if m != nil {
		return m.SubtaskId
	}
	return ""
}

func (m *DeregisterMetadataRequest) GetTimeoutSecond() int32 {
	if m != nil {
		return m.TimeoutSecond
	}
	return 0
}

func (m *DeregisterMetadataRequest) GetRetry() int32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

type RegisterCmdRequest struct {
	DroneIp       string `protobuf:"bytes,1,opt,name=drone_ip,json=droneIp" json:"drone_ip,omitempty"`
	FrontgateId   string `protobuf:"bytes,2,opt,name=frontgate_id,json=frontgateId" json:"frontgate_id,omitempty"`
	SubtaskId     string `protobuf:"bytes,3,opt,name=subtask_id,json=subtaskId" json:"subtask_id,omitempty"`
	TimeoutSecond int32  `protobuf:"varint,4,opt,name=timeout_second,json=timeoutSecond" json:"timeout_second,omitempty"`
	Retry         int32  `protobuf:"varint,5,opt,name=retry" json:"retry,omitempty"`
}

func (m *RegisterCmdRequest) Reset()                    { *m = RegisterCmdRequest{} }
func (m *RegisterCmdRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterCmdRequest) ProtoMessage()               {}
func (*RegisterCmdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RegisterCmdRequest) GetDroneIp() string {
	if m != nil {
		return m.DroneIp
	}
	return ""
}

func (m *RegisterCmdRequest) GetFrontgateId() string {
	if m != nil {
		return m.FrontgateId
	}
	return ""
}

func (m *RegisterCmdRequest) GetSubtaskId() string {
	if m != nil {
		return m.SubtaskId
	}
	return ""
}

func (m *RegisterCmdRequest) GetTimeoutSecond() int32 {
	if m != nil {
		return m.TimeoutSecond
	}
	return 0
}

func (m *RegisterCmdRequest) GetRetry() int32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

type DeregisterCmdRequest struct {
	DroneIp       string `protobuf:"bytes,1,opt,name=drone_ip,json=droneIp" json:"drone_ip,omitempty"`
	FrontgateId   string `protobuf:"bytes,2,opt,name=frontgate_id,json=frontgateId" json:"frontgate_id,omitempty"`
	SubtaskId     string `protobuf:"bytes,3,opt,name=subtask_id,json=subtaskId" json:"subtask_id,omitempty"`
	TimeoutSecond int32  `protobuf:"varint,4,opt,name=timeout_second,json=timeoutSecond" json:"timeout_second,omitempty"`
	Retry         int32  `protobuf:"varint,5,opt,name=retry" json:"retry,omitempty"`
}

func (m *DeregisterCmdRequest) Reset()                    { *m = DeregisterCmdRequest{} }
func (m *DeregisterCmdRequest) String() string            { return proto.CompactTextString(m) }
func (*DeregisterCmdRequest) ProtoMessage()               {}
func (*DeregisterCmdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeregisterCmdRequest) GetDroneIp() string {
	if m != nil {
		return m.DroneIp
	}
	return ""
}

func (m *DeregisterCmdRequest) GetFrontgateId() string {
	if m != nil {
		return m.FrontgateId
	}
	return ""
}

func (m *DeregisterCmdRequest) GetSubtaskId() string {
	if m != nil {
		return m.SubtaskId
	}
	return ""
}

func (m *DeregisterCmdRequest) GetTimeoutSecond() int32 {
	if m != nil {
		return m.TimeoutSecond
	}
	return 0
}

func (m *DeregisterCmdRequest) GetRetry() int32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

type GetSubTaskResultRequest struct {
	DroneIp   string `protobuf:"bytes,1,opt,name=drone_ip,json=droneIp" json:"drone_ip,omitempty"`
	SubtaskId string `protobuf:"bytes,2,opt,name=subtask_id,json=subtaskId" json:"subtask_id,omitempty"`
}

func (m *GetSubTaskResultRequest) Reset()                    { *m = GetSubTaskResultRequest{} }
func (m *GetSubTaskResultRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSubTaskResultRequest) ProtoMessage()               {}
func (*GetSubTaskResultRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GetSubTaskResultRequest) GetDroneIp() string {
	if m != nil {
		return m.DroneIp
	}
	return ""
}

func (m *GetSubTaskResultRequest) GetSubtaskId() string {
	if m != nil {
		return m.SubtaskId
	}
	return ""
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func init() {
	proto.RegisterType((*Info)(nil), "openpitrix.frontgate.Info")
	proto.RegisterType((*SubTaskResult)(nil), "openpitrix.frontgate.SubTaskResult")
	proto.RegisterType((*ConfdConfig)(nil), "openpitrix.frontgate.ConfdConfig")
	proto.RegisterType((*ConfdBackendConfig)(nil), "openpitrix.frontgate.ConfdBackendConfig")
	proto.RegisterType((*GetConfdInfoRequest)(nil), "openpitrix.frontgate.GetConfdInfoRequest")
	proto.RegisterType((*ConfdInfo)(nil), "openpitrix.frontgate.ConfdInfo")
	proto.RegisterType((*StartConfdRequest)(nil), "openpitrix.frontgate.StartConfdRequest")
	proto.RegisterType((*StopConfdRequest)(nil), "openpitrix.frontgate.StopConfdRequest")
	proto.RegisterType((*RegisterMetadataRequest)(nil), "openpitrix.frontgate.RegisterMetadataRequest")
	proto.RegisterType((*DeregisterMetadataRequest)(nil), "openpitrix.frontgate.DeregisterMetadataRequest")
	proto.RegisterType((*RegisterCmdRequest)(nil), "openpitrix.frontgate.RegisterCmdRequest")
	proto.RegisterType((*DeregisterCmdRequest)(nil), "openpitrix.frontgate.DeregisterCmdRequest")
	proto.RegisterType((*GetSubTaskResultRequest)(nil), "openpitrix.frontgate.GetSubTaskResultRequest")
	proto.RegisterType((*Empty)(nil), "openpitrix.frontgate.Empty")
}

func init() { proto.RegisterFile("frontgate.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 901 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0x5d, 0x8f, 0xdb, 0x44,
	0x14, 0x55, 0xb2, 0xc9, 0x26, 0xb9, 0xc9, 0x96, 0xed, 0xed, 0x8a, 0xa6, 0x29, 0xd0, 0xd6, 0x08,
	0x58, 0x2a, 0x91, 0xad, 0x52, 0xa4, 0x82, 0x10, 0x3c, 0x6c, 0x16, 0x96, 0xa8, 0x7c, 0xc9, 0x59,
	0x01, 0xea, 0x03, 0xd1, 0xc4, 0xbe, 0x49, 0xad, 0x75, 0x66, 0xcc, 0xcc, 0x78, 0x5b, 0x3f, 0xf2,
	0x07, 0xf8, 0x29, 0x08, 0x09, 0xf1, 0x5b, 0x10, 0xbf, 0x84, 0x57, 0xe4, 0xb1, 0x93, 0x6c, 0x12,
	0xc7, 0xf1, 0x03, 0x0f, 0xf4, 0x65, 0xb5, 0x9e, 0x39, 0xe7, 0xdc, 0x3b, 0xd7, 0x73, 0x8e, 0x03,
	0xaf, 0x4d, 0xa4, 0xe0, 0x7a, 0xca, 0x34, 0x75, 0x03, 0x29, 0xb4, 0xc0, 0x23, 0x11, 0x10, 0x0f,
	0x3c, 0x2d, 0xbd, 0x97, 0xdd, 0xc5, 0x5e, 0xe7, 0xde, 0x54, 0x88, 0xa9, 0x4f, 0x27, 0x06, 0x33,
	0x0e, 0x27, 0x27, 0xda, 0x9b, 0x91, 0xd2, 0x6c, 0x16, 0x24, 0xb4, 0xce, 0x5b, 0xeb, 0x80, 0x17,
	0x92, 0x05, 0x01, 0x49, 0x95, 0xec, 0x5b, 0xbf, 0x94, 0xa0, 0x32, 0xe0, 0x13, 0x81, 0x0f, 0xa0,
	0xb5, 0x90, 0x1d, 0x79, 0x6e, 0xbb, 0x74, 0xbf, 0x74, 0xdc, 0xb0, 0x9b, 0x8b, 0xb5, 0x81, 0x8b,
	0x0f, 0xe1, 0xe6, 0x12, 0xc2, 0x85, 0x6b, 0x70, 0x65, 0x83, 0x5b, 0xb6, 0xfb, 0x8d, 0x70, 0xb7,
	0x60, 0x83, 0xf6, 0x5e, 0x16, 0x36, 0xb0, 0x18, 0x1c, 0x0c, 0xc3, 0xf1, 0x05, 0x53, 0x97, 0x36,
	0xa9, 0xd0, 0xd7, 0x78, 0x07, 0xea, 0xae, 0x14, 0xdc, 0x70, 0x92, 0x3e, 0x6a, 0xe6, 0x79, 0x10,
	0xe0, 0x9b, 0x00, 0x2a, 0x1c, 0x6b, 0xa6, 0x2e, 0x97, 0xc5, 0x1b, 0xe9, 0xca, 0xc0, 0xc5, 0xd7,
	0x61, 0x5f, 0x69, 0xa6, 0x43, 0x95, 0xd6, 0x4a, 0x9f, 0xac, 0xbf, 0xcb, 0xd0, 0xec, 0x0b, 0x3e,
	0x71, 0xe3, 0x3f, 0xde, 0x14, 0x9f, 0x40, 0xdd, 0x11, 0x7c, 0x32, 0x72, 0x3d, 0x69, 0x2a, 0x34,
	0x7b, 0x6f, 0x74, 0x93, 0x49, 0x75, 0xe7, 0x93, 0xea, 0x0e, 0xb5, 0xf4, 0xf8, 0xf4, 0x7b, 0xe6,
	0x87, 0x64, 0xd7, 0x62, 0xf4, 0x99, 0x27, 0x63, 0xa2, 0xc7, 0x35, 0xc9, 0x2b, 0xe6, 0x9b, 0xea,
	0xcd, 0xde, 0xdd, 0x0d, 0xe2, 0x80, 0xeb, 0xc7, 0xbd, 0x84, 0xb7, 0x00, 0x63, 0x17, 0x2a, 0x5c,
	0x88, 0x64, 0x06, 0xcd, 0x5e, 0x67, 0x83, 0x74, 0x2a, 0x84, 0x9f, 0x70, 0x0c, 0x0e, 0x3f, 0x84,
	0xfd, 0x40, 0xd2, 0xc4, 0x7b, 0xd9, 0xae, 0x14, 0xe8, 0x2f, 0xc5, 0xe2, 0x13, 0x68, 0xa8, 0x88,
	0x3b, 0x23, 0xc1, 0xfd, 0xa8, 0x5d, 0xdd, 0x59, 0xaa, 0x1e, 0x83, 0xbf, 0xe5, 0x7e, 0x84, 0x1f,
	0x43, 0xc3, 0x17, 0xd3, 0x91, 0x4f, 0x57, 0xe4, 0xb7, 0xf7, 0x0b, 0x54, 0xac, 0xfb, 0x62, 0xfa,
	0x55, 0x8c, 0xb6, 0x7e, 0xdd, 0x03, 0x34, 0xb3, 0x3d, 0x65, 0xce, 0x25, 0xf1, 0xf9, 0x88, 0x1f,
	0x41, 0x45, 0x47, 0x01, 0x15, 0x1a, 0xaf, 0x41, 0x22, 0x42, 0xe5, 0xb9, 0x50, 0xba, 0x5d, 0xbe,
	0xbf, 0x77, 0xdc, 0xb0, 0xcd, 0xff, 0xf8, 0x11, 0xd4, 0x43, 0x45, 0x92, 0xb3, 0x19, 0xa5, 0xa3,
	0xdb, 0xd1, 0xd6, 0x1c, 0x1d, 0x33, 0x03, 0xa6, 0xd4, 0x0b, 0x21, 0xdd, 0x42, 0x23, 0x5c, 0xa0,
	0xf1, 0x14, 0x6e, 0x38, 0xbe, 0x47, 0x5c, 0x8f, 0x1c, 0x36, 0xba, 0xa4, 0x48, 0xa5, 0x93, 0xcc,
	0xe7, 0xb7, 0x12, 0x4e, 0x9f, 0x3d, 0xa5, 0x48, 0xe1, 0xa7, 0xd0, 0x9c, 0x6b, 0x90, 0xd4, 0x85,
	0x26, 0x0a, 0xa9, 0x00, 0x49, 0x8d, 0x9f, 0x40, 0xfa, 0x14, 0xd7, 0x6f, 0xd7, 0x0a, 0xb0, 0x1b,
	0x09, 0xfe, 0x29, 0x45, 0xd6, 0x23, 0xb8, 0x75, 0x4e, 0xda, 0xbc, 0x92, 0xd8, 0xda, 0x36, 0xfd,
	0x1c, 0x92, 0xca, 0x73, 0x95, 0xf5, 0x19, 0x34, 0x16, 0xf0, 0x3c, 0xf7, 0x2d, 0xed, 0x55, 0x5e,
	0xb1, 0xd7, 0x3f, 0x25, 0xb8, 0x39, 0xd4, 0x4c, 0x26, 0x45, 0x77, 0x17, 0xc4, 0x77, 0xe0, 0x46,
	0x9c, 0x54, 0x22, 0xd4, 0x23, 0x45, 0x8e, 0xe0, 0x89, 0x95, 0xab, 0xf6, 0x41, 0xba, 0x3a, 0x34,
	0x8b, 0x78, 0x06, 0xad, 0xd8, 0x78, 0xee, 0xc8, 0x31, 0x77, 0x2a, 0xbd, 0x01, 0x0f, 0xba, 0x59,
	0x59, 0xd8, 0xbd, 0xe6, 0x6f, 0xbb, 0xe9, 0x5c, 0x33, 0xfb, 0x33, 0x38, 0x4a, 0x54, 0xc6, 0xc9,
	0x05, 0x9d, 0xab, 0x25, 0xb7, 0xe2, 0x38, 0x47, 0x6d, 0xe5, 0x46, 0xdb, 0xe8, 0x6c, 0xac, 0x59,
	0x17, 0x70, 0x38, 0xd4, 0x22, 0xf8, 0x6f, 0xcf, 0x6d, 0xfd, 0x51, 0x82, 0xdb, 0x36, 0x4d, 0x3d,
	0xa5, 0x49, 0x7e, 0x4d, 0x9a, 0xb9, 0x4c, 0xb3, 0x02, 0xea, 0xeb, 0x19, 0x5e, 0xde, 0xcc, 0xf0,
	0xd5, 0xfc, 0xdc, 0x5b, 0xcf, 0xcf, 0xcd, 0xfe, 0x2a, 0x59, 0xef, 0xe5, 0x08, 0xaa, 0x92, 0xb4,
	0x4c, 0x22, 0xa6, 0x6a, 0x27, 0x0f, 0xd6, 0x9f, 0x25, 0xb8, 0x73, 0x46, 0xf2, 0x95, 0xeb, 0xfb,
	0xb7, 0x12, 0xe0, 0x7c, 0xda, 0xfd, 0x99, 0xfb, 0xff, 0x6f, 0xf8, 0xf7, 0x12, 0x1c, 0x2d, 0x07,
	0xfd, 0x4a, 0xb4, 0x3c, 0x84, 0xdb, 0xe7, 0xa4, 0x57, 0x3e, 0xf3, 0x05, 0x9a, 0xce, 0xff, 0xda,
	0x5b, 0x35, 0xa8, 0x7e, 0x3e, 0x0b, 0x74, 0xd4, 0xfb, 0xab, 0x06, 0x87, 0x5f, 0xcc, 0x4f, 0x32,
	0x24, 0x79, 0xe5, 0x39, 0x84, 0x5f, 0x42, 0xab, 0xef, 0x0b, 0x45, 0xfd, 0xe7, 0x8c, 0x73, 0xf2,
	0xf1, 0x6e, 0xb6, 0xd1, 0x8d, 0x42, 0x27, 0x6f, 0x13, 0x4f, 0xa1, 0x76, 0x4e, 0xda, 0x84, 0x63,
	0xae, 0x48, 0x27, 0x7b, 0xd3, 0x10, 0x9f, 0x41, 0xeb, 0x7a, 0x28, 0xe3, 0xfb, 0xd9, 0xd8, 0x8c,
	0xe0, 0xee, 0xdc, 0xcb, 0x49, 0x28, 0xa3, 0x65, 0x03, 0x2c, 0xd3, 0x17, 0xdf, 0xcb, 0x86, 0x6f,
	0xe4, 0x73, 0xfe, 0x99, 0xbf, 0x83, 0xc6, 0x22, 0xd8, 0xf0, 0xdd, 0x6d, 0x92, 0xab, 0xc9, 0x97,
	0xaf, 0xf8, 0x13, 0x1c, 0xae, 0x67, 0x1a, 0x7e, 0x90, 0x4d, 0xd8, 0x92, 0x7d, 0xf9, 0xfa, 0x63,
	0xc0, 0xcd, 0xf4, 0xc1, 0x93, 0x6c, 0xca, 0xd6, 0x9c, 0xca, 0xaf, 0x71, 0x01, 0xcd, 0x6b, 0x49,
	0x81, 0xc7, 0xf9, 0xed, 0x2f, 0x9d, 0x99, 0xaf, 0xfa, 0x23, 0x1c, 0xac, 0xd8, 0x19, 0x1f, 0xee,
	0x6a, 0xba, 0xa8, 0xf2, 0x04, 0x0e, 0xd7, 0x6d, 0xb7, 0x6d, 0xe6, 0x5b, 0xec, 0xd9, 0x79, 0x7b,
	0xcb, 0xbb, 0x5f, 0xd1, 0xfc, 0x01, 0x6e, 0xd9, 0x14, 0x08, 0xb9, 0x56, 0xaa, 0x08, 0x37, 0xf7,
	0x00, 0xe3, 0x7d, 0xf3, 0x63, 0xe7, 0xf1, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0b, 0xce, 0x74,
	0xcb, 0x10, 0x0d, 0x00, 0x00,
}
