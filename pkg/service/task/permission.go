// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

// Auto generated by 'go run gen_helper.go', DO NOT EDIT.

package task

import (
	"context"

	"openpitrix.io/openpitrix/pkg/constants"
	"openpitrix.io/openpitrix/pkg/db"
	"openpitrix.io/openpitrix/pkg/gerr"
	"openpitrix.io/openpitrix/pkg/models"
	"openpitrix.io/openpitrix/pkg/pi"
	"openpitrix.io/openpitrix/pkg/util/senderutil"
)

func CheckTaskPermission(ctx context.Context, resourceId ...string) ([]*models.Task, error) {
	if len(resourceId) == 0 {
		return nil, nil
	}
	var sender = senderutil.GetSenderFromContext(ctx)
	var tasks []*models.Task
	_, err := pi.Global().DB(ctx).
		Select(models.TaskColumns...).
		From(constants.TableTask).
		Where(db.Eq(constants.ColumnTaskId, resourceId)).Load(&tasks)
	if err != nil {
		return nil, gerr.NewWithDetail(ctx, gerr.Internal, err, gerr.ErrorInternalError)
	}
	if len(tasks) != len(resourceId) {
		return nil, gerr.New(ctx, gerr.PermissionDenied, gerr.ErrorResourcesAccessDenied)
	}
	if sender != nil && !sender.IsGlobalAdmin() {
		for _, task := range tasks {
			if task.Owner != sender.UserId {
				return nil, gerr.New(ctx, gerr.PermissionDenied, gerr.ErrorResourceAccessDenied, task.TaskId)
			}
		}
	}
	return tasks, nil
}
