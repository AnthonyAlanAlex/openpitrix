// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app.proto

/*
Package openpitrix is a generated protocol buffer package.

It is generated from these files:
	app.proto
	app_runtime.proto
	cluster.proto
	repo.proto

It has these top-level messages:
	App
	AppId
	AppListRequest
	AppListResponse
	AppRuntime
	AppRuntimeLabel
	AppRuntimeId
	AppRuntimeListRequest
	AppRuntimeListResponse
	Cluster
	ClusterNode
	ClusterId
	ClusterListRequest
	ClusterListResponse
	Repo
	RepoLabel
	RepoSelector
	RepoId
	RepoListRequest
	RepoListResponse
*/
package openpitrix

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf3 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type App struct {
	Id               *string                     `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Name             *string                     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description      *string                     `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	RepoId           *string                     `protobuf:"bytes,4,opt,name=repo_id,json=repoId" json:"repo_id,omitempty"`
	Created          *google_protobuf3.Timestamp `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	LastModified     *google_protobuf3.Timestamp `protobuf:"bytes,6,opt,name=last_modified,json=lastModified" json:"last_modified,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *App) Reset()                    { *m = App{} }
func (m *App) String() string            { return proto.CompactTextString(m) }
func (*App) ProtoMessage()               {}
func (*App) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *App) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *App) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *App) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *App) GetRepoId() string {
	if m != nil && m.RepoId != nil {
		return *m.RepoId
	}
	return ""
}

func (m *App) GetCreated() *google_protobuf3.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *App) GetLastModified() *google_protobuf3.Timestamp {
	if m != nil {
		return m.LastModified
	}
	return nil
}

type AppId struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AppId) Reset()                    { *m = AppId{} }
func (m *AppId) String() string            { return proto.CompactTextString(m) }
func (*AppId) ProtoMessage()               {}
func (*AppId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AppId) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type AppListRequest struct {
	PageSize         *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,def=10" json:"page_size,omitempty"`
	PageNumber       *int32 `protobuf:"varint,2,opt,name=page_number,json=pageNumber,def=1" json:"page_number,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AppListRequest) Reset()                    { *m = AppListRequest{} }
func (m *AppListRequest) String() string            { return proto.CompactTextString(m) }
func (*AppListRequest) ProtoMessage()               {}
func (*AppListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

const Default_AppListRequest_PageSize int32 = 10
const Default_AppListRequest_PageNumber int32 = 1

func (m *AppListRequest) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return Default_AppListRequest_PageSize
}

func (m *AppListRequest) GetPageNumber() int32 {
	if m != nil && m.PageNumber != nil {
		return *m.PageNumber
	}
	return Default_AppListRequest_PageNumber
}

type AppListResponse struct {
	TotalItems       *int32 `protobuf:"varint,1,opt,name=total_items,json=totalItems" json:"total_items,omitempty"`
	TotalPages       *int32 `protobuf:"varint,2,opt,name=total_pages,json=totalPages" json:"total_pages,omitempty"`
	PageSize         *int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	CurrentPage      *int32 `protobuf:"varint,4,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	Items            []*App `protobuf:"bytes,5,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AppListResponse) Reset()                    { *m = AppListResponse{} }
func (m *AppListResponse) String() string            { return proto.CompactTextString(m) }
func (*AppListResponse) ProtoMessage()               {}
func (*AppListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AppListResponse) GetTotalItems() int32 {
	if m != nil && m.TotalItems != nil {
		return *m.TotalItems
	}
	return 0
}

func (m *AppListResponse) GetTotalPages() int32 {
	if m != nil && m.TotalPages != nil {
		return *m.TotalPages
	}
	return 0
}

func (m *AppListResponse) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *AppListResponse) GetCurrentPage() int32 {
	if m != nil && m.CurrentPage != nil {
		return *m.CurrentPage
	}
	return 0
}

func (m *AppListResponse) GetItems() []*App {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*App)(nil), "openpitrix.App")
	proto.RegisterType((*AppId)(nil), "openpitrix.AppId")
	proto.RegisterType((*AppListRequest)(nil), "openpitrix.AppListRequest")
	proto.RegisterType((*AppListResponse)(nil), "openpitrix.AppListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AppService service

type AppServiceClient interface {
	GetApp(ctx context.Context, in *AppId, opts ...grpc.CallOption) (*App, error)
	GetAppList(ctx context.Context, in *AppListRequest, opts ...grpc.CallOption) (*AppListResponse, error)
	CreateApp(ctx context.Context, in *App, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	UpdateApp(ctx context.Context, in *App, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	DeleteApp(ctx context.Context, in *AppId, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
}

type appServiceClient struct {
	cc *grpc.ClientConn
}

func NewAppServiceClient(cc *grpc.ClientConn) AppServiceClient {
	return &appServiceClient{cc}
}

func (c *appServiceClient) GetApp(ctx context.Context, in *AppId, opts ...grpc.CallOption) (*App, error) {
	out := new(App)
	err := grpc.Invoke(ctx, "/openpitrix.AppService/GetApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appServiceClient) GetAppList(ctx context.Context, in *AppListRequest, opts ...grpc.CallOption) (*AppListResponse, error) {
	out := new(AppListResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppService/GetAppList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appServiceClient) CreateApp(ctx context.Context, in *App, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/openpitrix.AppService/CreateApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appServiceClient) UpdateApp(ctx context.Context, in *App, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/openpitrix.AppService/UpdateApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appServiceClient) DeleteApp(ctx context.Context, in *AppId, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/openpitrix.AppService/DeleteApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AppService service

type AppServiceServer interface {
	GetApp(context.Context, *AppId) (*App, error)
	GetAppList(context.Context, *AppListRequest) (*AppListResponse, error)
	CreateApp(context.Context, *App) (*google_protobuf2.Empty, error)
	UpdateApp(context.Context, *App) (*google_protobuf2.Empty, error)
	DeleteApp(context.Context, *AppId) (*google_protobuf2.Empty, error)
}

func RegisterAppServiceServer(s *grpc.Server, srv AppServiceServer) {
	s.RegisterService(&_AppService_serviceDesc, srv)
}

func _AppService_GetApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServiceServer).GetApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppService/GetApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServiceServer).GetApp(ctx, req.(*AppId))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppService_GetAppList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServiceServer).GetAppList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppService/GetAppList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServiceServer).GetAppList(ctx, req.(*AppListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppService_CreateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(App)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServiceServer).CreateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppService/CreateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServiceServer).CreateApp(ctx, req.(*App))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppService_UpdateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(App)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServiceServer).UpdateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppService/UpdateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServiceServer).UpdateApp(ctx, req.(*App))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppService_DeleteApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServiceServer).DeleteApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppService/DeleteApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServiceServer).DeleteApp(ctx, req.(*AppId))
	}
	return interceptor(ctx, in, info, handler)
}

var _AppService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.AppService",
	HandlerType: (*AppServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetApp",
			Handler:    _AppService_GetApp_Handler,
		},
		{
			MethodName: "GetAppList",
			Handler:    _AppService_GetAppList_Handler,
		},
		{
			MethodName: "CreateApp",
			Handler:    _AppService_CreateApp_Handler,
		},
		{
			MethodName: "UpdateApp",
			Handler:    _AppService_UpdateApp_Handler,
		},
		{
			MethodName: "DeleteApp",
			Handler:    _AppService_DeleteApp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app.proto",
}

func init() { proto.RegisterFile("app.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 715 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xcf, 0x6e, 0xeb, 0x44,
	0x14, 0xc6, 0xe5, 0xe4, 0xba, 0xf7, 0x66, 0xd2, 0x7f, 0x0c, 0x6a, 0x6b, 0xa5, 0x48, 0x1d, 0x2c,
	0x21, 0x45, 0xa5, 0xb5, 0x9b, 0x88, 0x55, 0x36, 0xc8, 0x14, 0x84, 0x22, 0x68, 0x29, 0x2e, 0x55,
	0x97, 0xd1, 0xd4, 0x3e, 0x75, 0xa7, 0xd8, 0x33, 0x07, 0xcf, 0xb8, 0xb4, 0x45, 0x6c, 0x78, 0x04,
	0xe0, 0x69, 0x58, 0xf2, 0x0a, 0x2c, 0xd9, 0xb2, 0x64, 0xc1, 0x23, 0x20, 0x8f, 0x93, 0x36, 0x4d,
	0x8b, 0xd0, 0x5d, 0x25, 0xfe, 0xce, 0x77, 0x7e, 0xf3, 0xcd, 0xc9, 0x89, 0x49, 0x87, 0x23, 0x06,
	0x58, 0x2a, 0xa3, 0x28, 0x51, 0x08, 0x12, 0x85, 0x29, 0xc5, 0x6d, 0xef, 0xbd, 0x4c, 0xa9, 0x2c,
	0x87, 0x90, 0xa3, 0x08, 0xb9, 0x94, 0xca, 0x70, 0x23, 0x94, 0xd4, 0x8d, 0xb3, 0xb7, 0x67, 0x3f,
	0x92, 0xfd, 0x0c, 0xe4, 0xbe, 0xfe, 0x9e, 0x67, 0x19, 0x94, 0xa1, 0x42, 0xeb, 0x78, 0xc1, 0xbd,
	0x3d, 0x65, 0xd9, 0xa7, 0x8b, 0xea, 0x32, 0x84, 0x02, 0xcd, 0xdd, 0xb4, 0xb8, 0xb3, 0x58, 0x34,
	0xa2, 0x00, 0x6d, 0x78, 0x31, 0x4d, 0xe5, 0xff, 0xe9, 0x90, 0x76, 0x84, 0x48, 0x57, 0x49, 0x4b,
	0xa4, 0x9e, 0xc3, 0x5a, 0xfd, 0x4e, 0xdc, 0x12, 0x29, 0xa5, 0xe4, 0x95, 0xe4, 0x05, 0x78, 0x2d,
	0xe6, 0xf4, 0x3b, 0xb1, 0xfd, 0x4e, 0x19, 0xe9, 0xa6, 0xa0, 0x93, 0x52, 0xd8, 0x2c, 0x5e, 0xdb,
	0x96, 0xe6, 0x25, 0xba, 0x45, 0x5e, 0x97, 0x80, 0x6a, 0x22, 0x52, 0xef, 0x95, 0xad, 0x2e, 0xd5,
	0x8f, 0xe3, 0x94, 0x7e, 0x44, 0x5e, 0x27, 0x25, 0x70, 0x03, 0xa9, 0xe7, 0x32, 0xa7, 0xdf, 0x1d,
	0xf6, 0x82, 0x26, 0x59, 0x30, 0x4b, 0x16, 0x7c, 0x33, 0x4b, 0x16, 0xcf, 0xac, 0xf4, 0x63, 0xb2,
	0x92, 0x73, 0x6d, 0x26, 0x85, 0x4a, 0xc5, 0xa5, 0x80, 0xd4, 0x5b, 0xfa, 0xdf, 0xde, 0xe5, 0xba,
	0xe1, 0x68, 0xea, 0xf7, 0xb7, 0x88, 0x1b, 0x21, 0x8e, 0xd3, 0xc5, 0xeb, 0xf9, 0x67, 0x64, 0x35,
	0x42, 0xfc, 0x52, 0x68, 0x13, 0xc3, 0x77, 0x15, 0x68, 0x43, 0x77, 0x48, 0x07, 0x79, 0x06, 0x13,
	0x2d, 0xee, 0xc1, 0x73, 0x98, 0xd3, 0x77, 0x47, 0xad, 0xc1, 0x41, 0xfc, 0xa6, 0x16, 0x4f, 0xc5,
	0x3d, 0x50, 0x9f, 0x74, 0xad, 0x41, 0x56, 0xc5, 0x05, 0x94, 0x76, 0x30, 0xee, 0xc8, 0x19, 0xc4,
	0xa4, 0x56, 0x8f, 0xad, 0xe8, 0xff, 0xe6, 0x90, 0xb5, 0x07, 0xae, 0x46, 0x25, 0x35, 0xd0, 0x1d,
	0xd2, 0x35, 0xca, 0xf0, 0x7c, 0x22, 0x0c, 0x14, 0xba, 0x41, 0xc7, 0xc4, 0x4a, 0xe3, 0x5a, 0x79,
	0x34, 0xd4, 0x20, 0xdd, 0x80, 0xa7, 0x86, 0x93, 0x5a, 0xa1, 0xdb, 0xf3, 0xd1, 0xda, 0xb6, 0xfc,
	0x18, 0xeb, 0x7d, 0xb2, 0x9c, 0x54, 0x65, 0x09, 0xd2, 0xd8, 0x7e, 0x3b, 0x77, 0x37, 0xee, 0x4e,
	0xb5, 0x1a, 0x40, 0x3f, 0x20, 0x6e, 0x73, 0xb6, 0xcb, 0xda, 0xfd, 0xee, 0x70, 0x2d, 0x78, 0xdc,
	0xc4, 0x20, 0x42, 0x8c, 0x9b, 0xea, 0xf0, 0xd7, 0x36, 0x21, 0x11, 0xe2, 0x29, 0x94, 0x37, 0x22,
	0x01, 0x7a, 0x48, 0x96, 0x3e, 0x07, 0x53, 0xef, 0xc6, 0x3b, 0x0b, 0x0d, 0xe3, 0xb4, 0xb7, 0xc8,
	0xf0, 0x37, 0x7e, 0xfa, 0xe3, 0xaf, 0x5f, 0x5a, 0x6b, 0x74, 0x25, 0xbc, 0x19, 0x84, 0x1c, 0x51,
	0x87, 0x3f, 0x88, 0xf4, 0x47, 0x7a, 0x4e, 0x48, 0x03, 0xa9, 0x47, 0x42, 0x7b, 0x0b, 0x5d, 0x73,
	0xf3, 0xef, 0x6d, 0xbf, 0x58, 0x6b, 0x66, 0xe8, 0xaf, 0x5b, 0x3a, 0xa1, 0x6f, 0x66, 0x74, 0x3a,
	0x26, 0x9d, 0x43, 0xbb, 0x25, 0x75, 0xc0, 0xc5, 0x34, 0xbd, 0xcd, 0x67, 0x1b, 0xf2, 0x59, 0xfd,
	0xa7, 0xf0, 0xdf, 0xb5, 0x9c, 0x15, 0xff, 0x81, 0x33, 0x72, 0x76, 0xe9, 0x31, 0xe9, 0x9c, 0x61,
	0xfa, 0xb6, 0x28, 0xcf, 0xa2, 0xa8, 0xff, 0xf4, 0xc2, 0x35, 0xef, 0x88, 0x74, 0x3e, 0x85, 0x1c,
	0x1a, 0xde, 0x0b, 0xb3, 0xfb, 0x2f, 0xe2, 0x74, 0x84, 0xbb, 0x4f, 0x89, 0x9f, 0xfc, 0xe3, 0xfc,
	0x1c, 0xfd, 0xed, 0xd0, 0xdf, 0x1d, 0xb2, 0xf9, 0x15, 0x82, 0x3c, 0xb1, 0x28, 0x16, 0x21, 0xb2,
	0xd9, 0x2f, 0x65, 0x22, 0xc9, 0xea, 0x53, 0x18, 0xe6, 0xdc, 0x5c, 0xaa, 0xb2, 0x60, 0x46, 0x31,
	0xe4, 0xc9, 0xb7, 0x3c, 0x03, 0xc6, 0x65, 0xca, 0x52, 0xc0, 0x5c, 0xdd, 0x31, 0x8e, 0x98, 0x8b,
	0xa4, 0x79, 0x79, 0x30, 0x21, 0x8d, 0x62, 0x45, 0x95, 0x1b, 0x81, 0x39, 0x80, 0xbc, 0x11, 0xa5,
	0x92, 0x05, 0x48, 0xc3, 0x74, 0x95, 0x5c, 0x31, 0xae, 0xd9, 0xd7, 0x42, 0x66, 0x87, 0xb9, 0xaa,
	0xd2, 0x3d, 0x16, 0x9d, 0x9f, 0xee, 0xb1, 0x2f, 0xaa, 0x0b, 0x28, 0x25, 0x18, 0xd0, 0x0c, 0x4c,
	0x12, 0xf8, 0x1f, 0x12, 0xda, 0xe4, 0x29, 0x41, 0xdc, 0xb2, 0x93, 0x52, 0x5d, 0x43, 0x62, 0xe8,
	0xc6, 0x95, 0x31, 0xa8, 0x47, 0x61, 0x38, 0x77, 0x6d, 0xa1, 0x86, 0xee, 0x41, 0x70, 0x10, 0x0c,
	0x76, 0x1d, 0x67, 0xb8, 0x3e, 0x97, 0x22, 0xbc, 0xd6, 0x4a, 0x8e, 0x9e, 0x29, 0xff, 0x06, 0x00,
	0x00, 0xff, 0xff, 0xe0, 0xbc, 0x1a, 0xfa, 0x36, 0x05, 0x00, 0x00,
}
