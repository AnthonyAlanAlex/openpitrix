// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app_runtime.proto

package openpitrix

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf3 "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/mwitkow/go-proto-validators"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AppRuntime struct {
	Id               *string                     `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Name             *string                     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description      *string                     `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Url              *string                     `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	Created          *google_protobuf3.Timestamp `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	LastModified     *google_protobuf3.Timestamp `protobuf:"bytes,6,opt,name=last_modified,json=lastModified" json:"last_modified,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *AppRuntime) Reset()                    { *m = AppRuntime{} }
func (m *AppRuntime) String() string            { return proto.CompactTextString(m) }
func (*AppRuntime) ProtoMessage()               {}
func (*AppRuntime) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *AppRuntime) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *AppRuntime) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *AppRuntime) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *AppRuntime) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *AppRuntime) GetCreated() *google_protobuf3.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *AppRuntime) GetLastModified() *google_protobuf3.Timestamp {
	if m != nil {
		return m.LastModified
	}
	return nil
}

type AppRuntimeLabel struct {
	AppRuntimeId     *string `protobuf:"bytes,1,req,name=app_runtime_id,json=appRuntimeId" json:"app_runtime_id,omitempty"`
	LabelKey         *string `protobuf:"bytes,2,req,name=label_key,json=labelKey" json:"label_key,omitempty"`
	LabelValue       *string `protobuf:"bytes,3,req,name=label_value,json=labelValue" json:"label_value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AppRuntimeLabel) Reset()                    { *m = AppRuntimeLabel{} }
func (m *AppRuntimeLabel) String() string            { return proto.CompactTextString(m) }
func (*AppRuntimeLabel) ProtoMessage()               {}
func (*AppRuntimeLabel) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *AppRuntimeLabel) GetAppRuntimeId() string {
	if m != nil && m.AppRuntimeId != nil {
		return *m.AppRuntimeId
	}
	return ""
}

func (m *AppRuntimeLabel) GetLabelKey() string {
	if m != nil && m.LabelKey != nil {
		return *m.LabelKey
	}
	return ""
}

func (m *AppRuntimeLabel) GetLabelValue() string {
	if m != nil && m.LabelValue != nil {
		return *m.LabelValue
	}
	return ""
}

type AppRuntimeId struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AppRuntimeId) Reset()                    { *m = AppRuntimeId{} }
func (m *AppRuntimeId) String() string            { return proto.CompactTextString(m) }
func (*AppRuntimeId) ProtoMessage()               {}
func (*AppRuntimeId) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *AppRuntimeId) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type AppRuntimeListRequest struct {
	PageSize         *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,def=10" json:"page_size,omitempty"`
	PageNumber       *int32 `protobuf:"varint,2,opt,name=page_number,json=pageNumber,def=1" json:"page_number,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AppRuntimeListRequest) Reset()                    { *m = AppRuntimeListRequest{} }
func (m *AppRuntimeListRequest) String() string            { return proto.CompactTextString(m) }
func (*AppRuntimeListRequest) ProtoMessage()               {}
func (*AppRuntimeListRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

const Default_AppRuntimeListRequest_PageSize int32 = 10
const Default_AppRuntimeListRequest_PageNumber int32 = 1

func (m *AppRuntimeListRequest) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return Default_AppRuntimeListRequest_PageSize
}

func (m *AppRuntimeListRequest) GetPageNumber() int32 {
	if m != nil && m.PageNumber != nil {
		return *m.PageNumber
	}
	return Default_AppRuntimeListRequest_PageNumber
}

type AppRuntimeListResponse struct {
	TotalItems       *int32        `protobuf:"varint,1,opt,name=total_items,json=totalItems" json:"total_items,omitempty"`
	TotalPages       *int32        `protobuf:"varint,2,opt,name=total_pages,json=totalPages" json:"total_pages,omitempty"`
	PageSize         *int32        `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	CurrentPage      *int32        `protobuf:"varint,4,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	Items            []*AppRuntime `protobuf:"bytes,5,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *AppRuntimeListResponse) Reset()                    { *m = AppRuntimeListResponse{} }
func (m *AppRuntimeListResponse) String() string            { return proto.CompactTextString(m) }
func (*AppRuntimeListResponse) ProtoMessage()               {}
func (*AppRuntimeListResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *AppRuntimeListResponse) GetTotalItems() int32 {
	if m != nil && m.TotalItems != nil {
		return *m.TotalItems
	}
	return 0
}

func (m *AppRuntimeListResponse) GetTotalPages() int32 {
	if m != nil && m.TotalPages != nil {
		return *m.TotalPages
	}
	return 0
}

func (m *AppRuntimeListResponse) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *AppRuntimeListResponse) GetCurrentPage() int32 {
	if m != nil && m.CurrentPage != nil {
		return *m.CurrentPage
	}
	return 0
}

func (m *AppRuntimeListResponse) GetItems() []*AppRuntime {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*AppRuntime)(nil), "openpitrix.AppRuntime")
	proto.RegisterType((*AppRuntimeLabel)(nil), "openpitrix.AppRuntimeLabel")
	proto.RegisterType((*AppRuntimeId)(nil), "openpitrix.AppRuntimeId")
	proto.RegisterType((*AppRuntimeListRequest)(nil), "openpitrix.AppRuntimeListRequest")
	proto.RegisterType((*AppRuntimeListResponse)(nil), "openpitrix.AppRuntimeListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AppRuntimeService service

type AppRuntimeServiceClient interface {
	GetAppRuntime(ctx context.Context, in *AppRuntimeId, opts ...grpc.CallOption) (*AppRuntime, error)
	// Returns a list containing all app runtimes.
	GetAppRuntimeList(ctx context.Context, in *AppRuntimeListRequest, opts ...grpc.CallOption) (*AppRuntimeListResponse, error)
	CreateAppRuntime(ctx context.Context, in *AppRuntime, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	UpdateAppRuntime(ctx context.Context, in *AppRuntime, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	DeleteAppRuntime(ctx context.Context, in *AppRuntimeId, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
}

type appRuntimeServiceClient struct {
	cc *grpc.ClientConn
}

func NewAppRuntimeServiceClient(cc *grpc.ClientConn) AppRuntimeServiceClient {
	return &appRuntimeServiceClient{cc}
}

func (c *appRuntimeServiceClient) GetAppRuntime(ctx context.Context, in *AppRuntimeId, opts ...grpc.CallOption) (*AppRuntime, error) {
	out := new(AppRuntime)
	err := grpc.Invoke(ctx, "/openpitrix.AppRuntimeService/GetAppRuntime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appRuntimeServiceClient) GetAppRuntimeList(ctx context.Context, in *AppRuntimeListRequest, opts ...grpc.CallOption) (*AppRuntimeListResponse, error) {
	out := new(AppRuntimeListResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppRuntimeService/GetAppRuntimeList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appRuntimeServiceClient) CreateAppRuntime(ctx context.Context, in *AppRuntime, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/openpitrix.AppRuntimeService/CreateAppRuntime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appRuntimeServiceClient) UpdateAppRuntime(ctx context.Context, in *AppRuntime, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/openpitrix.AppRuntimeService/UpdateAppRuntime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appRuntimeServiceClient) DeleteAppRuntime(ctx context.Context, in *AppRuntimeId, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/openpitrix.AppRuntimeService/DeleteAppRuntime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AppRuntimeService service

type AppRuntimeServiceServer interface {
	GetAppRuntime(context.Context, *AppRuntimeId) (*AppRuntime, error)
	// Returns a list containing all app runtimes.
	GetAppRuntimeList(context.Context, *AppRuntimeListRequest) (*AppRuntimeListResponse, error)
	CreateAppRuntime(context.Context, *AppRuntime) (*google_protobuf2.Empty, error)
	UpdateAppRuntime(context.Context, *AppRuntime) (*google_protobuf2.Empty, error)
	DeleteAppRuntime(context.Context, *AppRuntimeId) (*google_protobuf2.Empty, error)
}

func RegisterAppRuntimeServiceServer(s *grpc.Server, srv AppRuntimeServiceServer) {
	s.RegisterService(&_AppRuntimeService_serviceDesc, srv)
}

func _AppRuntimeService_GetAppRuntime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRuntimeId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppRuntimeServiceServer).GetAppRuntime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppRuntimeService/GetAppRuntime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppRuntimeServiceServer).GetAppRuntime(ctx, req.(*AppRuntimeId))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppRuntimeService_GetAppRuntimeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRuntimeListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppRuntimeServiceServer).GetAppRuntimeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppRuntimeService/GetAppRuntimeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppRuntimeServiceServer).GetAppRuntimeList(ctx, req.(*AppRuntimeListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppRuntimeService_CreateAppRuntime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRuntime)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppRuntimeServiceServer).CreateAppRuntime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppRuntimeService/CreateAppRuntime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppRuntimeServiceServer).CreateAppRuntime(ctx, req.(*AppRuntime))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppRuntimeService_UpdateAppRuntime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRuntime)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppRuntimeServiceServer).UpdateAppRuntime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppRuntimeService/UpdateAppRuntime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppRuntimeServiceServer).UpdateAppRuntime(ctx, req.(*AppRuntime))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppRuntimeService_DeleteAppRuntime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRuntimeId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppRuntimeServiceServer).DeleteAppRuntime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppRuntimeService/DeleteAppRuntime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppRuntimeServiceServer).DeleteAppRuntime(ctx, req.(*AppRuntimeId))
	}
	return interceptor(ctx, in, info, handler)
}

var _AppRuntimeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.AppRuntimeService",
	HandlerType: (*AppRuntimeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAppRuntime",
			Handler:    _AppRuntimeService_GetAppRuntime_Handler,
		},
		{
			MethodName: "GetAppRuntimeList",
			Handler:    _AppRuntimeService_GetAppRuntimeList_Handler,
		},
		{
			MethodName: "CreateAppRuntime",
			Handler:    _AppRuntimeService_CreateAppRuntime_Handler,
		},
		{
			MethodName: "UpdateAppRuntime",
			Handler:    _AppRuntimeService_UpdateAppRuntime_Handler,
		},
		{
			MethodName: "DeleteAppRuntime",
			Handler:    _AppRuntimeService_DeleteAppRuntime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app_runtime.proto",
}

func init() { proto.RegisterFile("app_runtime.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 763 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x5d, 0x8f, 0xdb, 0x44,
	0x14, 0x95, 0x93, 0x0d, 0x74, 0x6f, 0xb6, 0x34, 0x19, 0xba, 0x8b, 0x9b, 0x56, 0x4a, 0x6a, 0xf1,
	0x10, 0x96, 0xda, 0x4e, 0xa2, 0x0a, 0xd1, 0xbc, 0x54, 0x29, 0x20, 0xb4, 0xe2, 0x6b, 0xe5, 0x02,
	0x0f, 0x40, 0x1b, 0x26, 0xf6, 0xad, 0x3b, 0xad, 0xed, 0x19, 0x3c, 0xe3, 0x6c, 0x77, 0xab, 0xbe,
	0xf0, 0x0b, 0x50, 0xf9, 0x53, 0xbc, 0xf3, 0x03, 0x90, 0x10, 0xbf, 0x81, 0x67, 0x34, 0x63, 0x6f,
	0xe3, 0x66, 0xd3, 0xb2, 0x52, 0x9f, 0x32, 0x39, 0xf7, 0xcc, 0x39, 0xf7, 0xcc, 0x9d, 0x31, 0x74,
	0xa9, 0x10, 0xf3, 0xbc, 0xc8, 0x14, 0x4b, 0xd1, 0x13, 0x39, 0x57, 0x9c, 0x00, 0x17, 0x98, 0x09,
	0xa6, 0x72, 0xf6, 0xa4, 0x77, 0x2d, 0xe6, 0x3c, 0x4e, 0xd0, 0xa7, 0x82, 0xf9, 0x34, 0xcb, 0xb8,
	0xa2, 0x8a, 0xf1, 0x4c, 0x96, 0xcc, 0xde, 0x0d, 0xf3, 0x13, 0xba, 0x31, 0x66, 0xae, 0x3c, 0xa2,
	0x71, 0x8c, 0xb9, 0xcf, 0x85, 0x61, 0x6c, 0x60, 0x5f, 0xad, 0xb4, 0xcc, 0xbf, 0x45, 0xf1, 0xc0,
	0xc7, 0x54, 0xa8, 0xe3, 0xaa, 0xd8, 0x5f, 0x2f, 0xea, 0x86, 0xa4, 0xa2, 0xa9, 0xa8, 0x08, 0x1f,
	0xc5, 0x4c, 0x3d, 0x2c, 0x16, 0x5e, 0xc8, 0x53, 0x3f, 0x3d, 0x62, 0xea, 0x31, 0x3f, 0xf2, 0x63,
	0xee, 0x9a, 0xa2, 0xbb, 0xa4, 0x09, 0x8b, 0xa8, 0xe2, 0xb9, 0xf4, 0x5f, 0x2c, 0xab, 0x7d, 0xdd,
	0x33, 0x8d, 0x38, 0xff, 0x5a, 0x00, 0x33, 0x21, 0x82, 0x32, 0x35, 0xf9, 0x00, 0x1a, 0x2c, 0xb2,
	0xad, 0x41, 0x63, 0xb8, 0x7d, 0xe7, 0xca, 0xdf, 0x7f, 0xf5, 0x77, 0xe1, 0xdd, 0xfb, 0xb9, 0x72,
	0x7f, 0xa4, 0xee, 0xc9, 0xcc, 0xfd, 0x61, 0xe4, 0xde, 0xba, 0xf7, 0xf4, 0xe3, 0x67, 0xef, 0x07,
	0x0d, 0x16, 0x11, 0x02, 0x5b, 0x19, 0x4d, 0xd1, 0x6e, 0x0c, 0xac, 0xe1, 0x76, 0x60, 0xd6, 0x64,
	0x00, 0xed, 0x08, 0x65, 0x98, 0x33, 0x13, 0xdc, 0x6e, 0x9a, 0x52, 0x1d, 0x22, 0x1d, 0x68, 0x16,
	0x79, 0x62, 0x6f, 0x99, 0x8a, 0x5e, 0x92, 0x9b, 0xf0, 0x76, 0x98, 0x23, 0x55, 0x18, 0xd9, 0xad,
	0x81, 0x35, 0x6c, 0x4f, 0x7a, 0x5e, 0x99, 0xdf, 0x3b, 0xcd, 0xef, 0x7d, 0x7b, 0x9a, 0x3f, 0x38,
	0xa5, 0x92, 0xdb, 0x70, 0x31, 0xa1, 0x52, 0xcd, 0x53, 0x1e, 0xb1, 0x07, 0x0c, 0x23, 0xfb, 0xad,
	0xff, 0xdd, 0xbb, 0xa3, 0x37, 0x7c, 0x55, 0xf1, 0x9d, 0xdf, 0x2c, 0xb8, 0xb4, 0x0a, 0xfe, 0x25,
	0x5d, 0x60, 0x42, 0x6e, 0xc3, 0x3b, 0xb5, 0x2b, 0x30, 0x3f, 0xcf, 0x49, 0xec, 0xd0, 0x17, 0x1a,
	0x07, 0x11, 0xb9, 0x0a, 0xdb, 0x89, 0x56, 0x9a, 0x3f, 0xc6, 0x63, 0xbb, 0xa1, 0xf7, 0x06, 0x17,
	0x0c, 0xf0, 0x05, 0x1e, 0x93, 0x3e, 0xb4, 0xcb, 0xe2, 0x92, 0x26, 0x05, 0xda, 0x4d, 0x53, 0x06,
	0x03, 0x7d, 0xaf, 0x11, 0xe7, 0x16, 0xec, 0xcc, 0xea, 0x6a, 0xe7, 0x1f, 0x86, 0xf3, 0x13, 0xec,
	0xd6, 0xc2, 0x30, 0xa9, 0x02, 0xfc, 0xa5, 0x40, 0xa9, 0x48, 0x1f, 0xb6, 0x05, 0x8d, 0x71, 0x2e,
	0xd9, 0x09, 0xda, 0xd6, 0xc0, 0x1a, 0xb6, 0xa6, 0x8d, 0xf1, 0x28, 0xb8, 0xa0, 0xc1, 0xbb, 0xec,
	0x04, 0x89, 0x03, 0x6d, 0x43, 0xc8, 0x8a, 0x74, 0x81, 0xb9, 0x99, 0x66, 0x6b, 0x6a, 0x8d, 0x03,
	0xd0, 0xe8, 0xd7, 0x06, 0x74, 0xfe, 0xb0, 0x60, 0x6f, 0x5d, 0x5e, 0x0a, 0x9e, 0x49, 0xd4, 0xa1,
	0x14, 0x57, 0x34, 0x99, 0x33, 0x85, 0xa9, 0x2c, 0x1d, 0x02, 0x30, 0xd0, 0x81, 0x46, 0x56, 0x04,
	0xad, 0x27, 0x4b, 0xfd, 0x8a, 0x70, 0xa8, 0x11, 0x7d, 0x66, 0xab, 0x0e, 0x9b, 0xa6, 0xbc, 0xea,
	0xee, 0x3a, 0xec, 0x84, 0x45, 0x9e, 0x63, 0xa6, 0xcc, 0x7e, 0x73, 0x6f, 0x5a, 0x41, 0xbb, 0xc2,
	0xb4, 0x00, 0xb9, 0x01, 0xad, 0xd2, 0xbb, 0x35, 0x68, 0x0e, 0xdb, 0x93, 0x3d, 0x6f, 0xf5, 0x64,
	0xbd, 0x55, 0xd3, 0x41, 0x49, 0x9a, 0x3c, 0xdf, 0x82, 0xee, 0x0a, 0xbd, 0x8b, 0xf9, 0x92, 0x85,
	0x48, 0xe6, 0x70, 0xf1, 0x73, 0x54, 0xb5, 0x77, 0x60, 0x6f, 0x56, 0x39, 0x88, 0x7a, 0xaf, 0xd0,
	0x77, 0xae, 0xfd, 0xfa, 0xe7, 0x3f, 0xbf, 0x37, 0xf6, 0xc8, 0x65, 0x7f, 0x39, 0xf6, 0xa9, 0x10,
	0xd5, 0x25, 0x92, 0xfe, 0x53, 0x16, 0x3d, 0x23, 0x12, 0xba, 0x2f, 0x19, 0xe8, 0x33, 0x24, 0xd7,
	0x37, 0x4b, 0xd5, 0xc6, 0xd7, 0x73, 0x5e, 0x47, 0x29, 0x47, 0xe0, 0xbc, 0x67, 0x9c, 0xbb, 0xe4,
	0xd2, 0x9a, 0x33, 0xb9, 0x0f, 0x9d, 0x4f, 0xcc, 0x73, 0xa9, 0x05, 0x7b, 0x45, 0xfb, 0xbd, 0xbd,
	0x33, 0x0f, 0xe7, 0x33, 0xfd, 0x45, 0x72, 0x7a, 0x46, 0xfc, 0xb2, 0xb3, 0x2e, 0x3e, 0xb5, 0xf6,
	0x49, 0x08, 0x9d, 0xef, 0x44, 0xf4, 0x66, 0xfa, 0x7d, 0xa3, 0x7f, 0xc5, 0xd9, 0x78, 0x6c, 0xda,
	0x64, 0x01, 0x9d, 0x4f, 0x31, 0xc1, 0x97, 0x4c, 0x5e, 0x37, 0x9d, 0xcd, 0x36, 0xd5, 0x74, 0xf6,
	0x37, 0xda, 0xdc, 0xf9, 0xf9, 0xf9, 0xec, 0x1e, 0xb9, 0xe9, 0x7c, 0x08, 0xe4, 0x1b, 0x81, 0xd9,
	0x21, 0xcb, 0x91, 0x3d, 0x19, 0x1c, 0xe6, 0xfc, 0x11, 0x86, 0x8a, 0xec, 0x3e, 0x54, 0x4a, 0xc8,
	0xa9, 0xef, 0xd7, 0x3c, 0x19, 0x9f, 0xb4, 0x46, 0xde, 0xc8, 0x1b, 0xef, 0x5b, 0xd6, 0xa4, 0x43,
	0x85, 0x48, 0x58, 0x68, 0x3e, 0xab, 0xfe, 0x23, 0xc9, 0xb3, 0xe9, 0x19, 0xe4, 0xbf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x3c, 0x3e, 0xed, 0x36, 0x5b, 0x06, 0x00, 0x00,
}
