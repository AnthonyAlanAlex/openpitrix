// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"openpitrix.io/openpitrix/pkg/swagger/models"
)

// GetClustersClusterIDReader is a Reader for the GetClustersClusterID structure.
type GetClustersClusterIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClustersClusterIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetClustersClusterIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetClustersClusterIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetClustersClusterIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetClustersClusterIDOK creates a GetClustersClusterIDOK with default headers values
func NewGetClustersClusterIDOK() *GetClustersClusterIDOK {
	return &GetClustersClusterIDOK{}
}

/*GetClustersClusterIDOK handles this case with default header values.

A cluster
*/
type GetClustersClusterIDOK struct {
	Payload *models.Cluster
}

func (o *GetClustersClusterIDOK) Error() string {
	return fmt.Sprintf("[GET /clusters/{clusterId}][%d] getClustersClusterIdOK  %+v", 200, o.Payload)
}

func (o *GetClustersClusterIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Cluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersClusterIDNotFound creates a GetClustersClusterIDNotFound with default headers values
func NewGetClustersClusterIDNotFound() *GetClustersClusterIDNotFound {
	return &GetClustersClusterIDNotFound{}
}

/*GetClustersClusterIDNotFound handles this case with default header values.

The cluster does not exist.
*/
type GetClustersClusterIDNotFound struct {
}

func (o *GetClustersClusterIDNotFound) Error() string {
	return fmt.Sprintf("[GET /clusters/{clusterId}][%d] getClustersClusterIdNotFound ", 404)
}

func (o *GetClustersClusterIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClustersClusterIDInternalServerError creates a GetClustersClusterIDInternalServerError with default headers values
func NewGetClustersClusterIDInternalServerError() *GetClustersClusterIDInternalServerError {
	return &GetClustersClusterIDInternalServerError{}
}

/*GetClustersClusterIDInternalServerError handles this case with default header values.

An unexpected error occured.
*/
type GetClustersClusterIDInternalServerError struct {
	Payload *models.Error
}

func (o *GetClustersClusterIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /clusters/{clusterId}][%d] getClustersClusterIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetClustersClusterIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
