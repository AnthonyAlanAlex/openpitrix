// Code generated by go-swagger; DO NOT EDIT.

package app_runtimes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"openpitrix.io/openpitrix/pkg/swagger/models"
)

// NewPostAppruntimesParams creates a new PostAppruntimesParams object
// with the default values initialized.
func NewPostAppruntimesParams() *PostAppruntimesParams {
	var ()
	return &PostAppruntimesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAppruntimesParamsWithTimeout creates a new PostAppruntimesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAppruntimesParamsWithTimeout(timeout time.Duration) *PostAppruntimesParams {
	var ()
	return &PostAppruntimesParams{

		timeout: timeout,
	}
}

// NewPostAppruntimesParamsWithContext creates a new PostAppruntimesParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostAppruntimesParamsWithContext(ctx context.Context) *PostAppruntimesParams {
	var ()
	return &PostAppruntimesParams{

		Context: ctx,
	}
}

// NewPostAppruntimesParamsWithHTTPClient creates a new PostAppruntimesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostAppruntimesParamsWithHTTPClient(client *http.Client) *PostAppruntimesParams {
	var ()
	return &PostAppruntimesParams{
		HTTPClient: client,
	}
}

/*PostAppruntimesParams contains all the parameters to send to the API endpoint
for the post appruntimes operation typically these are written to a http.Request
*/
type PostAppruntimesParams struct {

	/*Appruntime
	  The runtime to create.

	*/
	Appruntime *models.AppRuntime

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post appruntimes params
func (o *PostAppruntimesParams) WithTimeout(timeout time.Duration) *PostAppruntimesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post appruntimes params
func (o *PostAppruntimesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post appruntimes params
func (o *PostAppruntimesParams) WithContext(ctx context.Context) *PostAppruntimesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post appruntimes params
func (o *PostAppruntimesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post appruntimes params
func (o *PostAppruntimesParams) WithHTTPClient(client *http.Client) *PostAppruntimesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post appruntimes params
func (o *PostAppruntimesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAppruntime adds the appruntime to the post appruntimes params
func (o *PostAppruntimesParams) WithAppruntime(appruntime *models.AppRuntime) *PostAppruntimesParams {
	o.SetAppruntime(appruntime)
	return o
}

// SetAppruntime adds the appruntime to the post appruntimes params
func (o *PostAppruntimesParams) SetAppruntime(appruntime *models.AppRuntime) {
	o.Appruntime = appruntime
}

// WriteToRequest writes these params to a swagger request
func (o *PostAppruntimesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Appruntime == nil {
		o.Appruntime = new(models.AppRuntime)
	}

	if err := r.SetBodyParam(o.Appruntime); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
