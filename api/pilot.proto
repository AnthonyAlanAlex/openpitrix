// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";
package openpitrix;

// set go package name to pb
option go_package = "pb";

import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "OpenPireix Project";
		version: "0.0.1";
		contact: {
			name: "OpenPireix Project";
			url: "https://openpitrix.io";
		};
	};
	schemes: HTTP;
	consumes: "application/json";
	produces: "application/json";
};


message SendTaskRequest {
	string task_id = 1;
	string task_action = 2;
	string directive = 3;
}

message SendTaskResponse {
	string task_id = 1;
}

message GetTaskStatusRequest {
	repeated string task_id = 1;
}

message TaskStatus {
	google.protobuf.StringValue task_id = 1;
	google.protobuf.StringValue task_status = 2;
}

message GetTaskStatusResponse {
	uint32 total_count = 1;
	repeated TaskStatus task_status_set = 2;
}

service PilotManager {
	rpc SendTask (SendTaskRequest) returns (SendTaskResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "send task"
		};
		option (google.api.http) = {
			post: "/v1/pilots"
			body: "*"
		};
	}
	rpc GetTaskStatus (GetTaskStatusRequest) returns (GetTaskStatusResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "get task status"
		};
		option (google.api.http) = {
			get: "/v1/pilots"
		};
	}
}
