// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";

package openpitrix.drone;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service DroneService {
	rpc GetInfo (Empty) returns (Info);
	rpc GetConfdConfig (Empty) returns (ConfdConfig);
	rpc GetBackendConfig (Empty) returns (ConfdBackendConfig);
	rpc StartConfd (StartConfdRequest) returns (Empty);
	rpc StopConfd (Empty) returns (Empty);
	rpc GetConfdStatus (Empty) returns (ConfdStatus);

	rpc GetTemplateFiles (GetTemplateFilesRequest) returns (GetTemplateFilesResponse);
	rpc GetValues (GetValuesRequest) returns (GetValuesResponse);
}

service DroneServiceForFrontgate {
	rpc SubscribeCmdStatus (SubscribeCmdStatusRequest) returns (stream SubscribeCmdStatusResponse);
	rpc GetRegisterCmdStatus (GetRegisterCmdStatusRequest) returns (GetRegisterCmdStatusResponse);
}

message Info {
	string drone_ip = 1;
	ConfdConfig confd_config = 2;
	ConfdBackendConfig confd_backend_config = 3;
}

// See https://godoc.org/openpitrix.io/libconfd#Config
message ConfdConfig {
	google.protobuf.StringValue conf_dir = 1;
	google.protobuf.Int32Value interval = 2;
	google.protobuf.BoolValue noop = 3;
	google.protobuf.StringValue prefix = 4;
	google.protobuf.BoolValue sync_only = 5;
	google.protobuf.StringValue log_level = 6;
}

// See https://godoc.org/openpitrix.io/libconfd#BackendConfig
message ConfdBackendConfig {
	google.protobuf.StringValue type = 1;
	repeated string host = 2;
	google.protobuf.StringValue username = 3;
	google.protobuf.StringValue password = 4;
	google.protobuf.StringValue client_ca_keys = 5;
	google.protobuf.StringValue client_cert = 6;
	google.protobuf.StringValue client_key = 7;
}

message StartConfdRequest {
	ConfdConfig confd_config = 1;
	ConfdBackendConfig confd_backend_config = 2;
}

message ConfdStatus {
	string process_id = 1;
	string status = 2;
	google.protobuf.Timestamp up_time = 3;
}

message SubscribeCmdStatusRequest {
	string subtask_id = 1;
}
message SubscribeCmdStatusResponse {
	string status = 1;
}

message GetRegisterCmdStatusRequest {
	string subtask_id = 1;
}
message GetRegisterCmdStatusResponse {
	string status = 1;
}

message GetTemplateFilesRequest {
	string regexp = 1;
}
message GetTemplateFilesResponse {
	repeated string files = 1;
}

message GetValuesRequest {
	repeated string keys = 1;
}
message GetValuesResponse {
	map<string,string> values = 1;
}

message Empty {}
