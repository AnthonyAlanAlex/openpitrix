// Copyright 2017 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto2";

// OpenPitrix App Service
//
// An open platform to package and deploy applications into multiple environment such as QingCloud, AWS, Kubernetes etc.
package openpitrix;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "annotations.proto";

// ----------------------------------------------------------------------------
// base type
// ----------------------------------------------------------------------------

message App {
	required string id = 1 [
		(openapiv2_field_schema) = {
			pattern: "app-[a-zA-Z0-9]{8}";
		}
	];
	optional string name = 2;
	optional string description = 3;	
	optional string repo_id = 4;
	optional google.protobuf.Timestamp created = 5;
	optional google.protobuf.Timestamp last_modified = 6;
}

// ----------------------------------------------------------------------------
// rest api type
// ----------------------------------------------------------------------------

message AppId {
	required string id = 1 [
		(openapiv2_field_schema) = {
			pattern: "app-[a-zA-Z0-9]{8}";
		}
	];
}

message AppListRequest {
	optional int32 page_size = 1 [default = 10];
	optional int32 page_number = 2 [default = 1];
}
message AppListResponse {
	optional int32 total_items = 1;
	optional int32 total_pages = 2;
	optional int32 page_size = 3;
	optional int32 current_page = 4;

	repeated App items = 5;
}

// ----------------------------------------------------------------------------
// app service
// ----------------------------------------------------------------------------

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		version: "0.0.1";
		contact: {
			name: "OpenPireix Project";
			url: "https://openpitrix.io";
		};
	};

	schemes: HTTP;

	consumes: "application/json";
	produces: "application/json";
};

service AppService {
	rpc GetApp(AppId) returns (App) {
		option (google.api.http) = {
			get: "/v1/apps/{id}"
		};
	}
	rpc GetAppList(AppListRequest) returns (AppListResponse) {
		option (google.api.http) = {
			get: "/v1/apps"
		};
	}
	
	rpc CreateApp(App) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/v1/apps"
			body: "*"
		};
	}
	rpc UpdateApp(App) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/v1/apps/{id}"
			body: "*"
		};
	}
	rpc DeleteApp(AppId) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/v1/apps/{id}"
		};
	}
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
