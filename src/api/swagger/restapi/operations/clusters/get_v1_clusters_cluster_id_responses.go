// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"AppHub/src/api/swagger/models"
)

// GetV1ClustersClusterIDOKCode is the HTTP code returned for type GetV1ClustersClusterIDOK
const GetV1ClustersClusterIDOKCode int = 200

/*GetV1ClustersClusterIDOK A cluster

swagger:response getV1ClustersClusterIdOK
*/
type GetV1ClustersClusterIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewGetV1ClustersClusterIDOK creates GetV1ClustersClusterIDOK with default headers values
func NewGetV1ClustersClusterIDOK() *GetV1ClustersClusterIDOK {
	return &GetV1ClustersClusterIDOK{}
}

// WithPayload adds the payload to the get v1 clusters cluster Id o k response
func (o *GetV1ClustersClusterIDOK) WithPayload(payload *models.Cluster) *GetV1ClustersClusterIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 clusters cluster Id o k response
func (o *GetV1ClustersClusterIDOK) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1ClustersClusterIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1ClustersClusterIDNotFoundCode is the HTTP code returned for type GetV1ClustersClusterIDNotFound
const GetV1ClustersClusterIDNotFoundCode int = 404

/*GetV1ClustersClusterIDNotFound The cluster does not exist.

swagger:response getV1ClustersClusterIdNotFound
*/
type GetV1ClustersClusterIDNotFound struct {
}

// NewGetV1ClustersClusterIDNotFound creates GetV1ClustersClusterIDNotFound with default headers values
func NewGetV1ClustersClusterIDNotFound() *GetV1ClustersClusterIDNotFound {
	return &GetV1ClustersClusterIDNotFound{}
}

// WriteResponse to the client
func (o *GetV1ClustersClusterIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}

// GetV1ClustersClusterIDInternalServerErrorCode is the HTTP code returned for type GetV1ClustersClusterIDInternalServerError
const GetV1ClustersClusterIDInternalServerErrorCode int = 500

/*GetV1ClustersClusterIDInternalServerError An unexpected error occured.

swagger:response getV1ClustersClusterIdInternalServerError
*/
type GetV1ClustersClusterIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetV1ClustersClusterIDInternalServerError creates GetV1ClustersClusterIDInternalServerError with default headers values
func NewGetV1ClustersClusterIDInternalServerError() *GetV1ClustersClusterIDInternalServerError {
	return &GetV1ClustersClusterIDInternalServerError{}
}

// WithPayload adds the payload to the get v1 clusters cluster Id internal server error response
func (o *GetV1ClustersClusterIDInternalServerError) WithPayload(payload *models.Error) *GetV1ClustersClusterIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 clusters cluster Id internal server error response
func (o *GetV1ClustersClusterIDInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1ClustersClusterIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
