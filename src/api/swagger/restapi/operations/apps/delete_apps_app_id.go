// Code generated by go-swagger; DO NOT EDIT.

package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteAppsAppIDHandlerFunc turns a function with the right signature into a delete apps app ID handler
type DeleteAppsAppIDHandlerFunc func(DeleteAppsAppIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteAppsAppIDHandlerFunc) Handle(params DeleteAppsAppIDParams) middleware.Responder {
	return fn(params)
}

// DeleteAppsAppIDHandler interface for that can handle valid delete apps app ID params
type DeleteAppsAppIDHandler interface {
	Handle(DeleteAppsAppIDParams) middleware.Responder
}

// NewDeleteAppsAppID creates a new http.Handler for the delete apps app ID operation
func NewDeleteAppsAppID(ctx *middleware.Context, handler DeleteAppsAppIDHandler) *DeleteAppsAppID {
	return &DeleteAppsAppID{Context: ctx, Handler: handler}
}

/*DeleteAppsAppID swagger:route DELETE /apps/{appId} apps deleteAppsAppId

Deletes an app

Delete a single app identified via its id

*/
type DeleteAppsAppID struct {
	Context *middleware.Context
	Handler DeleteAppsAppIDHandler
}

func (o *DeleteAppsAppID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteAppsAppIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
