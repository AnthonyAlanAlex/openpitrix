// Code generated by go-swagger; DO NOT EDIT.

package repos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"AppHub/src/api/swagger/models"
)

// GetV1ReposOKCode is the HTTP code returned for type GetV1ReposOK
const GetV1ReposOKCode int = 200

/*GetV1ReposOK A list of repos

swagger:response getV1ReposOK
*/
type GetV1ReposOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetV1ReposOKBody `json:"body,omitempty"`
}

// NewGetV1ReposOK creates GetV1ReposOK with default headers values
func NewGetV1ReposOK() *GetV1ReposOK {
	return &GetV1ReposOK{}
}

// WithPayload adds the payload to the get v1 repos o k response
func (o *GetV1ReposOK) WithPayload(payload *models.GetV1ReposOKBody) *GetV1ReposOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 repos o k response
func (o *GetV1ReposOK) SetPayload(payload *models.GetV1ReposOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1ReposOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1ReposInternalServerErrorCode is the HTTP code returned for type GetV1ReposInternalServerError
const GetV1ReposInternalServerErrorCode int = 500

/*GetV1ReposInternalServerError An unexpected error occured.

swagger:response getV1ReposInternalServerError
*/
type GetV1ReposInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetV1ReposInternalServerError creates GetV1ReposInternalServerError with default headers values
func NewGetV1ReposInternalServerError() *GetV1ReposInternalServerError {
	return &GetV1ReposInternalServerError{}
}

// WithPayload adds the payload to the get v1 repos internal server error response
func (o *GetV1ReposInternalServerError) WithPayload(payload *models.Error) *GetV1ReposInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 repos internal server error response
func (o *GetV1ReposInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1ReposInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
