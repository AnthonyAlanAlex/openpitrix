// Code generated by go-swagger; DO NOT EDIT.

package repos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"AppHub/src/api/swagger/models"
)

// DeleteV1ReposRepoIDNoContentCode is the HTTP code returned for type DeleteV1ReposRepoIDNoContent
const DeleteV1ReposRepoIDNoContentCode int = 204

/*DeleteV1ReposRepoIDNoContent Repo successfully deleted.

swagger:response deleteV1ReposRepoIdNoContent
*/
type DeleteV1ReposRepoIDNoContent struct {
}

// NewDeleteV1ReposRepoIDNoContent creates DeleteV1ReposRepoIDNoContent with default headers values
func NewDeleteV1ReposRepoIDNoContent() *DeleteV1ReposRepoIDNoContent {
	return &DeleteV1ReposRepoIDNoContent{}
}

// WriteResponse to the client
func (o *DeleteV1ReposRepoIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

// DeleteV1ReposRepoIDNotFoundCode is the HTTP code returned for type DeleteV1ReposRepoIDNotFound
const DeleteV1ReposRepoIDNotFoundCode int = 404

/*DeleteV1ReposRepoIDNotFound The repo does not exist.

swagger:response deleteV1ReposRepoIdNotFound
*/
type DeleteV1ReposRepoIDNotFound struct {
}

// NewDeleteV1ReposRepoIDNotFound creates DeleteV1ReposRepoIDNotFound with default headers values
func NewDeleteV1ReposRepoIDNotFound() *DeleteV1ReposRepoIDNotFound {
	return &DeleteV1ReposRepoIDNotFound{}
}

// WriteResponse to the client
func (o *DeleteV1ReposRepoIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}

// DeleteV1ReposRepoIDInternalServerErrorCode is the HTTP code returned for type DeleteV1ReposRepoIDInternalServerError
const DeleteV1ReposRepoIDInternalServerErrorCode int = 500

/*DeleteV1ReposRepoIDInternalServerError An unexpected error occured.

swagger:response deleteV1ReposRepoIdInternalServerError
*/
type DeleteV1ReposRepoIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteV1ReposRepoIDInternalServerError creates DeleteV1ReposRepoIDInternalServerError with default headers values
func NewDeleteV1ReposRepoIDInternalServerError() *DeleteV1ReposRepoIDInternalServerError {
	return &DeleteV1ReposRepoIDInternalServerError{}
}

// WithPayload adds the payload to the delete v1 repos repo Id internal server error response
func (o *DeleteV1ReposRepoIDInternalServerError) WithPayload(payload *models.Error) *DeleteV1ReposRepoIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete v1 repos repo Id internal server error response
func (o *DeleteV1ReposRepoIDInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteV1ReposRepoIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
