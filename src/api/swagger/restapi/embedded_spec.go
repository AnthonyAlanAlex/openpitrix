// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json",
    "application/yaml"
  ],
  "produces": [
    "application/json",
    "application/yaml"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "An open platform to package and deploy applications into multiple environment such as QingCloud, AWS, Kubernetes etc.",
    "title": "AppHub",
    "version": "0.0.1"
  },
  "basePath": "/v1",
  "paths": {
    "/appruntimes": {
      "get": {
        "description": "Returns a list containing all app runtimes.",
        "tags": [
          "app-runtimes"
        ],
        "summary": "Gets some app runtimes",
        "parameters": [
          {
            "minimum": 0,
            "exclusiveMinimum": true,
            "multipleOf": 10,
            "type": "integer",
            "format": "int32",
            "default": 20,
            "description": "Number of clusters returned",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 1,
            "description": "Page number",
            "name": "pageNumber",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of app runtimes",
            "schema": {
              "$ref": "#/definitions/getAppruntimesOKBody"
            }
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new app runtime to the runtimes list.",
        "tags": [
          "app-runtimes"
        ],
        "summary": "Creates an app runtime",
        "parameters": [
          {
            "description": "The runtime to create.",
            "name": "appruntime",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/appRuntime"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "App runtime succesfully created."
          },
          "400": {
            "description": "App runtime couldn't have been created."
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/appruntimes/{appRuntimeId}": {
      "get": {
        "description": "Returns a single runtime by its id",
        "tags": [
          "app-runtimes"
        ],
        "summary": "Gets an app runtime",
        "parameters": [
          {
            "type": "string",
            "description": "The app runtime's id",
            "name": "appRuntimeId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "An app runtime",
            "schema": {
              "$ref": "#/definitions/appRuntime"
            }
          },
          "404": {
            "description": "The app runtime does not exist."
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a single app runtime identified via its id",
        "tags": [
          "app-runtimes"
        ],
        "summary": "Deletes an app runtime",
        "parameters": [
          {
            "type": "string",
            "description": "The app runtime's id",
            "name": "appRuntimeId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "App runtime successfully deleted."
          },
          "404": {
            "description": "The app runtime does not exist."
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/apps": {
      "get": {
        "description": "Returns a list containing all apps.",
        "tags": [
          "apps"
        ],
        "summary": "Gets some apps",
        "parameters": [
          {
            "minimum": 0,
            "exclusiveMinimum": true,
            "multipleOf": 10,
            "type": "integer",
            "format": "int32",
            "default": 20,
            "description": "Number of clusters returned",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 1,
            "description": "Page number",
            "name": "pageNumber",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of apps",
            "schema": {
              "$ref": "#/definitions/getAppsOKBody"
            }
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new app to the app runtimes list.",
        "tags": [
          "apps"
        ],
        "summary": "Creates an app",
        "parameters": [
          {
            "description": "The app to create.",
            "name": "app",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/app"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "App succesfully created."
          },
          "400": {
            "description": "App couldn't have been created."
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/apps/{appId}": {
      "get": {
        "description": "Returns a single app by its id",
        "tags": [
          "apps"
        ],
        "summary": "Gets an app",
        "parameters": [
          {
            "type": "string",
            "description": "The app's id",
            "name": "appId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "An app",
            "schema": {
              "$ref": "#/definitions/app"
            }
          },
          "404": {
            "description": "The app does not exist."
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a single app identified via its id",
        "tags": [
          "apps"
        ],
        "summary": "Deletes an app",
        "parameters": [
          {
            "type": "string",
            "description": "The app's id",
            "name": "appId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "App successfully deleted."
          },
          "404": {
            "description": "The app does not exist."
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters": {
      "get": {
        "description": "Returns a list containing all clusters.",
        "tags": [
          "clusters"
        ],
        "summary": "Gets some clusters",
        "parameters": [
          {
            "minimum": 0,
            "exclusiveMinimum": true,
            "multipleOf": 10,
            "type": "integer",
            "format": "int32",
            "default": 20,
            "description": "Number of clusters returned",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 1,
            "description": "Page number",
            "name": "pageNumber",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Cluster",
            "schema": {
              "$ref": "#/definitions/getClustersOKBody"
            }
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new cluster to the clusters list.",
        "tags": [
          "clusters"
        ],
        "summary": "Creates a cluster",
        "parameters": [
          {
            "description": "The cluster to create.",
            "name": "cluster",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cluster succesfully created."
          },
          "400": {
            "description": "Cluster couldn't have been created."
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{clusterId}": {
      "get": {
        "description": "Returns a single cluster by its id",
        "tags": [
          "clusters"
        ],
        "summary": "Gets a cluster",
        "parameters": [
          {
            "type": "string",
            "description": "The cluster's id",
            "name": "clusterId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A cluster",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "404": {
            "description": "The cluster does not exist."
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a single cluster identified via its id",
        "tags": [
          "clusters"
        ],
        "summary": "Deletes a cluster",
        "parameters": [
          {
            "type": "string",
            "description": "The cluster's id",
            "name": "clusterId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Cluster successfully deleted."
          },
          "404": {
            "description": "The cluster does not exist."
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/repos": {
      "get": {
        "description": "Returns a list containing all repos.",
        "tags": [
          "repos"
        ],
        "summary": "Gets some repos",
        "parameters": [
          {
            "minimum": 0,
            "exclusiveMinimum": true,
            "multipleOf": 10,
            "type": "integer",
            "format": "int32",
            "default": 20,
            "description": "Number of clusters returned",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 1,
            "description": "Page number",
            "name": "pageNumber",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of repos",
            "schema": {
              "$ref": "#/definitions/getReposOKBody"
            }
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new repo to the repos list.",
        "tags": [
          "repos"
        ],
        "summary": "Creates a repo",
        "parameters": [
          {
            "description": "The repo to create.",
            "name": "repo",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/repo"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Repo succesfully created."
          },
          "400": {
            "description": "Repo couldn't have been created."
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/repos/{repoId}": {
      "get": {
        "description": "Returns a single repo by its id",
        "tags": [
          "repos"
        ],
        "summary": "Gets a repo",
        "parameters": [
          {
            "type": "string",
            "description": "The repo's id",
            "name": "repoId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A repo",
            "schema": {
              "$ref": "#/definitions/repo"
            }
          },
          "404": {
            "description": "The repo does not exist."
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a single repo identified via its id",
        "tags": [
          "repos"
        ],
        "summary": "Deletes a repo",
        "parameters": [
          {
            "type": "string",
            "description": "The repo's id",
            "name": "repoId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Repo successfully deleted."
          },
          "404": {
            "description": "The repo does not exist."
          },
          "500": {
            "description": "An unexpected error occured.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "app": {
      "required": [
        "appId"
      ],
      "properties": {
        "appId": {
          "type": "string",
          "maxLength": 12,
          "minLength": 12,
          "pattern": "app-[a-zA-Z0-9]{11}"
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "example": "2017-09-17T12:36:58.014Z"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "appRuntime": {
      "required": [
        "appRuntimeId"
      ],
      "properties": {
        "appRuntimeId": {
          "type": "string",
          "maxLength": 11,
          "minLength": 11,
          "pattern": "rt-[a-zA-Z0-9]{11}"
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "example": "2017-09-17T12:36:58.014Z"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "appRuntimes": {
      "properties": {
        "items": {
          "$ref": "#/definitions/appRuntimesItems"
        }
      }
    },
    "appRuntimesItems": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "/Users/chai/go/src/apphub/src/api/swagger-spec/types.yaml#/AppRuntime"
      },
      "x-go-gen-location": "models"
    },
    "apps": {
      "properties": {
        "items": {
          "$ref": "#/definitions/appsItems"
        }
      }
    },
    "appsItems": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "/Users/chai/go/src/apphub/src/api/swagger-spec/types.yaml#/App"
      },
      "x-go-gen-location": "models"
    },
    "cluster": {
      "required": [
        "clusterId"
      ],
      "properties": {
        "clusterId": {
          "type": "string",
          "maxLength": 11,
          "minLength": 11,
          "pattern": "cl-[a-zA-Z0-9]{11}"
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "example": "2017-09-17T12:36:58.014Z"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "clusters": {
      "properties": {
        "items": {
          "$ref": "#/definitions/clustersItems"
        }
      }
    },
    "clustersItems": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "/Users/chai/go/src/apphub/src/api/swagger-spec/types.yaml#/Cluster"
      },
      "x-go-gen-location": "models"
    },
    "error": {
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "DBERR",
            "NTERR",
            "UNERR"
          ]
        },
        "message": {
          "type": "string"
        }
      }
    },
    "getAppruntimesOKBody": {
      "allOf": [
        {
          "$ref": "#/definitions/appRuntimes"
        },
        {
          "$ref": "#/definitions/paging"
        }
      ],
      "x-go-gen-location": "operations"
    },
    "getAppsOKBody": {
      "allOf": [
        {
          "$ref": "#/definitions/apps"
        },
        {
          "$ref": "#/definitions/paging"
        }
      ],
      "x-go-gen-location": "operations"
    },
    "getClustersOKBody": {
      "allOf": [
        {
          "$ref": "#/definitions/clusters"
        },
        {
          "$ref": "#/definitions/paging"
        }
      ],
      "x-go-gen-location": "operations"
    },
    "getReposOKBody": {
      "allOf": [
        {
          "$ref": "#/definitions/repos"
        },
        {
          "$ref": "#/definitions/paging"
        }
      ],
      "x-go-gen-location": "operations"
    },
    "paging": {
      "properties": {
        "currentPage": {
          "type": "integer"
        },
        "pageSize": {
          "type": "integer"
        },
        "totalItems": {
          "type": "integer"
        },
        "totalPages": {
          "type": "integer"
        }
      }
    },
    "repo": {
      "required": [
        "repoId"
      ],
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "example": "2017-09-17T12:36:58.014Z"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "repoId": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13,
          "pattern": "repo-[a-zA-Z0-9]{11}"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "repos": {
      "properties": {
        "items": {
          "$ref": "#/definitions/reposItems"
        }
      }
    },
    "reposItems": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "/Users/chai/go/src/apphub/src/api/swagger-spec/types.yaml#/Repo"
      },
      "x-go-gen-location": "models"
    }
  }
}`))
}
