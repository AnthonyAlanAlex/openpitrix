apiVersion: v1
kind: Service
metadata:
  name: openpitrix-db
  namespace: default
  labels:
    app: openpitrix
    tier: db
spec:
  selector:
    app: openpitrix
    tier: db
  #clusterIP: None
  ports:
  - name: tcp
    protocol: TCP
    port: 3306
    targetPort: 3306
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pv-claim
  namespace: default
  labels:
    app: openpitrix
    tier: db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: openpitrix-db
  namespace: default
  labels:
    app: openpitrix
spec:
  selector:
    matchLabels:
      app: openpitrix
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: openpitrix
        tier: db
    spec:
      containers:
      - name: openpitrix-db
        image: mysql:5.7.21
        imagePullPolicy: IfNotPresent
        args:
          - "--ignore-db-dir=lost+found"
        env:
          # $ kubectl create secret generic mysql-pass --from-file=password.txt
          # make sure password.txt does not have a trailing newline
        - name: MYSQL_ROOT_PASSWORD
          value: "password"
        - name: MYSQL_ROOT_HOST
          value: "%"
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: db-persistent-storage
          mountPath: /var/lib/mysql
        - name: db-init
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: db-persistent-storage
        persistentVolumeClaim:
          claimName: db-pv-claim
      - configMap:
          name: openpitrix-ddl
        name: db-init
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openpitrix-ddl
  namespace: default
  labels:
    app: openpitrix
data:
  app.sql: |-
    CREATE DATABASE IF NOT EXISTS app DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci;

  cluster.sql: |-
    CREATE DATABASE IF NOT EXISTS cluster DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci;

  job.sql: |-
    CREATE DATABASE IF NOT EXISTS job DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci;

  repo.sql: |-
    CREATE DATABASE IF NOT EXISTS repo DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci;

  runtime.sql: |-
    CREATE DATABASE IF NOT EXISTS runtime DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci;

  task.sql: |-
    CREATE DATABASE IF NOT EXISTS task DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci;
